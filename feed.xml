<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ko"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" hreflang="ko" /><updated>2025-06-17T01:35:14+00:00</updated><id>/feed.xml</id><title type="html">Roseanne</title><subtitle>Hydejack is a boutique Jekyll theme for hackers, nerds, and academics, with a focus on personal sites that are meant to impress.
</subtitle><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><entry><title type="html">달리기 경주</title><link href="/codingtest/programmers/lv.1/2025-06-17-codingtest_84/" rel="alternate" type="text/html" title="달리기 경주" /><published>2025-06-17T00:00:00+00:00</published><updated>2025-06-17T01:34:30+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_84</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-17-codingtest_84/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>얀에서는 매년 달리기 경주가 열립니다. 해설진들은 선수들이 자기 바로 앞의 선수를 추월할 때 추월한 선수의 이름을 부릅니다. 예를 들어 1등부터 3등까지 “mumu”, “soe”, “poe” 선수들이 순서대로 달리고 있을 때, 해설진이 “soe”선수를 불렀다면 2등인 “soe” 선수가 1등인 “mumu” 선수를 추월했다는 것입니다. 즉 “soe” 선수가 1등, “mumu” 선수가 2등으로 바뀝니다.</p>

<p>선수들의 이름이 1등부터 현재 등수 순서대로 담긴 문자열 배열 players와 해설진이 부른 이름을 담은 문자열 배열 callings가 매개변수로 주어질 때, 경주가 끝났을 때 선수들의 이름을 1등부터 등수 순서대로 배열에 담아 return 하는 solution 함수를 완성해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>5 ≤ players의 길이 ≤ 50,000
    <ul>
      <li>players[i]는 i번째 선수의 이름을 의미합니다.</li>
      <li>players의 원소들은 알파벳 소문자로만 이루어져 있습니다.</li>
      <li>players에는 중복된 값이 들어가 있지 않습니다.</li>
      <li>3 ≤ players[i]의 길이 ≤ 10</li>
    </ul>
  </li>
  <li>2 ≤ callings의 길이 ≤ 1,000,000
    <ul>
      <li>callings는 players의 원소들로만 이루어져 있습니다.</li>
      <li>경주 진행중 1등인 선수의 이름은 불리지 않습니다.</li>
    </ul>
  </li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/178871.png" width="800" height="70" /></p>

<p>입출력 예 #1</p>

<ul>
  <li>4등인 “kai” 선수가 2번 추월하여 2등이 되고 앞서 3등, 2등인 “poe”, “soe” 선수는 4등, 3등이 됩니다. 5등인 “mine” 선수가 2번 추월하여 4등, 3등인 “poe”, “soe” 선수가 5등, 4등이 되고 경주가 끝납니다. 1등부터 배열에 담으면 [“mumu”, “kai”, “mine”, “soe”, “poe”]이 됩니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;unordered_map&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">players</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">callings</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">;</span>
    
    <span class="n">unordered_map</span><span class="o">&lt;</span><span class="n">string</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="n">Player</span><span class="p">;</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">players</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="n">Player</span><span class="p">[</span><span class="n">players</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
    
    <span class="k">for</span><span class="p">(</span><span class="k">const</span> <span class="n">string</span><span class="o">&amp;</span> <span class="n">call</span> <span class="o">:</span> <span class="n">callings</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="n">Player</span><span class="p">[</span><span class="n">call</span><span class="p">];</span>
        <span class="k">if</span><span class="p">(</span><span class="n">index</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">string</span> <span class="n">front</span> <span class="o">=</span> <span class="n">players</span><span class="p">[</span><span class="n">index</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span>
            <span class="n">swap</span><span class="p">(</span><span class="n">players</span><span class="p">[</span><span class="n">index</span><span class="p">],</span> <span class="n">players</span><span class="p">[</span><span class="n">index</span><span class="o">-</span><span class="mi">1</span><span class="p">]);</span>
            
            <span class="n">Player</span><span class="p">[</span><span class="n">call</span><span class="p">]</span> <span class="o">=</span> <span class="n">index</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
            <span class="n">Player</span><span class="p">[</span><span class="n">front</span><span class="p">]</span> <span class="o">=</span> <span class="n">index</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="n">answer</span> <span class="o">=</span> <span class="n">players</span><span class="p">;</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 X
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 36분 30초
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
문제 소감
</p>

<ul>
  <li>시간 복잡도를 줄이기 위해 데이터를 하나씩 검사하는 것이 아닌 해시 테이블을 이용하여 탐색이 쉽도록 하는 것이 좋다.</li>
  <li>해시 테이블을 사용하면 다중 for 문을 이용할 필요가 없고 바로 원하는 파일을 찾을 수 있다.</li>
</ul>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 178871]]></summary></entry><entry><title type="html">개인정보 수집 유효기간</title><link href="/codingtest/programmers/lv.1/2025-06-16-codingtest_83/" rel="alternate" type="text/html" title="개인정보 수집 유효기간" /><published>2025-06-16T00:00:00+00:00</published><updated>2025-06-17T01:34:30+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_83</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-16-codingtest_83/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>고객의 약관 동의를 얻어서 수집된 1~n번으로 분류되는 개인정보 n개가 있습니다. 약관 종류는 여러 가지 있으며 각 약관마다 개인정보 보관 유효기간이 정해져 있습니다. 당신은 각 개인정보가 어떤 약관으로 수집됐는지 알고 있습니다. 수집된 개인정보는 유효기간 전까지만 보관 가능하며, 유효기간이 지났다면 반드시 파기해야 합니다.</p>

<p>예를 들어, A라는 약관의 유효기간이 12 달이고, 2021년 1월 5일에 수집된 개인정보가 A약관으로 수집되었다면 해당 개인정보는 2022년 1월 4일까지 보관 가능하며 2022년 1월 5일부터 파기해야 할 개인정보입니다.
당신은 오늘 날짜로 파기해야 할 개인정보 번호들을 구하려 합니다.</p>

<p>모든 달은 28일까지 있다고 가정합니다.</p>

<p>다음은 오늘 날짜가 2022.05.19일 때의 예시입니다.</p>

<p><img src="/assets/img/codingtest/150370_1.png" width="200" height="160" /></p>

<p><br /></p>

<p><img src="/assets/img/codingtest/150370_2.png" width="350" height="190" /></p>

<ul>
  <li>첫 번째 개인정보는 A약관에 의해 2021년 11월 1일까지 보관 가능하며, 유효기간이 지났으므로 파기해야 할 개인정보입니다.</li>
  <li>두 번째 개인정보는 B약관에 의해 2022년 6월 28일까지 보관 가능하며, 유효기간이 지나지 않았으므로 아직 보관 가능합니다.</li>
  <li>세 번째 개인정보는 C약관에 의해 2022년 5월 18일까지 보관 가능하며, 유효기간이 지났으므로 파기해야 할 개인정보입니다.</li>
  <li>네 번째 개인정보는 C약관에 의해 2022년 5월 19일까지 보관 가능하며, 유효기간이 지나지 않았으므로 아직 보관 가능합니다.</li>
</ul>

<p>따라서 파기해야 할 개인정보 번호는 [1, 3]입니다.</p>

<p>오늘 날짜를 의미하는 문자열 today, 약관의 유효기간을 담은 1차원 문자열 배열 terms와 수집된 개인정보의 정보를 담은 1차원 문자열 배열 privacies가 매개변수로 주어집니다. 이때 파기해야 할 개인정보의 번호를 오름차순으로 1차원 정수 배열에 담아 return 하도록 solution 함수를 완성해 주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>today는 “YYYY.MM.DD” 형태로 오늘 날짜를 나타냅니다.</li>
  <li>1 ≤ terms의 길이 ≤ 20
    <ul>
      <li>terms의 원소는 “약관 종류 유효기간” 형태의 약관 종류와 유효기간을 공백 하나로 구분한 문자열입니다.</li>
      <li>약관 종류는 A~Z중 알파벳 대문자 하나이며, terms 배열에서 약관 종류는 중복되지 않습니다.</li>
      <li>유효기간은 개인정보를 보관할 수 있는 달 수를 나타내는 정수이며, 1 이상 100 이하입니다.</li>
    </ul>
  </li>
  <li>1 ≤ privacies의 길이 ≤ 100
    <ul>
      <li>privacies[i]는 i+1번 개인정보의 수집 일자와 약관 종류를 나타냅니다.</li>
      <li>privacies의 원소는 “날짜 약관 종류” 형태의 날짜와 약관 종류를 공백 하나로 구분한 문자열입니다.</li>
      <li>날짜는 “YYYY.MM.DD” 형태의 개인정보가 수집된 날짜를 나타내며, today 이전의 날짜만 주어집니다.</li>
      <li>privacies의 약관 종류는 항상 terms에 나타난 약관 종류만 주어집니다.</li>
    </ul>
  </li>
  <li>today와 privacies에 등장하는 날짜의 YYYY는 연도, MM은 월, DD는 일을 나타내며 점(.) 하나로 구분되어 있습니다.
    <ul>
      <li>2000 ≤ YYYY ≤ 2022</li>
      <li>1 ≤ MM ≤ 12</li>
      <li>MM이 한 자릿수인 경우 앞에 0이 붙습니다.</li>
      <li>1 ≤ DD ≤ 28</li>
      <li>DD가 한 자릿수인 경우 앞에 0이 붙습니다.</li>
    </ul>
  </li>
  <li>파기해야 할 개인정보가 하나 이상 존재하는 입력만 주어집니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/150370_3.png" width="900" height="160" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>문제 예시와 같습니다.</li>
</ul>

<p>입출력 예 #2</p>

<p><img src="/assets/img/codingtest/150370_4.png" width="200" height="120" /></p>

<p><br /></p>

<p><img src="/assets/img/codingtest/150370_5.png" width="350" height="230" /></p>

<ul>
  <li>오늘 날짜는 2020년 1월 1일입니다.
    <ul>
      <li>첫 번째 개인정보는 D약관에 의해 2019년 5월 28일까지 보관 가능하며, 유효기간이 지났으므로 파기해야 할 개인정보입니다.</li>
      <li>두 번째 개인정보는 Z약관에 의해 2020년 2월 14일까지 보관 가능하며, 유효기간이 지나지 않았으므로 아직 보관 가능합니다.</li>
      <li>세 번째 개인정보는 D약관에 의해 2020년 1월 1일까지 보관 가능하며, 유효기간이 지나지 않았으므로 아직 보관 가능합니다.</li>
      <li>네 번째 개인정보는 D약관에 의해 2019년 11월 28일까지 보관 가능하며, 유효기간이 지났으므로 파기해야 할 개인정보입니다.</li>
      <li>다섯 번째 개인정보는 Z약관에 의해 2019년 3월 27일까지 보관 가능하며, 유효기간이 지났으므로 파기해야 할 개인정보입니다.</li>
    </ul>
  </li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">string</span> <span class="n">today</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">terms</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">privacies</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">;</span>
    
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;&gt;</span> <span class="n">List</span><span class="p">(</span><span class="n">terms</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="s">""</span><span class="p">));</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">Dates</span><span class="p">(</span><span class="n">privacies</span><span class="p">.</span><span class="n">size</span><span class="p">());</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">Today</span><span class="p">;</span>
    
    <span class="n">string</span> <span class="n">temp</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">today</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">today</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'.'</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Today</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">stoi</span><span class="p">(</span><span class="n">temp</span><span class="p">));</span>
            <span class="n">temp</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span>
            <span class="n">temp</span> <span class="o">+=</span> <span class="n">today</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">today</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
            <span class="n">Today</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">stoi</span><span class="p">(</span><span class="n">temp</span><span class="p">));</span>
    <span class="p">}</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">terms</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">List</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">terms</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">];</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">terms</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">size</span><span class="p">()</span> <span class="o">==</span> <span class="mi">3</span><span class="p">)</span>
            <span class="n">List</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">terms</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">2</span><span class="p">];</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">terms</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
                <span class="n">List</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">+=</span> <span class="n">terms</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="p">];</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">privacies</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">string</span> <span class="n">temp</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">privacies</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">privacies</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'.'</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">push_back</span><span class="p">(</span><span class="n">stoi</span><span class="p">(</span><span class="n">temp</span><span class="p">));</span>
                <span class="n">temp</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">privacies</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="p">]</span> <span class="o">==</span> <span class="sc">' '</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">push_back</span><span class="p">(</span><span class="n">stoi</span><span class="p">(</span><span class="n">temp</span><span class="p">));</span>
                <span class="n">temp</span> <span class="o">=</span> <span class="n">privacies</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="n">temp</span> <span class="o">+=</span> <span class="n">privacies</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="p">];</span>
            <span class="p">}</span>
        <span class="p">}</span>
        
        
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">List</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">temp</span> <span class="o">==</span> <span class="n">List</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span>
               <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">+=</span> <span class="n">stoi</span><span class="p">(</span><span class="n">List</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="mi">1</span><span class="p">]);</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">Dates</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">12</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">+=</span> <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">/</span> <span class="mi">12</span><span class="p">;</span>
            <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">%</span> <span class="mi">12</span><span class="p">;</span>
            
            <span class="k">if</span><span class="p">(</span><span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">-=</span> <span class="mi">1</span><span class="p">;</span>
                <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">12</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span> <span class="o">-=</span> <span class="mi">1</span><span class="p">;</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">-=</span> <span class="mi">1</span><span class="p">;</span>
            <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="mi">28</span><span class="p">;</span>
            <span class="k">if</span><span class="p">(</span><span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">-=</span> <span class="mi">1</span><span class="p">;</span>
                <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">12</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">Dates</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">Today</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
            <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">Today</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
            <span class="k">continue</span><span class="p">;</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">Today</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
                <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">Today</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
                <span class="k">continue</span><span class="p">;</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">Today</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
                    <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 1시간 12분 
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 150370]]></summary></entry><entry><title type="html">유연근무제</title><link href="/codingtest/programmers/lv.1/2025-06-12-codingtest_82/" rel="alternate" type="text/html" title="유연근무제" /><published>2025-06-12T00:10:00+00:00</published><updated>2025-06-17T01:34:30+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_82</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-12-codingtest_82/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>프로그래머스 사이트를 운영하는 그렙에서는 재택근무와 함께 출근 희망 시각을 자유롭게 정하는 유연근무제를 시행하고 있습니다. 제도 정착을 위해 오늘부터 일주일 동안 각자 설정한 출근 희망 시각에 늦지 않고 출근한 직원들에게 상품을 주는 이벤트를 진행하려고 합니다.</p>

<p>직원들은 일주일동안 자신이 설정한 출근 희망 시각 + 10분까지 어플로 출근해야 합니다. 예를 들어 출근 희망 시각이 9시 58분인 직원은 10시 8분까지 출근해야 합니다. 단, 토요일, 일요일의 출근 시각은 이벤트에 영향을 끼치지 않습니다. 직원들은 매일 한 번씩만 어플로 출근하고, 모든 시각은 시에 100을 곱하고 분을 더한 정수로 표현됩니다. 예를 들어 10시 13분은 1013이 되고 9시 58분은 958이 됩니다.</p>

<p>당신은 직원들이 설정한 출근 희망 시각과 실제로 출근한 기록을 바탕으로 상품을 받을 직원이 몇 명인지 알고 싶습니다.</p>

<p>직원 n명이 설정한 출근 희망 시각을 담은 1차원 정수 배열 schedules, 직원들이 일주일 동안 출근한 시각을 담은 2차원 정수 배열 timelogs, 이벤트를 시작한 요일을 의미하는 정수 startday가 매개변수로 주어집니다. 이때 상품을 받을 직원의 수를 return 하도록 solution 함수를 완성해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>1 ≤ schedules의 길이 = n ≤ 1,000
    <ul>
      <li>schedules[i]는 i + 1번째 직원이 설정한 출근 희망 시각을 의미합니다.</li>
      <li>700 ≤ schedules[i] ≤ 1100</li>
    </ul>
  </li>
  <li>1 ≤ timelogs의 길이 = n ≤ 1,000
    <ul>
      <li>timelogs[i]의 길이 = 7</li>
      <li>timelogs[i][j]는 i + 1번째 직원이 이벤트 j + 1일차에 출근한 시각을 의미합니다.</li>
      <li>600 ≤ timelogs[i][j] ≤ 2359</li>
    </ul>
  </li>
  <li>1 ≤ startday ≤ 7
    <ul>
      <li>1은 월요일, 2는 화요일, 3은 수요일, 4는 목요일, 5는 금요일, 6은 토요일, 7은 일요일에 이벤트를 시작했음을 의미합니다.</li>
    </ul>
  </li>
  <li>출근 희망 시각과 실제로 출근한 시각을 100으로 나눈 나머지는 59 이하입니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
테스트 케이스 구성 안내
</p>

<p>아래는 테스트 케이스 구성을 나타냅니다. 각 그룹 내의 테스트 케이스를 모두 통과하면 해당 그룹에 할당된 점수를 획득할 수 있습니다.</p>

<p><img src="/assets/img/codingtest/388351_1.png" width="700" height="210" /></p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/388351_2.png" width="750" height="180" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>이벤트를 시작한 날은 금요일입니다. 직원 3명의 일주일 간 출근 시각을 나타내면 다음과 같습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/388351_3.png" width="250" height="145" /></p>

<p><br /></p>

<p><img src="/assets/img/codingtest/388351_4.png" width="470" height="140" /></p>

<ul>
  <li>모든 직원이 평일에 늦지 않고 출근했습니다. 따라서 상품을 받을 직원은 3명입니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>이벤트를 시작한 날은 월요일입니다. 직원 4명의 일주일 간 출근 시각을 나타내면 다음과 같습니다. 취소선으로 표시된 시각이 출근이 필요한 평일에 지각한 날입니다.</li>
</ul>

<p><img src="/assets/img/codingtest/388351_5.png" width="250" height="170" /></p>

<p><br /></p>

<p><img src="/assets/img/codingtest/388351_6.png" width="470" height="170" /></p>

<ul>
  <li>첫 번째, 세 번째 직원이 평일에 늦지 않고 출근했습니다. 따라서 상품을 받을 직원은 2명입니다</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">schedules</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">timelogs</span><span class="p">,</span> <span class="kt">int</span> <span class="n">startday</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">schedules</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">temp</span><span class="p">;</span>
                
        <span class="k">if</span><span class="p">((</span><span class="n">schedules</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="mi">10</span><span class="p">)</span> <span class="o">%</span> <span class="mi">100</span> <span class="o">&gt;=</span> <span class="mi">60</span><span class="p">)</span>
            <span class="n">temp</span> <span class="o">=</span> <span class="p">(</span><span class="n">schedules</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">/</span><span class="mi">100</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="mi">100</span> <span class="o">+</span> <span class="p">(</span><span class="n">schedules</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="mi">10</span><span class="p">)</span> <span class="o">%</span> <span class="mi">100</span> <span class="o">-</span> <span class="mi">60</span><span class="p">;</span>
        <span class="k">else</span>
            <span class="n">temp</span> <span class="o">=</span> <span class="n">schedules</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="mi">10</span><span class="p">;</span>
        
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">timelogs</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">((</span><span class="n">startday</span><span class="o">+</span><span class="n">l</span><span class="p">)</span> <span class="o">%</span> <span class="mi">7</span> <span class="o">!=</span> <span class="mi">6</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">startday</span><span class="o">+</span><span class="n">l</span><span class="p">)</span> <span class="o">%</span> <span class="mi">7</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">temp</span> <span class="o">&gt;=</span> <span class="n">timelogs</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="p">])</span>
                    <span class="n">count</span><span class="o">++</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
      
        <span class="k">if</span><span class="p">(</span><span class="n">count</span> <span class="o">==</span> <span class="mi">5</span><span class="p">)</span>
            <span class="n">answer</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 39분 
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 388351]]></summary></entry><entry><title type="html">바탕화면 정리</title><link href="/codingtest/programmers/lv.1/2025-06-12-codingtest_81/" rel="alternate" type="text/html" title="바탕화면 정리" /><published>2025-06-12T00:00:00+00:00</published><updated>2025-06-17T01:34:30+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_81</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-12-codingtest_81/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>코딩테스트를 준비하는 머쓱이는 프로그래머스에서 문제를 풀고 나중에 다시 코드를 보면서 공부하려고 작성한 코드를 컴퓨터 바탕화면에 아무 위치에나 저장해 둡니다. 저장한 코드가 많아지면서 머쓱이는 본인의 컴퓨터 바탕화면이 너무 지저분하다고 생각했습니다. 프로그래머스에서 작성했던 코드는 그 문제에 가서 다시 볼 수 있기 때문에 저장해 둔 파일들을 전부 삭제하기로 했습니다.</p>

<p>컴퓨터 바탕화면은 각 칸이 정사각형인 격자판입니다. 이때 컴퓨터 바탕화면의 상태를 나타낸 문자열 배열 wallpaper가 주어집니다. 파일들은 바탕화면의 격자칸에 위치하고 바탕화면의 격자점들은 바탕화면의 가장 왼쪽 위를 (0, 0)으로 시작해 (세로 좌표, 가로 좌표)로 표현합니다. 빈칸은 “.”, 파일이 있는 칸은 “#”의 값을 가집니다. 드래그를 하면 파일들을 선택할 수 있고, 선택된 파일들을 삭제할 수 있습니다. 머쓱이는 최소한의 이동거리를 갖는 한 번의 드래그로 모든 파일을 선택해서 한 번에 지우려고 하며 드래그로 파일들을 선택하는 방법은 다음과 같습니다.</p>

<ul>
  <li>
    <p>드래그는 바탕화면의 격자점 S(lux, luy)를 마우스 왼쪽 버튼으로 클릭한 상태로 격자점 E(rdx, rdy)로 이동한 뒤 마우스 왼쪽 버튼을 떼는 행동입니다. 이때, “점 S에서 점 E로 드래그한다”고 표현하고 점 S와 점 E를 각각 드래그의 시작점, 끝점이라고 표현합니다.</p>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>점 S(lux, luy)에서 점 E(rdx, rdy)로 드래그를 할 때, “드래그 한 거리”는</td>
          <td>rdx - lux</td>
          <td>+</td>
          <td>rdy - luy</td>
          <td>로 정의합니다.</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>점 S에서 점 E로 드래그를 하면 바탕화면에서 두 격자점을 각각 왼쪽 위, 오른쪽 아래로 하는 직사각형 내부에 있는 모든 파일이 선택됩니다.</li>
</ul>

<p>예를 들어 wallpaper = [”.#…”, “..#..”, “…#.”]인 바탕화면을 그림으로 나타내면 다음과 같습니다.</p>

<p><img src="/assets/img/codingtest/161990_1.png" width="300" height="200" /></p>

<p>이러한 바탕화면에서 다음 그림과 같이 S(0, 1)에서 E(3, 4)로 드래그하면 세 개의 파일이 모두 선택되므로 드래그 한 거리 (3 - 0) + (4 - 1) = 6을 최솟값으로 모든 파일을 선택 가능합니다.</p>

<p><img src="/assets/img/codingtest/161990_2.png" width="300" height="200" /></p>

<p>(0, 0)에서 (3, 5)로 드래그해도 모든 파일을 선택할 수 있지만 이때 드래그 한 거리는 (3 - 0) + (5 - 0) = 8이고 이전의 방법보다 거리가 늘어납니다.</p>

<p>머쓱이의 컴퓨터 바탕화면의 상태를 나타내는 문자열 배열 wallpaper가 매개변수로 주어질 때 바탕화면의 파일들을 한 번에 삭제하기 위해 최소한의 이동거리를 갖는 드래그의 시작점과 끝점을 담은 정수 배열을 return하는 solution 함수를 작성해 주세요. 드래그의 시작점이 (lux, luy), 끝점이 (rdx, rdy)라면 정수 배열 [lux, luy, rdx, rdy]를 return하면 됩니다.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>1 ≤ wallpaper의 길이 ≤ 50</li>
  <li>1 ≤ wallpaper[i]의 길이 ≤ 50
    <ul>
      <li>wallpaper의 모든 원소의 길이는 동일합니다.</li>
    </ul>
  </li>
  <li>wallpaper[i][j]는 바탕화면에서 i + 1행 j + 1열에 해당하는 칸의 상태를 나타냅니다.</li>
  <li>wallpaper[i][j]는 “#” 또는 “.”의 값만 가집니다.</li>
  <li>바탕화면에는 적어도 하나의 파일이 있습니다.</li>
  <li>드래그 시작점 (lux, luy)와 끝점 (rdx, rdy)는 lux &lt; rdx, luy &lt; rdy를 만족해야 합니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/161990_3.png" width="600" height="180" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>문제 설명의 예시와 같은 예제입니다. (0, 1)에서 (3, 4)로 드래그 하면 모든 파일을 선택할 수 있고 드래그 한 거리는 6이었고, 6보다 적은 거리로 모든 파일을 선택하는 방법은 없습니다. 따라서 [0, 1, 3, 4]를 return합니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>예제 2번의 바탕화면은 다음과 같습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/161990_4.png" width="600" height="340" /></p>

<ul>
  <li>(1, 3)에서 (5, 8)로 드래그하면 모든 파일을 선택할 수 있고 이보다 적은 이동거리로 모든 파일을 선택하는 방법은 없습니다. 따라서 가장 적은 이동의 드래그로 모든 파일을 선택하는 방법인 [1, 3, 5, 8]을 return합니다.</li>
</ul>

<p>입출력 예 #3</p>
<ul>
  <li>예제 3번의 바탕화면은 다음과 같습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/161990_5.png" width="540" height="440" /></p>

<ul>
  <li>모든 파일을 선택하기 위해선 바탕화면의 가장 왼쪽 위 (0, 0)에서 가장 오른쪽 아래 (7, 9)로 드래그 해야만 합니다. 따라서 [0, 0, 7, 9]를 return합니다.</li>
</ul>

<p>입출력 예 #4</p>
<ul>
  <li>예제 4번의 바탕화면은 다음과 같이 2행 1열에만 아이콘이 있습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/161990_6.png" width="140" height="140" /></p>

<ul>
  <li>이를 드래그로 선택하기 위해서는 그 칸의 왼쪽 위 (1, 0)에서 오른쪽 아래 (2, 1)로 드래그 하면 됩니다. (1, 0)에서 (2, 2)로 드래그 해도 아이콘을 선택할 수 있지만 이전보다 이동거리가 늘어납니다. 따라서 [1, 0, 2, 1]을 return합니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">wallpaper</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">;</span>
    
    <span class="kt">int</span> <span class="n">lux</span> <span class="o">=</span> <span class="mi">50</span><span class="p">,</span> <span class="n">luy</span> <span class="o">=</span> <span class="mi">50</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">rdx</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">rdy</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">wallpaper</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">wallpaper</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">length</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">wallpaper</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'#'</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">lux</span> <span class="o">&gt;</span> <span class="n">i</span><span class="p">)</span>
                    <span class="n">lux</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
                <span class="k">if</span><span class="p">(</span><span class="n">luy</span> <span class="o">&gt;</span> <span class="n">l</span><span class="p">)</span>
                    <span class="n">luy</span> <span class="o">=</span> <span class="n">l</span><span class="p">;</span>
                <span class="k">if</span><span class="p">(</span><span class="n">rdx</span> <span class="o">&lt;</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
                    <span class="n">rdx</span> <span class="o">=</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
                <span class="k">if</span><span class="p">(</span><span class="n">rdy</span> <span class="o">&lt;</span> <span class="n">l</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
                    <span class="n">rdy</span> <span class="o">=</span> <span class="n">l</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">lux</span><span class="p">);</span>
    <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">luy</span><span class="p">);</span>
    <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">rdx</span><span class="p">);</span>
    <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">rdy</span><span class="p">);</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 13분 
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 161990]]></summary></entry><entry><title type="html">신규 아이디 추천</title><link href="/codingtest/programmers/lv.1/2025-06-11-codingtest_80/" rel="alternate" type="text/html" title="신규 아이디 추천" /><published>2025-06-11T00:10:00+00:00</published><updated>2025-06-17T01:34:30+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_80</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-11-codingtest_80/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>카카오에 입사한 신입 개발자 네오는 “카카오계정개발팀”에 배치되어, 카카오 서비스에 가입하는 유저들의 아이디를 생성하는 업무를 담당하게 되었습니다. “네오”에게 주어진 첫 업무는 새로 가입하는 유저들이 카카오 아이디 규칙에 맞지 않는 아이디를 입력했을 때, 입력된 아이디와 유사하면서 규칙에 맞는 아이디를 추천해주는 프로그램을 개발하는 것입니다.
다음은 카카오 아이디의 규칙입니다.</p>

<ul>
  <li>아이디의 길이는 3자 이상 15자 이하여야 합니다.</li>
  <li>아이디는 알파벳 소문자, 숫자, 빼기(-), 밑줄(_), 마침표(.) 문자만 사용할 수 있습니다.</li>
  <li>단, 마침표(.)는 처음과 끝에 사용할 수 없으며 또한 연속으로 사용할 수 없습니다.</li>
</ul>

<p>“네오”는 다음과 같이 7단계의 순차적인 처리 과정을 통해 신규 유저가 입력한 아이디가 카카오 아이디 규칙에 맞는 지 검사하고 규칙에 맞지 않은 경우 규칙에 맞는 새로운 아이디를 추천해 주려고 합니다.
신규 유저가 입력한 아이디가 new_id 라고 한다면,</p>

<blockquote>
  <p>1단계 new_id의 모든 대문자를 대응되는 소문자로 치환합니다.
2단계 new_id에서 알파벳 소문자, 숫자, 빼기(-), 밑줄(_), 마침표(.)를 제외한 모든 문자를 제거합니다.
3단계 new_id에서 마침표(.)가 2번 이상 연속된 부분을 하나의 마침표(.)로 치환합니다.
4단계 new_id에서 마침표(.)가 처음이나 끝에 위치한다면 제거합니다.
5단계 new_id가 빈 문자열이라면, new_id에 “a”를 대입합니다.
6단계 new_id의 길이가 16자 이상이면, new_id의 첫 15개의 문자를 제외한 나머지 문자들을 모두 제거합니다.
     만약 제거 후 마침표(.)가 new_id의 끝에 위치한다면 끝에 위치한 마침표(.) 문자를 제거합니다.
7단계 new_id의 길이가 2자 이하라면, new_id의 마지막 문자를 new_id의 길이가 3이 될 때까지 반복해서 끝에 붙입니다.</p>
</blockquote>

<p>예를 들어, new_id 값이 “…!@BaT#*..y.abcdefghijklm” 라면, 위 7단계를 거치고 나면 new_id는 아래와 같이 변경됩니다.</p>

<ul>
  <li>
    <p>1단계 대문자 ‘B’와 ‘T’가 소문자 ‘b’와 ‘t’로 바뀌었습니다.
“…!@BaT#<em>..y.abcdefghijklm” → “…!@bat#</em>..y.abcdefghijklm”</p>
  </li>
  <li>
    <p>2단계 ‘!’, ‘@’, ‘#’, ‘<em>’ 문자가 제거되었습니다.
“…!@bat#</em>..y.abcdefghijklm” → “…bat..y.abcdefghijklm”</p>
  </li>
  <li>
    <p>3단계 ‘…‘와 ‘..’ 가 ‘.’로 바뀌었습니다.
“…bat..y.abcdefghijklm” → “.bat.y.abcdefghijklm”</p>
  </li>
  <li>
    <p>4단계 아이디의 처음에 위치한 ‘.’가 제거되었습니다.
“.bat.y.abcdefghijklm” → “bat.y.abcdefghijklm”</p>
  </li>
  <li>
    <p>5단계 아이디가 빈 문자열이 아니므로 변화가 없습니다.
“bat.y.abcdefghijklm” → “bat.y.abcdefghijklm”</p>
  </li>
  <li>
    <p>6단계 아이디의 길이가 16자 이상이므로, 처음 15자를 제외한 나머지 문자들이 제거되었습니다.
“bat.y.abcdefghijklm” → “bat.y.abcdefghi”</p>
  </li>
  <li>
    <p>7단계 아이디의 길이가 2자 이하가 아니므로 변화가 없습니다.
“bat.y.abcdefghi” → “bat.y.abcdefghi”</p>
  </li>
</ul>

<p>따라서 신규 유저가 입력한 new_id가 “…!@BaT#*..y.abcdefghijklm”일 때, 네오의 프로그램이 추천하는 새로운 아이디는 “bat.y.abcdefghi” 입니다.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제
</p>

<p>신규 유저가 입력한 아이디를 나타내는 new_id가 매개변수로 주어질 때, “네오”가 설계한 7단계의 처리 과정을 거친 후의 추천 아이디를 return 하도록 solution 함수를 완성해 주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>new_id는 길이 1 이상 1,000 이하인 문자열입니다.</li>
  <li>new_id는 알파벳 대문자, 알파벳 소문자, 숫자, 특수문자로 구성되어 있습니다.</li>
  <li>
    <h2 id="new_id에-나타날-수-있는-특수문자는--_-로-한정됩니다">new_id에 나타날 수 있는 특수문자는 -_.~!@#$%^&amp;*()=+[{]}:?,&lt;&gt;/ 로 한정됩니다.</h2>
  </li>
</ul>

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/72410.png" width="500" height="110" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>문제의 예시와 같습니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>7단계를 거치는 동안 new_id가 변화하는 과정은 아래와 같습니다.
    <ul>
      <li>1단계 변화 없습니다.</li>
      <li>2단계 “z-+.^.” → “z-..”</li>
      <li>3단계 “z-..” → “z-.”</li>
      <li>4단계 “z-.” → “z-“</li>
      <li>5단계 변화 없습니다.</li>
      <li>6단계 변화 없습니다.</li>
      <li>7단계 “z-“ → “z–”</li>
    </ul>
  </li>
</ul>

<p>입출력 예 #3</p>
<ul>
  <li>7단계를 거치는 동안 new_id가 변화하는 과정은 아래와 같습니다.
    <ul>
      <li>1단계 변화 없습니다.</li>
      <li>2단계 “=.=” → “.”</li>
      <li>3단계 변화 없습니다.</li>
      <li>4단계 “.” → “” (new_id가 빈 문자열이 되었습니다.)</li>
      <li>5단계 “” → “a”</li>
      <li>6단계 변화 없습니다.</li>
      <li>7단계 “a” → “aaa”</li>
    </ul>
  </li>
</ul>

<p>입출력 예 #4</p>
<ul>
  <li>1단계에서 7단계까지 거치는 동안 new_id(“123_.def”)는 변하지 않습니다. 즉, new_id가 처음부터 카카오의 아이디 규칙에 맞습니다.</li>
</ul>

<p>입출력 예 #5</p>
<ul>
  <li>7단계를 거치는 동안 new_id가 변화하는 과정은 아래와 같습니다.
    <ul>
      <li>1단계 변화 없습니다.</li>
      <li>2단계 변화 없습니다.</li>
      <li>3단계 변화 없습니다.</li>
      <li>4단계 변화 없습니다.</li>
      <li>5단계 변화 없습니다.</li>
      <li>6단계 “abcdefghijklmn.p” → “abcdefghijklmn.” → “abcdefghijklmn”</li>
      <li>7단계 변화 없습니다.</li>
    </ul>
  </li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">string</span> <span class="nf">solution</span><span class="p">(</span><span class="n">string</span> <span class="n">new_id</span><span class="p">)</span> <span class="p">{</span>
    
    <span class="c1">//1단계</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">new_id</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">new_id</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">65</span> <span class="o">&amp;&amp;</span> <span class="n">new_id</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="mi">90</span><span class="p">)</span>
            <span class="n">new_id</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">32</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="c1">//2단계</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">new_id</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">new_id</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">97</span> <span class="o">&amp;&amp;</span> <span class="n">new_id</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="mi">122</span><span class="p">)</span>
            <span class="k">continue</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">new_id</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="sc">'0'</span> <span class="o">&amp;&amp;</span> <span class="n">new_id</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="sc">'9'</span><span class="p">)</span>
            <span class="k">continue</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">new_id</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'-'</span> <span class="o">||</span> <span class="n">new_id</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'_'</span> <span class="o">||</span> <span class="n">new_id</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'.'</span><span class="p">)</span>
            <span class="k">continue</span><span class="p">;</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="n">new_id</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">new_id</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">+</span><span class="n">i</span><span class="p">);</span>
            <span class="n">i</span><span class="o">--</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="c1">//3단계</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">new_id</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">new_id</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'.'</span> <span class="o">&amp;&amp;</span> <span class="n">new_id</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'.'</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">new_id</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">new_id</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">+</span><span class="n">i</span><span class="p">);</span>
            <span class="n">i</span><span class="o">--</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="c1">//4단계</span>
    <span class="k">if</span><span class="p">(</span><span class="n">new_id</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'.'</span><span class="p">)</span>
        <span class="n">new_id</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">new_id</span><span class="p">.</span><span class="n">begin</span><span class="p">());</span>
    <span class="k">if</span><span class="p">(</span><span class="n">new_id</span><span class="p">[</span><span class="n">new_id</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'.'</span><span class="p">)</span>
        <span class="n">new_id</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">new_id</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">+</span><span class="n">new_id</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
    
    <span class="c1">//5단계</span>
    <span class="k">if</span><span class="p">(</span><span class="n">new_id</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
        <span class="n">new_id</span> <span class="o">+=</span> <span class="sc">'a'</span><span class="p">;</span>
    
    <span class="c1">//6단계</span>
    <span class="k">if</span><span class="p">(</span><span class="n">new_id</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">15</span><span class="p">)</span>
        <span class="n">new_id</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="mi">15</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="n">new_id</span><span class="p">[</span><span class="n">new_id</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'.'</span><span class="p">)</span>
        <span class="n">new_id</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">new_id</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">+</span><span class="n">new_id</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
    
    <span class="c1">//7단계</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">3</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">new_id</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&gt;=</span> <span class="mi">3</span><span class="p">)</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">else</span>
            <span class="n">new_id</span> <span class="o">+=</span> <span class="n">new_id</span><span class="p">[</span><span class="n">new_id</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">new_id</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 30분 
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 72410]]></summary></entry><entry><title type="html">성격 유형 검사하기</title><link href="/codingtest/programmers/lv.1/2025-06-11-codingtest_79/" rel="alternate" type="text/html" title="성격 유형 검사하기" /><published>2025-06-11T00:00:00+00:00</published><updated>2025-06-17T01:34:30+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_79</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-11-codingtest_79/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>나만의 카카오 성격 유형 검사지를 만들려고 합니다.
성격 유형 검사는 다음과 같은 4개 지표로 성격 유형을 구분합니다. 성격은 각 지표에서 두 유형 중 하나로 결정됩니다.</p>

<p><img src="/assets/img/codingtest/118666_1.png" width="300" height="200" /></p>

<p>4개의 지표가 있으므로 성격 유형은 총 16(=2 x 2 x 2 x 2)가지가 나올 수 있습니다. 예를 들어, “RFMN”이나 “TCMA”와 같은 성격 유형이 있습니다.</p>

<p>검사지에는 총 n개의 질문이 있고, 각 질문에는 아래와 같은 7개의 선택지가 있습니다.</p>

<ul>
  <li>매우 비동의</li>
  <li>비동의</li>
  <li>약간 비동의</li>
  <li>모르겠음</li>
  <li>약간 동의</li>
  <li>동의</li>
  <li>매우 동의</li>
</ul>

<p>각 질문은 1가지 지표로 성격 유형 점수를 판단합니다.</p>

<p>예를 들어, 어떤 한 질문에서 4번 지표로 아래 표처럼 점수를 매길 수 있습니다.</p>

<p><img src="/assets/img/codingtest/118666_2.png" width="400" height="300" /></p>

<p>이때 검사자가 질문에서 약간 동의 선택지를 선택할 경우 어피치형(A) 성격 유형 1점을 받게 됩니다. 만약 검사자가 매우 비동의 선택지를 선택할 경우 네오형(N) 성격 유형 3점을 받게 됩니다.</p>

<p>위 예시처럼 네오형이 비동의, 어피치형이 동의인 경우만 주어지지 않고, 질문에 따라 네오형이 동의, 어피치형이 비동의인 경우도 주어질 수 있습니다.
하지만 각 선택지는 고정적인 크기의 점수를 가지고 있습니다.</p>

<ul>
  <li>매우 동의나 매우 비동의 선택지를 선택하면 3점을 얻습니다.</li>
  <li>동의나 비동의 선택지를 선택하면 2점을 얻습니다.</li>
  <li>약간 동의나 약간 비동의 선택지를 선택하면 1점을 얻습니다.</li>
  <li>모르겠음 선택지를 선택하면 점수를 얻지 않습니다.</li>
</ul>

<p>검사 결과는 모든 질문의 성격 유형 점수를 더하여 각 지표에서 더 높은 점수를 받은 성격 유형이 검사자의 성격 유형이라고 판단합니다. 단, 하나의 지표에서 각 성격 유형 점수가 같으면, 두 성격 유형 중 사전 순으로 빠른 성격 유형을 검사자의 성격 유형이라고 판단합니다.</p>

<p>질문마다 판단하는 지표를 담은 1차원 문자열 배열 survey와 검사자가 각 질문마다 선택한 선택지를 담은 1차원 정수 배열 choices가 매개변수로 주어집니다. 이때, 검사자의 성격 유형 검사 결과를 지표 번호 순서대로 return 하도록 solution 함수를 완성해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>1 ≤ survey의 길이 ( = n) ≤ 1,000
    <ul>
      <li>survey의 원소는 “RT”, “TR”, “FC”, “CF”, “MJ”, “JM”, “AN”, “NA” 중 하나입니다.</li>
      <li>survey[i]의 첫 번째 캐릭터는 i+1번 질문의 비동의 관련 선택지를 선택하면 받는 성격 유형을 의미합니다.</li>
      <li>survey[i]의 두 번째 캐릭터는 i+1번 질문의 동의 관련 선택지를 선택하면 받는 성격 유형을 의미합니다.</li>
    </ul>
  </li>
  <li>choices의 길이 = survey의 길이
    <ul>
      <li>choices[i]는 검사자가 선택한 i+1번째 질문의 선택지를 의미합니다.</li>
      <li>1 ≤ choices의 원소 ≤ 7</li>
    </ul>
  </li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/118666_3.png" width="500" height="110" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>1번 질문의 점수 배치는 아래 표와 같습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/118666_4.png" width="400" height="300" /></p>

<ul>
  <li>
    <p>1번 질문에서는 지문의 예시와 다르게 비동의 관련 선택지를 선택하면 어피치형(A) 성격 유형의 점수를 얻고, 동의 관련 선택지를 선택하면 네오형(N) 성격 유형의 점수를 얻습니다.
1번 질문에서 검사자는 약간 동의 선택지를 선택했으므로 네오형(N) 성격 유형 점수 1점을 얻게 됩니다.</p>
  </li>
  <li>
    <p>2번 질문의 점수 배치는 아래 표와 같습니다.</p>
  </li>
</ul>

<p><img src="/assets/img/codingtest/118666_5.png" width="400" height="300" /></p>

<ul>
  <li>
    <p>2번 질문에서 검사자는 약간 비동의 선택지를 선택했으므로 콘형(C) 성격 유형 점수 1점을 얻게 됩니다.</p>
  </li>
  <li>
    <p>3번 질문의 점수 배치는 아래 표와 같습니다.</p>
  </li>
</ul>

<p><img src="/assets/img/codingtest/118666_6.png" width="400" height="300" /></p>

<ul>
  <li>
    <p>3번 질문에서 검사자는 비동의 선택지를 선택했으므로 무지형(M) 성격 유형 점수 2점을 얻게 됩니다.</p>
  </li>
  <li>
    <p>4번 질문의 점수 배치는 아래 표와 같습니다.</p>
  </li>
</ul>

<p><img src="/assets/img/codingtest/118666_7.png" width="400" height="300" /></p>

<ul>
  <li>
    <p>4번 질문에서 검사자는 매우 동의 선택지를 선택했으므로 튜브형(T) 성격 유형 점수 3점을 얻게 됩니다.</p>
  </li>
  <li>
    <p>5번 질문의 점수 배치는 아래 표와 같습니다.</p>
  </li>
</ul>

<p><img src="/assets/img/codingtest/118666_8.png" width="400" height="300" /></p>

<ul>
  <li>
    <p>5번 질문에서 검사자는 약간 동의 선택지를 선택했으므로 어피치형(A) 성격 유형 점수 1점을 얻게 됩니다.</p>
  </li>
  <li>
    <p>1번부터 5번까지 질문의 성격 유형 점수를 합치면 아래 표와 같습니다.</p>
  </li>
</ul>

<p><img src="/assets/img/codingtest/118666_9.png" width="430" height="170" /></p>

<ul>
  <li>
    <p>각 지표에서 더 점수가 높은 T,C,M이 성격 유형입니다.
하지만, 4번 지표는 1점으로 동일한 점수입니다. 따라서, 4번 지표의 성격 유형은 사전순으로 빠른 A입니다.</p>
  </li>
  <li>
    <p>따라서 “TCMA”를 return 해야 합니다.</p>
  </li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>1번부터 3번까지 질문의 성격 유형 점수를 합치면 아래 표와 같습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/118666_10.png" width="430" height="170" /></p>

<ul>
  <li>
    <p>1번 지표는 튜브형(T)보다 라이언형(R)의 점수가 더 높습니다. 따라서 첫 번째 지표의 성격 유형은 R입니다.
하지만, 2, 3, 4번 지표는 모두 0점으로 동일한 점수입니다. 따라서 2, 3, 4번 지표의 성격 유형은 사전순으로 빠른 C, J, A입니다.</p>
  </li>
  <li>
    <p>따라서 “RCJA”를 return 해야 합니다.</p>
  </li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">string</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">survey</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">choices</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">string</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">List</span><span class="p">{</span><span class="s">"R"</span><span class="p">,</span> <span class="s">"T"</span><span class="p">,</span> <span class="s">"C"</span><span class="p">,</span> <span class="s">"F"</span><span class="p">,</span> <span class="s">"J"</span><span class="p">,</span> <span class="s">"M"</span><span class="p">,</span> <span class="s">"A"</span><span class="p">,</span> <span class="s">"N"</span><span class="p">};</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">Score</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">survey</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">List</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">survey</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="n">List</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">choices</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">)</span>
                    <span class="n">Score</span><span class="p">[</span><span class="n">l</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">4</span> <span class="o">-</span> <span class="n">choices</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">choices</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">4</span> <span class="o">&amp;&amp;</span> <span class="n">l</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
                    <span class="n">Score</span><span class="p">[</span><span class="n">l</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">+=</span> <span class="n">choices</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">%</span> <span class="mi">4</span><span class="p">;</span>
                <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">choices</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">4</span> <span class="o">&amp;&amp;</span> <span class="n">l</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span>
                    <span class="n">Score</span><span class="p">[</span><span class="n">l</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">+=</span> <span class="n">choices</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">%</span> <span class="mi">4</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">8</span><span class="p">;</span> <span class="n">i</span><span class="o">+=</span><span class="mi">2</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">Score</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">Score</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">])</span>
            <span class="n">answer</span> <span class="o">+=</span> <span class="n">List</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
        <span class="k">else</span> 
            <span class="n">answer</span> <span class="o">+=</span> <span class="n">List</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
    <span class="p">}</span>
        
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 22분 
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 118666]]></summary></entry><entry><title type="html">[카카오 인턴] 키패드 누르기</title><link href="/codingtest/programmers/lv.1/2025-06-10-codingtest_78/" rel="alternate" type="text/html" title="[카카오 인턴] 키패드 누르기" /><published>2025-06-10T00:20:00+00:00</published><updated>2025-06-17T01:34:30+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_78</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-10-codingtest_78/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>스마트폰 전화 키패드의 각 칸에 다음과 같이 숫자들이 적혀 있습니다</p>

<p><img src="/assets/img/codingtest/67256_1.png" width="500" height="450" /></p>

<p>이 전화 키패드에서 왼손과 오른손의 엄지손가락만을 이용해서 숫자만을 입력하려고 합니다.
맨 처음 왼손 엄지손가락은 * 키패드에 오른손 엄지손가락은 # 키패드 위치에서 시작하며, 엄지손가락을 사용하는 규칙은 다음과 같습니다.</p>

<ol>
  <li>엄지손가락은 상하좌우 4가지 방향으로만 이동할 수 있으며 키패드 이동 한 칸은 거리로 1에 해당합니다.</li>
  <li>왼쪽 열의 3개의 숫자 1, 4, 7을 입력할 때는 왼손 엄지손가락을 사용합니다.</li>
  <li>오른쪽 열의 3개의 숫자 3, 6, 9를 입력할 때는 오른손 엄지손가락을 사용합니다.</li>
  <li>가운데 열의 4개의 숫자 2, 5, 8, 0을 입력할 때는 두 엄지손가락의 현재 키패드의 위치에서 더 가까운 엄지손가락을 사용합니다.
4-1. 만약 두 엄지손가락의 거리가 같다면, 오른손잡이는 오른손 엄지손가락, 왼손잡이는 왼손 엄지손가락을 사용합니다.</li>
</ol>

<p>순서대로 누를 번호가 담긴 배열 numbers, 왼손잡이인지 오른손잡이인 지를 나타내는 문자열 hand가 매개변수로 주어질 때, 각 번호를 누른 엄지손가락이 왼손인 지 오른손인 지를 나타내는 연속된 문자열 형태로 return 하도록 solution 함수를 완성해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>numbers 배열의 크기는 1 이상 1,000 이하입니다.</li>
  <li>numbers 배열 원소의 값은 0 이상 9 이하인 정수입니다.</li>
  <li>hand는 “left” 또는 “right” 입니다.
    <ul>
      <li>“left”는 왼손잡이, “right”는 오른손잡이를 의미합니다.</li>
    </ul>
  </li>
  <li>왼손 엄지손가락을 사용한 경우는 L, 오른손 엄지손가락을 사용한 경우는 R을 순서대로 이어붙여 문자열 형태로 return 해주세요.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/67256_2.png" width="570" height="160" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>순서대로 눌러야 할 번호가 [1, 3, 4, 5, 8, 2, 1, 4, 5, 9, 5]이고, 오른손잡이입니다.</li>
</ul>

<p><img src="/assets/img/codingtest/67256_3.png" width="900" height="650" /></p>

<ul>
  <li>따라서 “LRLLLRLLRRL”를 return 합니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>왼손잡이가 [7, 0, 8, 2, 8, 3, 1, 5, 7, 6, 2]를 순서대로 누르면 사용한 손은 “LRLLRRLLLRR”이 됩니다.</li>
</ul>

<p>입출력 예 #3</p>
<ul>
  <li>오른손잡이가 [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]를 순서대로 누르면 사용한 손은 “LLRLLRLLRL”이 됩니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;cmath&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">FindCount</span><span class="p">(</span><span class="kt">int</span> <span class="n">num</span><span class="p">,</span> <span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">Keys</span><span class="p">{{</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">},</span> <span class="p">{</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">},</span> <span class="p">{</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">},</span> <span class="p">{</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">10</span><span class="p">}};</span>
    
    <span class="kt">int</span> <span class="n">numL</span><span class="p">,</span> <span class="n">numR</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="n">a</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">num</span> <span class="o">==</span> <span class="mi">2</span><span class="p">)</span>
            <span class="n">numL</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">num</span> <span class="o">==</span> <span class="mi">5</span><span class="p">)</span>
            <span class="n">numL</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">num</span> <span class="o">==</span> <span class="mi">8</span><span class="p">)</span>
            <span class="n">numL</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">num</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
            <span class="n">numL</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">b</span> <span class="o">==</span> <span class="mi">10</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">num</span> <span class="o">==</span> <span class="mi">2</span><span class="p">)</span>
            <span class="n">numR</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">num</span> <span class="o">==</span> <span class="mi">5</span><span class="p">)</span>
            <span class="n">numR</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">num</span> <span class="o">==</span> <span class="mi">8</span><span class="p">)</span>
            <span class="n">numR</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">num</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
            <span class="n">numR</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="kt">int</span> <span class="n">basei</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">basel</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">lefti</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">leftl</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">righti</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">rightl</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
        
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">Keys</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">Keys</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">Keys</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="p">]</span> <span class="o">==</span> <span class="n">num</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">basei</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
                <span class="n">basel</span> <span class="o">=</span> <span class="n">l</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="n">Keys</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="p">]</span> <span class="o">==</span> <span class="n">a</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">lefti</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
                <span class="n">leftl</span> <span class="o">=</span> <span class="n">l</span><span class="p">;</span>                
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="n">Keys</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="p">]</span> <span class="o">==</span> <span class="n">b</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">righti</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
                <span class="n">rightl</span> <span class="o">=</span> <span class="n">l</span><span class="p">;</span>                
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">if</span><span class="p">(</span><span class="n">a</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
        <span class="n">numL</span> <span class="o">=</span> <span class="n">abs</span><span class="p">(</span><span class="n">lefti</span> <span class="o">-</span> <span class="n">basei</span><span class="p">)</span> <span class="o">+</span> <span class="n">abs</span><span class="p">(</span><span class="n">leftl</span> <span class="o">-</span> <span class="n">basel</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="n">b</span> <span class="o">!=</span> <span class="mi">10</span><span class="p">)</span>
        <span class="n">numR</span> <span class="o">=</span> <span class="n">abs</span><span class="p">(</span><span class="n">righti</span> <span class="o">-</span> <span class="n">basei</span><span class="p">)</span> <span class="o">+</span> <span class="n">abs</span><span class="p">(</span><span class="n">rightl</span> <span class="o">-</span> <span class="n">basel</span><span class="p">);</span>
    
    <span class="k">if</span><span class="p">(</span><span class="n">numL</span> <span class="o">&lt;</span> <span class="n">numR</span><span class="p">)</span>
        <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">numL</span> <span class="o">&gt;</span> <span class="n">numR</span><span class="p">)</span>
        <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">else</span> 
        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">string</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">numbers</span><span class="p">,</span> <span class="n">string</span> <span class="n">hand</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">string</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    
    <span class="kt">int</span> <span class="n">left</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">right</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">numbers</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">numbers</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">||</span> <span class="n">numbers</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="mi">4</span> <span class="o">||</span> <span class="n">numbers</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="mi">7</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">answer</span> <span class="o">+=</span> <span class="s">"L"</span><span class="p">;</span>
            <span class="n">left</span> <span class="o">=</span> <span class="n">numbers</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">numbers</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="mi">3</span> <span class="o">||</span> <span class="n">numbers</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="mi">6</span> <span class="o">||</span> <span class="n">numbers</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="mi">9</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">answer</span> <span class="o">+=</span> <span class="s">"R"</span><span class="p">;</span>
            <span class="n">right</span> <span class="o">=</span> <span class="n">numbers</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="p">}</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">FindCount</span><span class="p">(</span><span class="n">numbers</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">left</span><span class="p">,</span> <span class="n">right</span><span class="p">);</span>
            <span class="k">if</span><span class="p">(</span><span class="n">n</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">answer</span> <span class="o">+=</span> <span class="s">"L"</span><span class="p">;</span>
                <span class="n">left</span> <span class="o">=</span> <span class="n">numbers</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">n</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">answer</span> <span class="o">+=</span> <span class="s">"R"</span><span class="p">;</span>
                <span class="n">right</span> <span class="o">=</span> <span class="n">numbers</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">n</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">hand</span> <span class="o">==</span> <span class="s">"right"</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="n">answer</span> <span class="o">+=</span> <span class="s">"R"</span><span class="p">;</span>
                    <span class="n">right</span> <span class="o">=</span> <span class="n">numbers</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="p">}</span>
                <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">hand</span> <span class="o">==</span> <span class="s">"left"</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="n">answer</span> <span class="o">+=</span> <span class="s">"L"</span><span class="p">;</span>
                    <span class="n">left</span> <span class="o">=</span> <span class="n">numbers</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 X
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 1시간 17분 
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 67256]]></summary></entry><entry><title type="html">[PCCE 기출문제] 10번 / 데이터 분석</title><link href="/codingtest/programmers/lv.1/2025-06-10-codingtest_77/" rel="alternate" type="text/html" title="[PCCE 기출문제] 10번 / 데이터 분석" /><published>2025-06-10T00:10:00+00:00</published><updated>2025-06-17T01:34:30+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_77</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-10-codingtest_77/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>AI 엔지니어인 현식이는 데이터를 분석하는 작업을 진행하고 있습니다. 데이터는 [“코드 번호(code)”, “제조일(date)”, “최대 수량(maximum)”, “현재 수량(remain)”]으로 구성되어 있으며 현식이는 이 데이터들 중 조건을 만족하는 데이터만 뽑아서 정렬하려 합니다.</p>

<p>예를 들어 다음과 같이 데이터가 주어진다면</p>

<p><img src="/assets/img/codingtest/250121_1.png" width="800" height="80" /></p>

<p>이 데이터는 다음 표처럼 나타낼 수 있습니다.</p>

<p><img src="/assets/img/codingtest/250121_2.png" width="400" height="170" /></p>

<p>주어진 데이터 중 “제조일이 20300501 이전인 물건들을 현재 수량이 적은 순서”로 정렬해야 한다면 조건에 맞게 가공된 데이터는 다음과 같습니다.</p>

<p><img src="/assets/img/codingtest/250121_3.png" width="600" height="80" /></p>

<p>정렬한 데이터들이 담긴 이차원 정수 리스트 data와 어떤 정보를 기준으로 데이터를 뽑아낼지를 의미하는 문자열 ext, 뽑아낼 정보의 기준값을 나타내는 정수 val_ext, 정보를 정렬할 기준이 되는 문자열 sort_by가 주어집니다.</p>

<p>data에서 ext 값이 val_ext보다 작은 데이터만 뽑은 후, sort_by에 해당하는 값을 기준으로 오름차순으로 정렬하여 return 하도록 solution 함수를 완성해 주세요. 단, 조건을 만족하는 데이터는 항상 한 개 이상 존재합니다.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>1 ≤ data의 길이 ≤ 500
  -data[i]의 원소는 [코드 번호(code), 제조일(date), 최대 수량(maximum), 현재 수량(remain)] 형태입니다.
    <ul>
      <li>1 ≤ 코드 번호≤ 100,000</li>
      <li>20000101 ≤ 제조일≤ 29991231</li>
      <li>data[i][1]은 yyyymmdd 형태의 값을 가지며, 올바른 날짜만 주어집니다. (yyyy : 연도, mm : 월, dd : 일)</li>
      <li>1 ≤ 최대 수량≤ 10,000</li>
      <li>1 ≤ 현재 수량≤ 최대 수량</li>
    </ul>
  </li>
  <li>ext와 sort_by의 값은 다음 중 한 가지를 가집니다.
    <ul>
      <li>“code”, “date”, “maximum”, “remain”</li>
      <li>순서대로 코드 번호, 제조일, 최대 수량, 현재 수량을 의미합니다.</li>
    </ul>
  </li>
  <li>val_ext는 ext에 따라 올바른 범위의 숫자로 주어집니다.</li>
  <li>정렬 기준에 해당하는 값이 서로 같은 경우는 없습니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/250121_4.png" width="900" height="125" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>본문의 내용과 동일합니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">void</span> <span class="nf">ChangeList</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;&amp;</span> <span class="n">answer</span><span class="p">,</span> <span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">answer</span><span class="p">[</span><span class="n">a</span><span class="p">];</span>
    <span class="n">answer</span><span class="p">[</span><span class="n">a</span><span class="p">]</span> <span class="o">=</span> <span class="n">answer</span><span class="p">[</span><span class="n">b</span><span class="p">];</span>
    <span class="n">answer</span><span class="p">[</span><span class="n">b</span><span class="p">]</span> <span class="o">=</span> <span class="n">temp</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">data</span><span class="p">,</span> <span class="n">string</span> <span class="n">ext</span><span class="p">,</span> <span class="kt">int</span> <span class="n">val_ext</span><span class="p">,</span> <span class="n">string</span> <span class="n">sort_by</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">answer</span><span class="p">;</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">data</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">ext</span> <span class="o">==</span> <span class="s">"code"</span> <span class="o">&amp;&amp;</span> <span class="n">data</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="n">val_ext</span><span class="p">)</span>
            <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">ext</span> <span class="o">==</span> <span class="s">"date"</span> <span class="o">&amp;&amp;</span> <span class="n">data</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="n">val_ext</span><span class="p">)</span>
            <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">ext</span> <span class="o">==</span> <span class="s">"maximum"</span> <span class="o">&amp;&amp;</span> <span class="n">data</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="n">val_ext</span><span class="p">)</span>
            <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">ext</span> <span class="o">==</span> <span class="s">"remain"</span> <span class="o">&amp;&amp;</span> <span class="n">data</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">3</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="n">val_ext</span><span class="p">)</span>
            <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
    <span class="p">}</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">answer</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="n">i</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">answer</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">sort_by</span> <span class="o">==</span> <span class="s">"code"</span> <span class="o">&amp;&amp;</span> <span class="n">answer</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">answer</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span>
                <span class="n">ChangeList</span><span class="p">(</span><span class="n">answer</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">l</span><span class="p">);</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">sort_by</span> <span class="o">==</span> <span class="s">"date"</span> <span class="o">&amp;&amp;</span> <span class="n">answer</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">answer</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="mi">1</span><span class="p">])</span>
                <span class="n">ChangeList</span><span class="p">(</span><span class="n">answer</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">l</span><span class="p">);</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">sort_by</span> <span class="o">==</span> <span class="s">"maximum"</span> <span class="o">&amp;&amp;</span> <span class="n">answer</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">answer</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="mi">2</span><span class="p">])</span>
                <span class="n">ChangeList</span><span class="p">(</span><span class="n">answer</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">l</span><span class="p">);</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">sort_by</span> <span class="o">==</span> <span class="s">"remain"</span> <span class="o">&amp;&amp;</span> <span class="n">answer</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">3</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">answer</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="mi">3</span><span class="p">])</span>
                <span class="n">ChangeList</span><span class="p">(</span><span class="n">answer</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">l</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 20분 
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 250121]]></summary></entry><entry><title type="html">크레인 인형뽑기 게임</title><link href="/codingtest/programmers/lv.1/2025-06-10-codingtest_76/" rel="alternate" type="text/html" title="크레인 인형뽑기 게임" /><published>2025-06-10T00:00:00+00:00</published><updated>2025-06-17T01:34:30+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_76</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-10-codingtest_76/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>게임개발자인 “죠르디”는 크레인 인형뽑기 기계를 모바일 게임으로 만들려고 합니다.
“죠르디”는 게임의 재미를 높이기 위해 화면 구성과 규칙을 다음과 같이 게임 로직에 반영하려고 합니다.</p>

<p><img src="/assets/img/codingtest/64061_1.png" width="500" height="480" /></p>

<p>게임 화면은 “1 x 1” 크기의 칸들로 이루어진 “N x N” 크기의 정사각 격자이며 위쪽에는 크레인이 있고 오른쪽에는 바구니가 있습니다. (위 그림은 “5 x 5” 크기의 예시입니다). 각 격자 칸에는 다양한 인형이 들어 있으며 인형이 없는 칸은 빈칸입니다. 모든 인형은 “1 x 1” 크기의 격자 한 칸을 차지하며 격자의 가장 아래 칸부터 차곡차곡 쌓여 있습니다. 게임 사용자는 크레인을 좌우로 움직여서 멈춘 위치에서 가장 위에 있는 인형을 집어 올릴 수 있습니다. 집어 올린 인형은 바구니에 쌓이게 되는 데, 이때 바구니의 가장 아래 칸부터 인형이 순서대로 쌓이게 됩니다. 다음 그림은 [1번, 5번, 3번] 위치에서 순서대로 인형을 집어 올려 바구니에 담은 모습입니다.</p>

<p><img src="/assets/img/codingtest/64061_2.png" width="500" height="480" /></p>

<p>만약 같은 모양의 인형 두 개가 바구니에 연속해서 쌓이게 되면 두 인형은 터뜨려지면서 바구니에서 사라지게 됩니다. 위 상태에서 이어서 [5번] 위치에서 인형을 집어 바구니에 쌓으면 같은 모양 인형 두 개가 없어집니다.</p>

<p><img src="/assets/img/codingtest/64061_3.png" width="500" height="480" /></p>

<p>크레인 작동 시 인형이 집어지지 않는 경우는 없으나 만약 인형이 없는 곳에서 크레인을 작동시키는 경우에는 아무런 일도 일어나지 않습니다. 또한 바구니는 모든 인형이 들어갈 수 있을 만큼 충분히 크다고 가정합니다. (그림에서는 화면표시 제약으로 5칸만으로 표현하였음)</p>

<p>게임 화면의 격자의 상태가 담긴 2차원 배열 board와 인형을 집기 위해 크레인을 작동시킨 위치가 담긴 배열 moves가 매개변수로 주어질 때, 크레인을 모두 작동시킨 후 터트려져 사라진 인형의 개수를 return 하도록 solution 함수를 완성해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>board 배열은 2차원 배열로 크기는 “5 x 5” 이상 “30 x 30” 이하입니다.</li>
  <li>board의 각 칸에는 0 이상 100 이하인 정수가 담겨있습니다.
    <ul>
      <li>0은 빈 칸을 나타냅니다.</li>
      <li>1 ~ 100의 각 숫자는 각기 다른 인형의 모양을 의미하며 같은 숫자는 같은 모양의 인형을 나타냅니다.</li>
    </ul>
  </li>
  <li>moves 배열의 크기는 1 이상 1,000 이하입니다.</li>
  <li>moves 배열 각 원소들의 값은 1 이상이며 board 배열의 가로 크기 이하인 자연수입니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/64061_4.png" width="800" height="90" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>인형의 처음 상태는 문제에 주어진 예시와 같습니다. 크레인이 [1, 5, 3, 5, 1, 2, 1, 4] 번 위치에서 차례대로 인형을 집어서 바구니에 옮겨 담은 후, 상태는 아래 그림과 같으며 바구니에 담는 과정에서 터트려져 사라진 인형은 4개 입니다.</li>
</ul>

<p><img src="/assets/img/codingtest/64061_5.png" width="500" height="480" /></p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">board</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">moves</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">Basket</span><span class="p">;</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">moves</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">board</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">board</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="n">moves</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">Basket</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">board</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="n">moves</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">]);</span>
                <span class="n">board</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="n">moves</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
                
                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="kt">int</span> <span class="n">size</span> <span class="o">=</span> <span class="n">Basket</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
    
    <span class="k">while</span><span class="p">(</span><span class="nb">true</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">Basket</span><span class="p">[</span><span class="n">size</span><span class="p">]</span> <span class="o">==</span> <span class="n">Basket</span><span class="p">[</span><span class="n">size</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
        <span class="p">{</span>
            <span class="n">Basket</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">Basket</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">+</span><span class="n">size</span><span class="p">);</span>
            <span class="n">Basket</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">Basket</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">+</span><span class="n">size</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
            
            <span class="n">answer</span> <span class="o">+=</span> <span class="mi">2</span><span class="p">;</span>
            
            <span class="n">size</span> <span class="o">=</span> <span class="n">Basket</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span>
            <span class="n">size</span><span class="o">--</span><span class="p">;</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">size</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
            <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 46분 30초 
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 64061]]></summary></entry><entry><title type="html">햄버거 만들기</title><link href="/codingtest/programmers/lv.1/2025-06-09-codingtest_75/" rel="alternate" type="text/html" title="햄버거 만들기" /><published>2025-06-09T00:20:00+00:00</published><updated>2025-06-17T01:34:30+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_75</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-09-codingtest_75/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>햄버거 가게에서 일을 하는 상수는 햄버거를 포장하는 일을 합니다. 함께 일을 하는 다른 직원들이 햄버거에 들어갈 재료를 조리해 주면 조리된 순서대로 상수의 앞에 아래서부터 위로 쌓이게 되고, 상수는 순서에 맞게 쌓여서 완성된 햄버거를 따로 옮겨 포장을 하게 됩니다. 상수가 일하는 가게는 정해진 순서(아래서부터, 빵 – 야채 – 고기 - 빵)로 쌓인 햄버거만 포장을 합니다. 상수는 손이 굉장히 빠르기 때문에 상수가 포장하는 동안 속 재료가 추가적으로 들어오는 일은 없으며, 재료의 높이는 무시하여 재료가 높이 쌓여서 일이 힘들어지는 경우는 없습니다.</p>

<p>예를 들어, 상수의 앞에 쌓이는 재료의 순서가 [야채, 빵, 빵, 야채, 고기, 빵, 야채, 고기, 빵]일 때, 상수는 여섯 번째 재료가 쌓였을 때, 세 번째 재료부터 여섯 번째 재료를 이용하여 햄버거를 포장하고, 아홉 번째 재료가 쌓였을 때, 두 번째 재료와 일곱 번째 재료부터 아홉 번째 재료를 이용하여 햄버거를 포장합니다. 즉, 2개의 햄버거를 포장하게 됩니다.</p>

<p>상수에게 전해지는 재료의 정보를 나타내는 정수 배열 ingredient가 주어졌을 때, 상수가 포장하는 햄버거의 개수를 return 하도록 solution 함수를 완성하시오.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>1 ≤ ingredient의 길이 ≤ 1,000,000</li>
  <li>
    <h2 id="ingredient의-원소는-1-2-3-중-하나의-값이며-순서대로-빵-야채-고기를-의미합니다">ingredient의 원소는 1, 2, 3 중 하나의 값이며, 순서대로 빵, 야채, 고기를 의미합니다.</h2>
  </li>
</ul>

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/133502.png" width="260" height="110" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>문제 예시와 같습니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>상수가 포장할 수 있는 햄버거가 없습니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">ingredient</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    
    <span class="n">string</span> <span class="n">str</span><span class="p">;</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">ingredient</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">str</span> <span class="o">+=</span> <span class="n">to_string</span><span class="p">(</span><span class="n">ingredient</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">str</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">)</span>
            <span class="k">continue</span><span class="p">;</span>
        
        <span class="n">string</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">str</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="n">str</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">-</span><span class="mi">4</span><span class="p">);</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">temp</span> <span class="o">==</span> <span class="s">"1231"</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">answer</span><span class="o">++</span><span class="p">;</span>
            <span class="n">str</span> <span class="o">=</span> <span class="n">str</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">str</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">-</span><span class="mi">4</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 X
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 25분 
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
문제 소감
</p>

<ul>
  <li>vector끼리 비교할 때나 문자열끼리 비교할 때 연산이 오래 걸릴 거 같으면 vector를 string으로 string을 vector로 바꾸는 방법을 적극 활용해야 할 것 같다.</li>
</ul>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 133502]]></summary></entry></feed>