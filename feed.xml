<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ko"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" hreflang="ko" /><updated>2025-07-11T12:11:49+00:00</updated><id>/feed.xml</id><title type="html">Roseanne</title><subtitle>Hydejack is a boutique Jekyll theme for hackers, nerds, and academics, with a focus on personal sites that are meant to impress.
</subtitle><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><entry><title type="html">이진 변환 반복하기</title><link href="/codingtest/programmers/lv.2/2025-07-11-codingtest_97/" rel="alternate" type="text/html" title="이진 변환 반복하기" /><published>2025-07-11T00:00:00+00:00</published><updated>2025-07-11T12:11:03+00:00</updated><id>/codingtest/programmers/lv.2/codingtest_97</id><content type="html" xml:base="/codingtest/programmers/lv.2/2025-07-11-codingtest_97/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>0과 1로 이루어진 어떤 문자열 x에 대한 이진 변환을 다음과 같이 정의합니다.</p>

<ol>
  <li>x의 모든 0을 제거합니다.</li>
  <li>x의 길이를 c라고 하면, x를 “c를 2진법으로 표현한 문자열”로 바꿉니다.</li>
</ol>

<p>예를 들어, x = “0111010”이라면, x에 이진 변환을 가하면 x = “0111010” -&gt; “1111” -&gt; “100” 이 됩니다.</p>

<p>0과 1로 이루어진 문자열 s가 매개변수로 주어집니다. s가 “1”이 될 때까지 계속해서 s에 이진 변환을 가했을 때, 이진 변환의 횟수와 변환 과정에서 제거된 모든 0의 개수를 각각 배열에 담아 return 하도록 solution 함수를 완성해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>s의 길이는 1 이상 150,000 이하입니다.</li>
  <li>s에는 ‘1’이 최소 하나 이상 포함되어 있습니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/70129_1.png" width="250" height="135" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>“110010101001”이 “1”이 될 때까지 이진 변환을 가하는 과정은 다음과 같습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/70129_2.png" width="600" height="150" /></p>

<ul>
  <li>3번의 이진 변환을 하는 동안 8개의 0을 제거했으므로, [3,8]을 return 해야 합니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>“01110”이 “1”이 될 때까지 이진 변환을 가하는 과정은 다음과 같습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/70129_3.png" width="600" height="150" /></p>

<ul>
  <li>3번의 이진 변환을 하는 동안 3개의 0을 제거했으므로, [3,3]을 return 해야 합니다.</li>
</ul>

<p>입출력 예 #3</p>
<ul>
  <li>“1111111”이 “1”이 될 때까지 이진 변환을 가하는 과정은 다음과 같습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/70129_4.png" width="600" height="180" /></p>

<ul>
  <li>4번의 이진 변환을 하는 동안 1개의 0을 제거했으므로, [4,1]을 return 해야 합니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">string</span> <span class="n">s</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    
    <span class="k">while</span><span class="p">(</span><span class="n">s</span> <span class="o">!=</span> <span class="s">"1"</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">s</span><span class="p">.</span><span class="n">length</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'0'</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">s</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
                <span class="n">answer</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
                <span class="n">i</span><span class="o">--</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        
        <span class="kt">int</span> <span class="n">num</span> <span class="o">=</span> <span class="n">s</span><span class="p">.</span><span class="n">length</span><span class="p">();</span>
        <span class="n">s</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
        
        <span class="k">while</span><span class="p">(</span><span class="n">num</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">s</span> <span class="o">=</span> <span class="p">(</span><span class="n">num</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">?</span> <span class="s">"0"</span> <span class="o">:</span> <span class="s">"1"</span><span class="p">)</span> <span class="o">+</span> <span class="n">s</span><span class="p">;</span>
            <span class="n">num</span> <span class="o">/=</span> <span class="mi">2</span><span class="p">;</span>
        <span class="p">}</span>
        
        <span class="n">answer</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 30분
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.2" /><summary type="html"><![CDATA[Programmers - 70129]]></summary></entry><entry><title type="html">JadenCase 문자열 만들기</title><link href="/codingtest/programmers/lv.2/2025-07-03-codingtest_96/" rel="alternate" type="text/html" title="JadenCase 문자열 만들기" /><published>2025-07-03T00:10:00+00:00</published><updated>2025-07-11T12:11:03+00:00</updated><id>/codingtest/programmers/lv.2/codingtest_96</id><content type="html" xml:base="/codingtest/programmers/lv.2/2025-07-03-codingtest_96/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>JadenCase란 모든 단어의 첫 문자가 대문자이고, 그 외의 알파벳은 소문자인 문자열입니다. 단, 첫 문자가 알파벳이 아닐 때에는 이어지는 알파벳은 소문자로 쓰면 됩니다. (첫 번째 입출력 예 참고)
문자열 s가 주어졌을 때, s를 JadenCase로 바꾼 문자열을 리턴하는 함수, solution을 완성해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>s는 길이 1 이상 200 이하인 문자열입니다.</li>
  <li>s는 알파벳과 숫자, 공백문자(“ “)로 이루어져 있습니다.
    <ul>
      <li>숫자는 단어의 첫 문자로만 나옵니다.</li>
      <li>숫자로만 이루어진 단어는 없습니다.</li>
      <li>공백문자가 연속해서 나올 수 있습니다.</li>
    </ul>
  </li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/12951.png" width="450" height="115" /></p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">string</span> <span class="nf">solution</span><span class="p">(</span><span class="n">string</span> <span class="n">s</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">string</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>

    <span class="kt">bool</span> <span class="n">bFirst</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">s</span><span class="p">.</span><span class="n">length</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">bFirst</span> <span class="o">==</span> <span class="nb">true</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">97</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="mi">122</span><span class="p">)</span>
                <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">-=</span> <span class="mi">32</span><span class="p">;</span>
            
            <span class="n">bFirst</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span> 
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">65</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="mi">90</span><span class="p">)</span>
                <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">32</span><span class="p">;</span>
        <span class="p">}</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">' '</span><span class="p">)</span>
            <span class="n">bFirst</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="n">answer</span> <span class="o">=</span> <span class="n">s</span><span class="p">;</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 5분 30초
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.2" /><summary type="html"><![CDATA[Programmers - 12951]]></summary></entry><entry><title type="html">최솟값 만들기</title><link href="/codingtest/programmers/lv.2/2025-07-03-codingtest_95/" rel="alternate" type="text/html" title="최솟값 만들기" /><published>2025-07-03T00:00:00+00:00</published><updated>2025-07-11T12:11:03+00:00</updated><id>/codingtest/programmers/lv.2/codingtest_95</id><content type="html" xml:base="/codingtest/programmers/lv.2/2025-07-03-codingtest_95/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>길이가 같은 배열 A, B 두개가 있습니다. 각 배열은 자연수로 이루어져 있습니다.
배열 A, B에서 각각 한 개의 숫자를 뽑아 두 수를 곱합니다. 이러한 과정을 배열의 길이만큼 반복하며, 두 수를 곱한 값을 누적하여 더합니다. 이때 최종적으로 누적된 값이 최소가 되도록 만드는 것이 목표입니다. (단, 각 배열에서 k번째 숫자를 뽑았다면 다음에 k번째 숫자는 다시 뽑을 수 없습니다.)</p>

<p>예를 들어 A = [1, 4, 2] , B = [5, 4, 4] 라면</p>

<ul>
  <li>A에서 첫번째 숫자인 1, B에서 첫번째 숫자인 5를 뽑아 곱하여 더합니다. (누적된 값 : 0 + 5(1x5) = 5)</li>
  <li>A에서 두번째 숫자인 4, B에서 세번째 숫자인 4를 뽑아 곱하여 더합니다. (누적된 값 : 5 + 16(4x4) = 21)</li>
  <li>A에서 세번째 숫자인 2, B에서 두번째 숫자인 4를 뽑아 곱하여 더합니다. (누적된 값 : 21 + 8(2x4) = 29)</li>
</ul>

<p>즉, 이 경우가 최소가 되므로 29를 return 합니다.</p>

<p>배열 A, B가 주어질 때 최종적으로 누적된 최솟값을 return 하는 solution 함수를 완성해 주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>배열 A, B의 크기 : 1,000 이하의 자연수</li>
  <li>배열 A, B의 원소의 크기 : 1,000 이하의 자연수</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/12941.png" width="240" height="100" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>문제의 예시와 같습니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>A에서 첫번째 숫자인 1, B에서 두번째 숫자인 4를 뽑아 곱하여 더합니다. (누적된 값 : 4) 다음, A에서 두번째 숫자인 2, B에서 첫번째 숫자인 3을 뽑아 곱하여 더합니다. (누적된 값 : 4 + 6 = 10)
이 경우가 최소이므로 10을 return 합니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">A</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">B</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="n">sort</span><span class="p">(</span><span class="n">A</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">A</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
    <span class="n">sort</span><span class="p">(</span><span class="n">B</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">B</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">A</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">answer</span> <span class="o">+=</span> <span class="n">A</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">*</span> <span class="n">B</span><span class="p">[</span><span class="n">A</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">-</span> <span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">];</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 4분
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.2" /><summary type="html"><![CDATA[Programmers - 12941]]></summary></entry><entry><title type="html">올바른 괄호</title><link href="/codingtest/programmers/lv.2/2025-07-02-codingtest_94/" rel="alternate" type="text/html" title="올바른 괄호" /><published>2025-07-02T00:10:00+00:00</published><updated>2025-07-11T12:11:03+00:00</updated><id>/codingtest/programmers/lv.2/codingtest_94</id><content type="html" xml:base="/codingtest/programmers/lv.2/2025-07-02-codingtest_94/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>괄호가 바르게 짝지어졌다는 것은 ‘(‘ 문자로 열렸으면 반드시 짝지어서 ‘)’ 문자로 닫혀야 한다는 뜻입니다. 예를 들어</p>

<ul>
  <li>”()()” 또는 “(())()” 는 올바른 괄호입니다.</li>
  <li>”)()(“ 또는 “(()(“ 는 올바르지 않은 괄호입니다.</li>
</ul>

<p>’(‘ 또는 ‘)’ 로만 이루어진 문자열 s가 주어졌을 때, 문자열 s가 올바른 괄호이면 true를 return 하고, 올바르지 않은 괄호이면 false를 return 하는 solution 함수를 완성해 주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>문자열 s의 길이 : 100,000 이하의 자연수</li>
  <li>문자열 s는 ‘(‘ 또는 ‘)’ 로만 이루어져 있습니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/12909.png" width="170" height="180" /></p>

<p>입출력 예 #1,2,3,4</p>
<ul>
  <li>문제의 예시와 같습니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">bool</span> <span class="nf">solution</span><span class="p">(</span><span class="n">string</span> <span class="n">s</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">bool</span> <span class="n">answer</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>

    <span class="kt">int</span> <span class="n">num</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">s</span><span class="p">.</span><span class="n">length</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'('</span><span class="p">)</span>
            <span class="n">num</span><span class="o">++</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">')'</span><span class="p">)</span>
            <span class="n">num</span><span class="o">--</span><span class="p">;</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">num</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
            <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">if</span><span class="p">(</span><span class="n">num</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span>
        <span class="n">answer</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>

    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 5분
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.2" /><summary type="html"><![CDATA[Programmers - 12909]]></summary></entry><entry><title type="html">최댓값과 최솟값</title><link href="/codingtest/programmers/lv.2/2025-07-02-codingtest_93/" rel="alternate" type="text/html" title="최댓값과 최솟값" /><published>2025-07-02T00:00:00+00:00</published><updated>2025-07-11T12:11:03+00:00</updated><id>/codingtest/programmers/lv.2/codingtest_93</id><content type="html" xml:base="/codingtest/programmers/lv.2/2025-07-02-codingtest_93/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>문자열 s에는 공백으로 구분된 숫자들이 저장되어 있습니다. str에 나타나는 숫자 중 최소값과 최대값을 찾아 이를 “(최소값) (최대값)”형태의 문자열을 반환하는 함수, solution을 완성하세요.
예를들어 s가 “1 2 3 4”라면 “1 4”를 리턴하고, “-1 -2 -3 -4”라면 “-4 -1”을 리턴하면 됩니다.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>s에는 둘 이상의 정수가 공백으로 구분되어 있습니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/12939.png" width="200" height="140" /></p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">string</span> <span class="nf">solution</span><span class="p">(</span><span class="n">string</span> <span class="n">s</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">string</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">List</span><span class="p">;</span>
    
    <span class="n">string</span> <span class="n">str</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">s</span><span class="p">.</span><span class="n">length</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">' '</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">List</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">stoi</span><span class="p">(</span><span class="n">str</span><span class="p">));</span>
            <span class="n">str</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span>
            <span class="n">str</span> <span class="o">+=</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
    <span class="p">}</span>
    <span class="n">List</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">stoi</span><span class="p">(</span><span class="n">str</span><span class="p">));</span>
    
    <span class="n">answer</span> <span class="o">+=</span> <span class="n">to_string</span><span class="p">(</span><span class="o">*</span><span class="n">min_element</span><span class="p">(</span><span class="n">List</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">List</span><span class="p">.</span><span class="n">end</span><span class="p">()));</span>
    <span class="n">answer</span> <span class="o">+=</span> <span class="sc">' '</span><span class="p">;</span>
    <span class="n">answer</span> <span class="o">+=</span> <span class="n">to_string</span><span class="p">(</span><span class="o">*</span><span class="n">max_element</span><span class="p">(</span><span class="n">List</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">List</span><span class="p">.</span><span class="n">end</span><span class="p">()));</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 8분 30초
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.2" /><summary type="html"><![CDATA[Programmers - 12939]]></summary></entry><entry><title type="html">[카카오 인턴] 키패드 누르기</title><link href="/codingtest/programmers/lv.1/2025-07-01-codingtest_92/" rel="alternate" type="text/html" title="[카카오 인턴] 키패드 누르기" /><published>2025-07-01T00:00:00+00:00</published><updated>2025-07-11T12:11:03+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_92</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-07-01-codingtest_92/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>스마트폰 전화 키패드의 각 칸에 다음과 같이 숫자들이 적혀 있습니다.</p>

<p><img src="/assets/img/codingtest/67256_1.png" width="500" height="400" /></p>

<p>이 전화 키패드에서 왼손과 오른손의 엄지손가락만을 이용해서 숫자만을 입력하려고 합니다.
맨 처음 왼손 엄지손가락은 * 키패드에 오른손 엄지손가락은 # 키패드 위치에서 시작하며, 엄지손가락을 사용하는 규칙은 다음과 같습니다.</p>

<ol>
  <li>엄지손가락은 상하좌우 4가지 방향으로만 이동할 수 있으며 키패드 이동 한 칸은 거리로 1에 해당합니다.</li>
  <li>왼쪽 열의 3개의 숫자 1, 4, 7을 입력할 때는 왼손 엄지손가락을 사용합니다.</li>
  <li>오른쪽 열의 3개의 숫자 3, 6, 9를 입력할 때는 오른손 엄지손가락을 사용합니다.</li>
  <li>가운데 열의 4개의 숫자 2, 5, 8, 0을 입력할 때는 두 엄지손가락의 현재 키패드의 위치에서 더 가까운 엄지손가락을 사용합니다.
 4-1. 만약 두 엄지손가락의 거리가 같다면, 오른손잡이는 오른손 엄지손가락, 왼손잡이는 왼손 엄지손가락을 사용합니다.</li>
</ol>

<p>순서대로 누를 번호가 담긴 배열 numbers, 왼손잡이인지 오른손잡이인 지를 나타내는 문자열 hand가 매개변수로 주어질 때, 각 번호를 누른 엄지손가락이 왼손인 지 오른손인 지를 나타내는 연속된 문자열 형태로 return 하도록 solution 함수를 완성해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>numbers 배열의 크기는 1 이상 1,000 이하입니다.</li>
  <li>numbers 배열 원소의 값은 0 이상 9 이하인 정수입니다.</li>
  <li>hand는 “left” 또는 “right” 입니다.
    <ul>
      <li>“left”는 왼손잡이, “right”는 오른손잡이를 의미합니다.</li>
    </ul>
  </li>
  <li>왼손 엄지손가락을 사용한 경우는 L, 오른손 엄지손가락을 사용한 경우는 R을 순서대로 이어붙여 문자열 형태로 return 해주세요.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/67256_2.png" width="500" height="140" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>순서대로 눌러야 할 번호가 [1, 3, 4, 5, 8, 2, 1, 4, 5, 9, 5]이고, 오른손잡이입니다.</li>
</ul>

<p><img src="/assets/img/codingtest/67256_3.png" width="730" height="600" /></p>

<ul>
  <li>따라서 “LRLLLRLLRRL”를 return 합니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>왼손잡이가 [7, 0, 8, 2, 8, 3, 1, 5, 7, 6, 2]를 순서대로 누르면 사용한 손은 “LRLLRRLLLRR”이 됩니다.</li>
</ul>

<p>입출력 예 #3</p>
<ul>
  <li>오른손잡이가 [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]를 순서대로 누르면 사용한 손은 “LLRLLRLLRL”이 됩니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;cmath&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">string</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">numbers</span><span class="p">,</span> <span class="n">string</span> <span class="n">hand</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">string</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">List</span><span class="p">{{</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">},</span> <span class="p">{</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">},</span> <span class="p">{</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">},</span> <span class="p">{</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">10</span><span class="p">}};</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">Left</span><span class="p">{</span><span class="mi">3</span><span class="p">,</span><span class="mi">0</span><span class="p">};</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">Right</span><span class="p">{</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">};</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">numbers</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">List</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">List</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">size</span><span class="p">();</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">numbers</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="n">List</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="n">j</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="n">answer</span> <span class="o">+=</span> <span class="sc">'L'</span><span class="p">;</span>
                    <span class="n">Left</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">l</span><span class="p">;</span>
                    <span class="n">Left</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">j</span><span class="p">;</span>
                <span class="p">}</span>
                <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">numbers</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="n">List</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="n">j</span> <span class="o">==</span> <span class="mi">2</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="n">answer</span> <span class="o">+=</span> <span class="sc">'R'</span><span class="p">;</span>
                    <span class="n">Right</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">l</span><span class="p">;</span>
                    <span class="n">Right</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">j</span><span class="p">;</span>
                <span class="p">}</span>
                <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">numbers</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="n">List</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="n">j</span><span class="p">])</span>
                <span class="p">{</span>
                    <span class="kt">int</span> <span class="n">left</span> <span class="o">=</span> <span class="n">fabs</span><span class="p">(</span><span class="n">Left</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">l</span><span class="p">)</span> <span class="o">+</span> <span class="n">fabs</span><span class="p">(</span><span class="n">Left</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="n">j</span><span class="p">);</span>
                    <span class="kt">int</span> <span class="n">right</span> <span class="o">=</span> <span class="n">fabs</span><span class="p">(</span><span class="n">Right</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">l</span><span class="p">)</span> <span class="o">+</span> <span class="n">fabs</span><span class="p">(</span><span class="n">Right</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="n">j</span><span class="p">);</span>
                    
                    <span class="k">if</span><span class="p">(</span><span class="n">left</span> <span class="o">&lt;</span> <span class="n">right</span><span class="p">)</span>
                    <span class="p">{</span>
                        <span class="n">answer</span> <span class="o">+=</span> <span class="sc">'L'</span><span class="p">;</span>
                        <span class="n">Left</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">l</span><span class="p">;</span>
                        <span class="n">Left</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">j</span><span class="p">;</span>
                    <span class="p">}</span>
                    <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">left</span> <span class="o">&gt;</span> <span class="n">right</span><span class="p">)</span>
                    <span class="p">{</span>
                        <span class="n">answer</span> <span class="o">+=</span> <span class="sc">'R'</span><span class="p">;</span>
                        <span class="n">Right</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">l</span><span class="p">;</span>
                        <span class="n">Right</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">j</span><span class="p">;</span> 
                    <span class="p">}</span>
                    <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">left</span> <span class="o">==</span> <span class="n">right</span> <span class="o">&amp;&amp;</span> <span class="n">hand</span> <span class="o">==</span> <span class="s">"left"</span><span class="p">)</span>
                    <span class="p">{</span>
                        <span class="n">answer</span> <span class="o">+=</span> <span class="sc">'L'</span><span class="p">;</span>
                        <span class="n">Left</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">l</span><span class="p">;</span>
                        <span class="n">Left</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">j</span><span class="p">;</span>
                    <span class="p">}</span>
                    <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">left</span> <span class="o">==</span> <span class="n">right</span> <span class="o">&amp;&amp;</span> <span class="n">hand</span> <span class="o">==</span> <span class="s">"right"</span><span class="p">)</span>
                    <span class="p">{</span>
                        <span class="n">answer</span> <span class="o">+=</span> <span class="sc">'R'</span><span class="p">;</span>
                        <span class="n">Right</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">l</span><span class="p">;</span>
                        <span class="n">Right</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">j</span><span class="p">;</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 12분
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 67256]]></summary></entry><entry><title type="html">가장 많이 받은 선물</title><link href="/codingtest/programmers/lv.1/2025-06-30-codingtest_91/" rel="alternate" type="text/html" title="가장 많이 받은 선물" /><published>2025-06-30T00:00:00+00:00</published><updated>2025-07-11T12:11:03+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_91</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-30-codingtest_91/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>선물을 직접 전하기 힘들 때 카카오톡 선물하기 기능을 이용해 축하 선물을 보낼 수 있습니다. 당신의 친구들이 이번 달까지 선물을 주고받은 기록을 바탕으로 다음 달에 누가 선물을 많이 받을지 예측하려고 합니다.</p>

<ul>
  <li>두 사람이 선물을 주고받은 기록이 있다면, 이번 달까지 두 사람 사이에 더 많은 선물을 준 사람이 다음 달에 선물을 하나 받습니다.
    <ul>
      <li>예를 들어 A가 B에게 선물을 5번 줬고, B가 A에게 선물을 3번 줬다면 다음 달엔 A가 B에게 선물을 하나 받습니다.</li>
    </ul>
  </li>
  <li>두 사람이 선물을 주고받은 기록이 하나도 없거나 주고받은 수가 같다면, 선물 지수가 더 큰 사람이 선물 지수가 더 작은 사람에게 선물을 하나 받습니다.
    <ul>
      <li>선물 지수는 이번 달까지 자신이 친구들에게 준 선물의 수에서 받은 선물의 수를 뺀 값입니다.</li>
      <li>예를 들어 A가 친구들에게 준 선물이 3개고 받은 선물이 10개라면 A의 선물 지수는 -7입니다. B가 친구들에게 준 선물이 3개고 받은 선물이 2개라면 B의 선물 지수는 1입니다. 만약 A와 B가 선물을 주고받은 적이 없거나 정확히 같은 수로 선물을 주고받았다면, 다음 달엔 B가 A에게 선물을 하나 받습니다.</li>
      <li>만약 두 사람의 선물 지수도 같다면 다음 달에 선물을 주고받지 않습니다.</li>
    </ul>
  </li>
</ul>

<p>위에서 설명한 규칙대로 다음 달에 선물을 주고받을 때, 당신은 선물을 가장 많이 받을 친구가 받을 선물의 수를 알고 싶습니다.</p>

<p>친구들의 이름을 담은 1차원 문자열 배열 friends 이번 달까지 친구들이 주고받은 선물 기록을 담은 1차원 문자열 배열 gifts가 매개변수로 주어집니다. 이때, 다음달에 가장 많은 선물을 받는 친구가 받을 선물의 수를 return 하도록 solution 함수를 완성해 주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>2 ≤ friends의 길이 = 친구들의 수 ≤ 50
    <ul>
      <li>friends의 원소는 친구의 이름을 의미하는 알파벳 소문자로 이루어진 길이가 10 이하인 문자열입니다.</li>
      <li>이름이 같은 친구는 없습니다.</li>
    </ul>
  </li>
  <li>1 ≤ gifts의 길이 ≤ 10,000
    <ul>
      <li>gifts의 원소는 “A B”형태의 문자열입니다. A는 선물을 준 친구의 이름을 B는 선물을 받은 친구의 이름을 의미하며 공백 하나로 구분됩니다.</li>
      <li>A와 B는 friends의 원소이며 A와 B가 같은 이름인 경우는 존재하지 않습니다.</li>
    </ul>
  </li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/258712_1.png" width="900" height="170" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>주고받은 선물과 선물 지수를 표로 나타내면 다음과 같습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/258712_2.png" width="430" height="175" /></p>

<p><br /></p>

<p><img src="/assets/img/codingtest/258712_3.png" width="310" height="175" /></p>

<ul>
  <li>muzi는 선물을 더 많이 줬던 frodo에게서 선물을 하나 받습니다.</li>
  <li>ryan은 선물을 더 많이 줬던 muzi에게서 선물을 하나 받고, 선물을 주고받지 않았던 neo보다 선물 지수가 커 선물을 하나 받습니다.</li>
  <li>frodo는 선물을 더 많이 줬던 ryan에게 선물을 하나 받습니다.</li>
  <li>
    <p>neo는 선물을 더 많이 줬던 muzi에게서 선물을 하나 받고, 선물을 주고받지 않았던 frodo보다 선물 지수가 커 선물을 하나 받습니다.</p>
  </li>
  <li>다음달에 가장 선물을 많이 받는 사람은 ryan과 neo이고 2개의 선물을 받습니다. 따라서 2를 return 해야 합니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>주고받은 선물과 선물 지수를 표로 나타내면 다음과 같습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/258712_4.png" width="550" height="210" /></p>

<p><img src="/assets/img/codingtest/258712_5.png" width="360" height="210" /></p>

<ul>
  <li>alessandro가 선물을 더 많이 줬던 joy, brad, conan에게서 선물을 3개 받습니다. 선물을 하나씩 주고받은 david보다 선물 지수가 커 선물을 하나 받습니다.</li>
  <li>david는 선물을 주고받지 않았던 joy, brad, conan보다 선물 지수가 커 다음 달에 선물을 3개 받습니다.</li>
  <li>
    <p>joy, brad, conan은 선물을 받지 못합니다.</p>
  </li>
  <li>다음달에 가장 선물을 많이 받는 사람은 alessandro이고 4개의 선물을 받습니다. 따라서 4를 return 해야 합니다.</li>
</ul>

<p>입출력 예 #3</p>

<ul>
  <li>a와 b, a와 c, b와 c 사이에 서로 선물을 주고받은 수도 같고 세 사람의 선물 지수도 0으로 같아 다음 달엔 아무도 선물을 받지 못합니다. 따라서 0을 return 해야 합니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">friends</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">gifts</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">List</span><span class="p">(</span><span class="n">friends</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">(</span><span class="n">friends</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="mi">0</span><span class="p">));</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">GiftLog</span><span class="p">(</span><span class="n">friends</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="mi">0</span><span class="p">);</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">NextMonthGift</span><span class="p">(</span><span class="n">friends</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="mi">0</span><span class="p">);</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">gifts</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">string</span> <span class="n">str1</span> <span class="o">=</span> <span class="n">gifts</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">gifts</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">find</span><span class="p">(</span><span class="sc">' '</span><span class="p">));</span>
        <span class="n">string</span> <span class="n">str2</span> <span class="o">=</span> <span class="n">gifts</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">substr</span><span class="p">(</span><span class="n">gifts</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">find</span><span class="p">(</span><span class="sc">' '</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
        
        <span class="kt">int</span> <span class="n">num1</span><span class="p">,</span> <span class="n">num2</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">friends</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">str1</span> <span class="o">==</span> <span class="n">friends</span><span class="p">[</span><span class="n">l</span><span class="p">])</span>
                <span class="n">num1</span> <span class="o">=</span> <span class="n">l</span><span class="p">;</span>
            <span class="k">if</span><span class="p">(</span><span class="n">str2</span> <span class="o">==</span> <span class="n">friends</span><span class="p">[</span><span class="n">l</span><span class="p">])</span>
                <span class="n">num2</span> <span class="o">=</span> <span class="n">l</span><span class="p">;</span>
        <span class="p">}</span>
        
        <span class="n">List</span><span class="p">[</span><span class="n">num1</span><span class="p">][</span><span class="n">num2</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
        <span class="n">GiftLog</span><span class="p">[</span><span class="n">num1</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
        <span class="n">GiftLog</span><span class="p">[</span><span class="n">num2</span><span class="p">]</span><span class="o">--</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">List</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">List</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">l</span><span class="p">)</span>
                <span class="k">continue</span><span class="p">;</span>
            
            <span class="k">if</span><span class="p">(</span><span class="n">List</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">List</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="n">i</span><span class="p">])</span>
                <span class="n">NextMonthGift</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">List</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">List</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="n">i</span><span class="p">])</span>
                <span class="n">NextMonthGift</span><span class="p">[</span><span class="n">l</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">List</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="p">]</span> <span class="o">==</span> <span class="n">List</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="n">i</span><span class="p">])</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">GiftLog</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">GiftLog</span><span class="p">[</span><span class="n">l</span><span class="p">])</span>
                    <span class="n">NextMonthGift</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
                <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">GiftLog</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">GiftLog</span><span class="p">[</span><span class="n">l</span><span class="p">])</span>
                    <span class="n">NextMonthGift</span><span class="p">[</span><span class="n">l</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="n">answer</span> <span class="o">=</span> <span class="o">*</span><span class="n">max_element</span><span class="p">(</span><span class="n">NextMonthGift</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">NextMonthGift</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
    <span class="n">answer</span> <span class="o">/=</span> <span class="mi">2</span><span class="p">;</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 41분
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 258712]]></summary></entry><entry><title type="html">택배 상자 꺼내기</title><link href="/codingtest/programmers/lv.1/2025-06-26-codingtest_90/" rel="alternate" type="text/html" title="택배 상자 꺼내기" /><published>2025-06-26T00:00:00+00:00</published><updated>2025-07-11T12:11:03+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_90</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-26-codingtest_90/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>1 ~ n의 번호가 있는 택배 상자가 창고에 있습니다. 당신은 택배 상자들을 다음과 같이 정리했습니다.</p>

<p>왼쪽에서 오른쪽으로 가면서 1번 상자부터 번호 순서대로 택배 상자를 한 개씩 놓습니다. 가로로 택배 상자를 w개 놓았다면 이번에는 오른쪽에서 왼쪽으로 가면서 그 위층에 택배 상자를 한 개씩 놓습니다. 그 층에 상자를 w개 놓아 가장 왼쪽으로 돌아왔다면 또다시 왼쪽에서 오른쪽으로 가면서 그 위층에 상자를 놓습니다. 이러한 방식으로 n개의 택배 상자를 모두 놓을 때까지 한 층에 w개씩 상자를 쌓습니다.</p>

<p><img src="/assets/img/codingtest/389478_1.png" width="500" height="350" /></p>

<ul>
  <li>위 그림은 w = 6일 때 택배 상자 22개를 쌓은 예시입니다.</li>
</ul>

<p>다음 날 손님은 자신의 택배를 찾으러 창고에 왔습니다. 당신은 손님이 자신의 택배 상자 번호를 말하면 해당 택배 상자를 꺼내줍니다. 택배 상자 A를 꺼내려면 먼저 A 위에 있는 다른 모든 상자를 꺼내야 A를 꺼낼 수 있습니다. 예를 들어, 위 그림에서 8번 상자를 꺼내려면 먼저 20번, 17번 상자를 꺼내야 합니다.</p>

<p>당신은 꺼내려는 상자 번호가 주어졌을 때, 꺼내려는 상자를 포함해 총 몇 개의 택배 상자를 꺼내야 하는지 알고 싶습니다.</p>

<p>창고에 있는 택배 상자의 개수를 나타내는 정수 n, 가로로 놓는 상자의 개수를 나타내는 정수 w와 꺼내려는 택배 상자의 번호를 나타내는 정수 num이 매개변수로 주어집니다. 이때, 꺼내야 하는 상자의 총개수를 return 하도록 solution 함수를 완성해 주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>2 ≤ n ≤ 100</li>
  <li>1 ≤ w ≤ 10</li>
  <li>1 ≤ num ≤ n</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
테스트 케이스 구성 안내
</p>

<p>아래는 테스트 케이스 구성을 나타냅니다. 각 그룹 내의 테스트 케이스를 모두 통과하면 해당 그룹에 할당된 점수를 획득할 수 있습니다.</p>

<p><img src="/assets/img/codingtest/389478_2.png" width="340" height="140" /></p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/389478_3.png" width="280" height="115" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>문제 예시와 같습니다. 꺼내야 하는 상자의 총개수는 8번 상자를 포함해 3개입니다.</li>
</ul>

<p>입출력 예 #2</p>

<p><img src="/assets/img/codingtest/389478_4.png" width="300" height="420" /></p>

<ul>
  <li>6번 상자를 꺼내려면 먼저 13, 12, 7번 상자를 꺼내야 합니다.
따라서 4를 return 합니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="kt">int</span> <span class="n">w</span><span class="p">,</span> <span class="kt">int</span> <span class="n">num</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">list</span><span class="p">(</span><span class="n">n</span> <span class="o">/</span> <span class="n">w</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">(</span><span class="n">w</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">));</span>
    <span class="kt">int</span> <span class="n">row</span><span class="p">,</span> <span class="n">column</span><span class="p">;</span>
    
    <span class="kt">bool</span> <span class="n">reverse</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">reverse</span> <span class="o">==</span> <span class="nb">false</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">list</span><span class="p">[</span><span class="n">n</span> <span class="o">/</span> <span class="n">w</span> <span class="o">-</span> <span class="n">i</span> <span class="o">/</span> <span class="n">w</span><span class="p">][</span><span class="n">i</span> <span class="o">%</span> <span class="n">w</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
            <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">==</span> <span class="n">num</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">row</span> <span class="o">=</span> <span class="n">n</span> <span class="o">/</span> <span class="n">w</span> <span class="o">-</span> <span class="n">i</span> <span class="o">/</span> <span class="n">w</span><span class="p">;</span>
                <span class="n">column</span> <span class="o">=</span> <span class="n">i</span> <span class="o">%</span> <span class="n">w</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">reverse</span> <span class="o">==</span> <span class="nb">true</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">list</span><span class="p">[</span><span class="n">n</span> <span class="o">/</span> <span class="n">w</span> <span class="o">-</span> <span class="n">i</span> <span class="o">/</span> <span class="n">w</span><span class="p">][</span><span class="n">w</span> <span class="o">-</span> <span class="n">i</span> <span class="o">%</span> <span class="n">w</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
            <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">==</span> <span class="n">num</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">row</span> <span class="o">=</span> <span class="n">n</span> <span class="o">/</span> <span class="n">w</span> <span class="o">-</span> <span class="n">i</span> <span class="o">/</span> <span class="n">w</span><span class="p">;</span>
                <span class="n">column</span> <span class="o">=</span> <span class="n">w</span> <span class="o">-</span> <span class="n">i</span> <span class="o">%</span> <span class="n">w</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        
        <span class="k">if</span><span class="p">((</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="n">w</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">reverse</span> <span class="o">==</span> <span class="nb">false</span><span class="p">)</span>
                <span class="n">reverse</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">reverse</span> <span class="o">==</span> <span class="nb">true</span><span class="p">)</span>
                <span class="n">reverse</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">row</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">list</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">column</span><span class="p">]</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span>
            <span class="n">answer</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 19분
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 389478]]></summary></entry><entry><title type="html">[PCCP 기출문제] 1번 / 동영상 재생기</title><link href="/codingtest/programmers/lv.1/2025-06-25-codingtest_89/" rel="alternate" type="text/html" title="[PCCP 기출문제] 1번 / 동영상 재생기" /><published>2025-06-25T00:00:00+00:00</published><updated>2025-07-11T12:11:03+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_89</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-25-codingtest_89/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>당신은 동영상 재생기를 만들고 있습니다. 당신의 동영상 재생기는 10초 전으로 이동, 10초 후로 이동, 오프닝 건너뛰기 3가지 기능을 지원합니다. 각 기능이 수행하는 작업은 다음과 같습니다.</p>

<ul>
  <li>10초 전으로 이동: 사용자가 “prev” 명령을 입력할 경우 동영상의 재생 위치를 현재 위치에서 10초 전으로 이동합니다. 현재 위치가 10초 미만인 경우 영상의 처음 위치로 이동합니다. 영상의 처음 위치는 0분 0초입니다.</li>
  <li>10초 후로 이동: 사용자가 “next” 명령을 입력할 경우 동영상의 재생 위치를 현재 위치에서 10초 후로 이동합니다. 동영상의 남은 시간이 10초 미만일 경우 영상의 마지막 위치로 이동합니다. 영상의 마지막 위치는 동영상의 길이와 같습니다.</li>
  <li>오프닝 건너뛰기: 현재 재생 위치가 오프닝 구간(op_start ≤ 현재 재생 위치 ≤ op_end)인 경우 자동으로 오프닝이 끝나는 위치로 이동합니다.</li>
</ul>

<p>동영상의 길이를 나타내는 문자열 video_len, 기능이 수행되기 직전의 재생위치를 나타내는 문자열 pos, 오프닝 시작 시각을 나타내는 문자열 op_start, 오프닝이 끝나는 시각을 나타내는 문자열 op_end, 사용자의 입력을 나타내는 1차원 문자열 배열 commands가 매개변수로 주어집니다. 이때 사용자의 입력이 모두 끝난 후 동영상의 위치를 “mm:ss” 형식으로 return 하도록 solution 함수를 완성해 주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>video_len의 길이 = pos의 길이 = op_start의 길이 = op_end의 길이 = 5
    <ul>
      <li>video_len, pos, op_start, op_end는 “mm:ss” 형식으로 mm분 ss초를 나타냅니다.</li>
      <li>0 ≤ mm ≤ 59</li>
      <li>0 ≤ ss ≤ 59</li>
      <li>분, 초가 한 자리일 경우 0을 붙여 두 자리로 나타냅니다.</li>
      <li>비디오의 현재 위치 혹은 오프닝이 끝나는 시각이 동영상의 범위 밖인 경우는 주어지지 않습니다.</li>
      <li>오프닝이 시작하는 시각은 항상 오프닝이 끝나는 시각보다 전입니다.</li>
    </ul>
  </li>
  <li>1 ≤ commands의 길이 ≤ 100
    <ul>
      <li>commands의 원소는 “prev” 혹은 “next”입니다.</li>
      <li>“prev”는 10초 전으로 이동하는 명령입니다.</li>
      <li>“next”는 10초 후로 이동하는 명령입니다.</li>
    </ul>
  </li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/340213.png" width="600" height="140" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>시작 위치 13분 0초에서 10초 후로 이동하면 13분 10초입니다.</li>
  <li>13분 10초에서 10초 전으로 이동하면 13분 0초입니다.</li>
  <li>따라서 “13:00”을 return 하면 됩니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>시작 위치 0분 5초에서 10초 전으로 이동합니다. 현재 위치가 10초 미만이기 때문에 0분 0초로 이동합니다.</li>
  <li>0분 0초에서 10초 후로 이동하면 0분 10초입니다.</li>
  <li>0분 10초에서 10초 후로 이동하면 0분 20초입니다. 0분 20초는 오프닝 구간이기 때문에 오프닝이 끝나는 위치인 6분 55초로 이동합니다. 따라서 “06:55”를 return 하면 됩니다.</li>
</ul>

<p>입출력 예 #3</p>
<ul>
  <li>시작 위치 4분 5초는 오프닝 구간이기 때문에 오프닝이 끝나는 위치인 4분 7초로 이동합니다. 4분 7초에서 10초 후로 이동하면 4분 17초입니다. 따라서 “04:17”을 return 하면 됩니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">void</span> <span class="nf">checkopening</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&amp;</span> <span class="n">ipos</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">iop_start</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">iop_end</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">pos</span> <span class="o">=</span> <span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="mi">60</span> <span class="o">+</span> <span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
    <span class="kt">int</span> <span class="n">start</span> <span class="o">=</span> <span class="n">iop_start</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="mi">60</span> <span class="o">+</span> <span class="n">iop_start</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
    <span class="kt">int</span> <span class="n">end</span> <span class="o">=</span> <span class="n">iop_end</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="mi">60</span> <span class="o">+</span> <span class="n">iop_end</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
    
    <span class="k">if</span><span class="p">(</span><span class="n">pos</span> <span class="o">&gt;=</span> <span class="n">start</span> <span class="o">&amp;&amp;</span> <span class="n">pos</span> <span class="o">&lt;</span> <span class="n">end</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">iop_end</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
        <span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">iop_end</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="n">string</span> <span class="nf">solution</span><span class="p">(</span><span class="n">string</span> <span class="n">video_len</span><span class="p">,</span> <span class="n">string</span> <span class="n">pos</span><span class="p">,</span> <span class="n">string</span> <span class="n">op_start</span><span class="p">,</span> <span class="n">string</span> <span class="n">op_end</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">commands</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">string</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">ivideo_len</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">ipos</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">iop_start</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">iop_end</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    
    <span class="n">ivideo_len</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">stoi</span><span class="p">(</span><span class="n">video_len</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">video_len</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="sc">':'</span><span class="p">)));</span>
    <span class="n">ivideo_len</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">stoi</span><span class="p">(</span><span class="n">video_len</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="n">video_len</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="sc">':'</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">));</span>
    
    <span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">stoi</span><span class="p">(</span><span class="n">pos</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">pos</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="sc">':'</span><span class="p">)));</span>
    <span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">stoi</span><span class="p">(</span><span class="n">pos</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="n">pos</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="sc">':'</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">));</span>
    
    <span class="n">iop_start</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">stoi</span><span class="p">(</span><span class="n">op_start</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">op_start</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="sc">':'</span><span class="p">)));</span>
    <span class="n">iop_start</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">stoi</span><span class="p">(</span><span class="n">op_start</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="n">op_start</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="sc">':'</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">));</span>
    
    <span class="n">iop_end</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">stoi</span><span class="p">(</span><span class="n">op_end</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">op_end</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="sc">':'</span><span class="p">)));</span>
    <span class="n">iop_end</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">stoi</span><span class="p">(</span><span class="n">op_end</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="n">op_end</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="sc">':'</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">));</span>
    
    <span class="n">checkopening</span><span class="p">(</span><span class="n">ipos</span><span class="p">,</span> <span class="n">iop_start</span><span class="p">,</span> <span class="n">iop_end</span><span class="p">);</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">commands</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">commands</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="s">"next"</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">10</span><span class="p">;</span>
            
            <span class="k">if</span><span class="p">(</span><span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">60</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>
                <span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">-=</span> <span class="mi">60</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="n">ivideo_len</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="n">ivideo_len</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
            <span class="p">{</span>
                <span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">ivideo_len</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
                <span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">ivideo_len</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">commands</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="s">"prev"</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">-=</span> <span class="mi">10</span><span class="p">;</span>
            <span class="k">if</span><span class="p">(</span><span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-=</span> <span class="mi">1</span><span class="p">;</span>
                <span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">60</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
                <span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    
        <span class="n">checkopening</span><span class="p">(</span><span class="n">ipos</span><span class="p">,</span> <span class="n">iop_start</span><span class="p">,</span> <span class="n">iop_end</span><span class="p">);</span>
    <span class="p">}</span>
    
    <span class="k">if</span><span class="p">(</span><span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="mi">9</span><span class="p">)</span>
        <span class="n">answer</span> <span class="o">+=</span> <span class="sc">'0'</span><span class="p">;</span>
    <span class="n">answer</span> <span class="o">+=</span> <span class="n">to_string</span><span class="p">(</span><span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
    <span class="n">answer</span> <span class="o">+=</span> <span class="sc">':'</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="mi">9</span><span class="p">)</span>
        <span class="n">answer</span> <span class="o">+=</span> <span class="sc">'0'</span><span class="p">;</span>
    <span class="n">answer</span> <span class="o">+=</span> <span class="n">to_string</span><span class="p">(</span><span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 51분
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 340213]]></summary></entry><entry><title type="html">신고 결과 받기</title><link href="/codingtest/programmers/lv.1/2025-06-24-codingtest_88/" rel="alternate" type="text/html" title="신고 결과 받기" /><published>2025-06-24T00:00:00+00:00</published><updated>2025-07-11T12:11:03+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_88</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-24-codingtest_88/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>신입사원 무지는 게시판 불량 이용자를 신고하고 처리 결과를 메일로 발송하는 시스템을 개발하려 합니다. 무지가 개발하려는 시스템은 다음과 같습니다.</p>

<ul>
  <li>각 유저는 한 번에 한 명의 유저를 신고할 수 있습니다.
    <ul>
      <li>신고 횟수에 제한은 없습니다. 서로 다른 유저를 계속해서 신고할 수 있습니다.</li>
      <li>한 유저를 여러 번 신고할 수도 있지만, 동일한 유저에 대한 신고 횟수는 1회로 처리됩니다.</li>
    </ul>
  </li>
  <li>k번 이상 신고된 유저는 게시판 이용이 정지되며, 해당 유저를 신고한 모든 유저에게 정지 사실을 메일로 발송합니다.
    <ul>
      <li>유저가 신고한 모든 내용을 취합하여 마지막에 한꺼번에 게시판 이용 정지를 시키면서 정지 메일을 발송합니다.</li>
    </ul>
  </li>
</ul>

<p>다음은 전체 유저 목록이 [“muzi”, “frodo”, “apeach”, “neo”]이고, k = 2(즉, 2번 이상 신고당하면 이용 정지)인 경우의 예시입니다.</p>

<p><img src="/assets/img/codingtest/92334_1.png" width="540" height="220" /></p>

<p>각 유저별로 신고당한 횟수는 다음과 같습니다.</p>

<p><img src="/assets/img/codingtest/92334_2.png" width="220" height="180" /></p>

<p>위 예시에서는 2번 이상 신고당한 “frodo”와 “neo”의 게시판 이용이 정지됩니다. 이때, 각 유저별로 신고한 아이디와 정지된 아이디를 정리하면 다음과 같습니다.</p>

<p><img src="/assets/img/codingtest/92334_3.png" width="380" height="180" /></p>

<p>따라서 “muzi”는 처리 결과 메일을 2회, “frodo”와 “apeach”는 각각 처리 결과 메일을 1회 받게 됩니다.</p>

<p>이용자의 ID가 담긴 문자열 배열 id_list, 각 이용자가 신고한 이용자의 ID 정보가 담긴 문자열 배열 report, 정지 기준이 되는 신고 횟수 k가 매개변수로 주어질 때, 각 유저별로 처리 결과 메일을 받은 횟수를 배열에 담아 return 하도록 solution 함수를 완성해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>2 ≤ id_list의 길이 ≤ 1,000
    <ul>
      <li>1 ≤ id_list의 원소 길이 ≤ 10</li>
      <li>id_list의 원소는 이용자의 id를 나타내는 문자열이며 알파벳 소문자로만 이루어져 있습니다.</li>
      <li>id_list에는 같은 아이디가 중복해서 들어있지 않습니다.</li>
    </ul>
  </li>
  <li>1 ≤ report의 길이 ≤ 200,000
    <ul>
      <li>3 ≤ report의 원소 길이 ≤ 21</li>
      <li>report의 원소는 “이용자id 신고한id”형태의 문자열입니다.</li>
      <li>예를 들어 “muzi frodo”의 경우 “muzi”가 “frodo”를 신고했다는 의미입니다.</li>
      <li>id는 알파벳 소문자로만 이루어져 있습니다.</li>
      <li>이용자id와 신고한id는 공백(스페이스)하나로 구분되어 있습니다.</li>
      <li>자기 자신을 신고하는 경우는 없습니다.</li>
    </ul>
  </li>
  <li>1 ≤ k ≤ 200, k는 자연수입니다.</li>
  <li>return 하는 배열은 id_list에 담긴 id 순서대로 각 유저가 받은 결과 메일 수를 담으면 됩니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/92334_4.png" width="800" height="160" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>문제의 예시와 같습니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>“ryan”이 “con”을 4번 신고했으나, 주어진 조건에 따라 한 유저가 같은 유저를 여러 번 신고한 경우는 신고 횟수 1회로 처리합니다. 따라서 “con”은 1회 신고당했습니다. 3번 이상 신고당한 이용자는 없으며, “con”과 “ryan”은 결과 메일을 받지 않습니다. 따라서 [0, 0]을 return 합니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">id_list</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">report</span><span class="p">,</span> <span class="kt">int</span> <span class="n">k</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">(</span><span class="n">id_list</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="mi">0</span><span class="p">);</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">relist</span><span class="p">(</span><span class="n">id_list</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="mi">0</span><span class="p">);</span>
    
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;&gt;</span> <span class="n">list</span><span class="p">(</span><span class="n">report</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="s">""</span><span class="p">));</span>
    
    <span class="n">sort</span><span class="p">(</span><span class="n">report</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">report</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
    <span class="n">report</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">unique</span><span class="p">(</span><span class="n">report</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">report</span><span class="p">.</span><span class="n">end</span><span class="p">()),</span> <span class="n">report</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">report</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">list</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">report</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">report</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">find</span><span class="p">(</span><span class="sc">' '</span><span class="p">));</span>
        <span class="n">list</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">report</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">substr</span><span class="p">(</span><span class="n">report</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">find</span><span class="p">(</span><span class="sc">' '</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
        
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">id_list</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">list</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">id_list</span><span class="p">[</span><span class="n">l</span><span class="p">])</span>
                <span class="n">relist</span><span class="p">[</span><span class="n">l</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
        
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">relist</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">relist</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="n">k</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">list</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">list</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">id_list</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
                <span class="p">{</span>
                    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">id_list</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
                    <span class="p">{</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">list</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="n">id_list</span><span class="p">[</span><span class="n">j</span><span class="p">])</span>
                            <span class="n">answer</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 38분 30초
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 92334]]></summary></entry></feed>