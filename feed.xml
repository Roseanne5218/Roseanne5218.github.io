<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ko"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" hreflang="ko" /><updated>2025-06-03T08:23:01+00:00</updated><id>/feed.xml</id><title type="html">Roseanne</title><subtitle>Hydejack is a boutique Jekyll theme for hackers, nerds, and academics, with a focus on personal sites that are meant to impress.
</subtitle><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><entry><title type="html">[PCCE 기출문제] 9번 / 지폐 접기</title><link href="/codingtest/programmers/lv.1/2025-06-03-codingtest_64/" rel="alternate" type="text/html" title="[PCCE 기출문제] 9번 / 지폐 접기" /><published>2025-06-03T00:20:00+00:00</published><updated>2025-06-03T08:22:17+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_64</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-03-codingtest_64/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>민수는 다양한 지폐를 수집하는 취미를 가지고 있습니다. 지폐마다 크기가 달라 지갑에 넣으려면 여러 번 접어서 넣어야 합니다. 예를 들어 지갑의 크기가 30 * 15이고 지폐의 크기가 26 * 17이라면 한번 반으로 접어 13 * 17 크기로 만든 뒤 90도 돌려서 지갑에 넣을 수 있습니다. 지폐를 접을 때는 다음과 같은 규칙을 지킵니다.</p>

<ul>
  <li>지폐를 접을 때는 항상 길이가 긴 쪽을 반으로 접습니다.</li>
  <li>접기 전 길이가 홀수였다면 접은 후 소수점 이하는 버립니다.</li>
  <li>접힌 지폐를 그대로 또는 90도 돌려서 지갑에 넣을 수 있다면 그만 접습니다.</li>
</ul>

<p>지갑의 가로, 세로 크기를 담은 정수 리스트 wallet과 지폐의 가로, 세로 크기를 담은 정수 리스트 bill가 주어질 때, 지갑에 넣기 위해서 지폐를 최소 몇 번 접어야 하는지 return하도록 solution함수를 완성해 주세요.</p>

<p>지폐를 지갑에 넣기 위해 접어야 하는 최소 횟수를 구하는 과정은 다음과 같습니다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. 지폐를 접은 횟수를 저장할 정수 변수 answer를 만들고 0을 저장합니다.
2. 반복문을 이용해 bill의 작은 값이 wallet의 작은 값 보다 크거나 bill의 큰 값이 wallet의 큰 값 보다 큰 동안 아래 과정을 반복합니다.
    2-1. bill[0]이 bill[1]보다 크다면
        bill[0]을 2로 나누고 나머지는 버립니다.
    2-2. 그렇지 않다면
        bill[1]을 2로 나누고 나머지는 버립니다.
    2-3. answer을 1 증가시킵니다.
3. answer을 return합니다.
</code></pre></div></div>

<ul>
  <li>위의 의사코드와 작동방식이 다른 코드를 작성해도 상관없습니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한 사항
</p>

<ul>
  <li>wallet의 길이 = bill의 길이 = 2</li>
  <li>10 ≤ wallet[0], wallet[1] ≤ 100</li>
  <li>10 ≤ bill[0], bill[1] ≤ 2,000</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예
</p>

<p><img src="/assets/img/codingtest/340199.png" width="300" height="120" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>지문과 동일합니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>지폐를 접으면 다음과 같이 크기가 줄어듭니다. 따라서 4번 접으면 지갑에 넣을 수 있습니다.</li>
  <li>[100, 241] -&gt; [100, 120] -&gt; [100, 60] -&gt; [50, 60] -&gt; [50, 30]</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">wallet</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">bill</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    
    <span class="n">sort</span><span class="p">(</span><span class="n">wallet</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">wallet</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
    <span class="n">sort</span><span class="p">(</span><span class="n">bill</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">bill</span><span class="p">.</span><span class="n">end</span><span class="p">());</span> 
    
    <span class="k">while</span><span class="p">(</span><span class="nb">true</span><span class="p">)</span>
    <span class="p">{</span>    
        <span class="k">if</span><span class="p">(</span><span class="n">wallet</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="n">bill</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="n">wallet</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="n">bill</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
            <span class="k">break</span><span class="p">;</span>
        
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="n">bill</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">/=</span> <span class="mi">2</span><span class="p">;</span>
            
            <span class="n">answer</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">bill</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">bill</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
        <span class="p">{</span>
            <span class="kt">int</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">bill</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
            <span class="n">bill</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">bill</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
            <span class="n">bill</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">temp</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 28분 30초  
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 340199]]></summary></entry><entry><title type="html">옹알이 (2)</title><link href="/codingtest/programmers/lv.1/2025-06-03-codingtest_63/" rel="alternate" type="text/html" title="옹알이 (2)" /><published>2025-06-03T00:10:00+00:00</published><updated>2025-06-03T08:22:17+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_63</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-03-codingtest_63/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>머쓱이는 태어난 지 11개월 된 조카를 돌보고 있습니다. 조카는 아직 “aya”, “ye”, “woo”, “ma” 네 가지 발음과 네 가지 발음을 조합해서 만들 수 있는 발음밖에 하지 못하고 연속해서 같은 발음을 하는 것을 어려워합니다. 문자열 배열 babbling이 매개변수로 주어질 때, 머쓱이의 조카가 발음할 수 있는 단어의 개수를 return하도록 solution 함수를 완성해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한 사항
</p>

<ul>
  <li>1 ≤ babbling의 길이 ≤ 100</li>
  <li>1 ≤ babbling[i]의 길이 ≤ 30</li>
  <li>문자열은 알파벳 소문자로만 이루어져 있습니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예
</p>

<p><img src="/assets/img/codingtest/133499.png" width="490" height="120" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>[“aya”, “yee”, “u”, “maa”]에서 발음할 수 있는 것은 “aya”뿐입니다. 따라서 1을 return합니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>[“ayaye”, “uuu”, “yeye”, “yemawoo”, “ayaayaa”]에서 발음할 수 있는 것은 “aya” + “ye” = “ayaye”, “ye” + “ma” + “woo” = “yemawoo”로 2개입니다. “yeye”는 같은 발음이 연속되므로 발음할 수 없습니다. 따라서 2를 return합니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
유의사항
</p>

<ul>
  <li>네 가지를 붙여 만들 수 있는 발음 이외에는 어떤 발음도 할 수 없는 것으로 규정합니다. 예를 들어 “woowo”는 “woo”는 발음할 수 있지만 “wo”를 발음할 수 없기 때문에 할 수 없는 발음입니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<pre><code class="language-C++">#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;vector&gt;

using namespace std;

int solution(vector&lt;string&gt; babbling) {
    int answer = 0;
    
    vector&lt;string&gt; Words = {"aya", "ye", "woo", "ma"};
    
    for(int i=0; i&lt;babbling.size(); i++)
    {
        string s = "";
        bool check = true;
        int prev = -1;
        
        for(int l=0; l&lt;babbling[i].size(); l++)
        {
            s += babbling[i][l];
        
            for(int j=0; j&lt;4; j++)
            {
                if(s == Words[j] &amp;&amp; prev == j)
                {
                    check = false;
                    break;
                }
                else if(s == Words[j])
                {
                    s = "";
                    prev = j;
                }
            }
            
            if(s.length() &gt; 3)
            {
                check = false;
                break;
            }
        }
        
        bool check2 = false; 
        
        for(int l=0; l&lt;Words.size(); l++)
        {
            if(s == Words[l] &amp;&amp; prev != l)
            {
                check2 = true;
            }
        }

        if(s == "")
            check2 = true;
        
        if(check2 == false)
            check = false;
        
        if(check == true)
            answer++;
    }
    
    return answer;
}
</code></pre>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 30분 30초  
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 133499]]></summary></entry><entry><title type="html">소수 만들기</title><link href="/codingtest/programmers/lv.1/2025-06-03-codingtest_62/" rel="alternate" type="text/html" title="소수 만들기" /><published>2025-06-03T00:00:00+00:00</published><updated>2025-06-03T08:22:17+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_62</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-03-codingtest_62/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>주어진 숫자 중 3개의 수를 더했을 때 소수가 되는 경우의 개수를 구하려고 합니다. 숫자들이 들어있는 배열 nums가 매개변수로 주어질 때, nums에 있는 숫자들 중 서로 다른 3개를 골라 더했을 때 소수가 되는 경우의 개수를 return 하도록 solution 함수를 완성해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한 사항
</p>

<ul>
  <li>nums에 들어있는 숫자의 개수는 3개 이상 50개 이하입니다.</li>
  <li>nums의 각 원소는 1 이상 1,000 이하의 자연수이며, 중복된 숫자가 들어있지 않습니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예
</p>

<p><img src="/assets/img/codingtest/12977.png" width="200" height="120" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>[1,2,4]를 이용해서 7을 만들 수 있습니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>[1,2,4]를 이용해서 7을 만들 수 있습니다.</li>
  <li>[1,4,6]을 이용해서 11을 만들 수 있습니다.</li>
  <li>[2,4,7]을 이용해서 13을 만들 수 있습니다.</li>
  <li>[4,6,7]을 이용해서 17을 만들 수 있습니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<pre><code class="language-C++">#include &lt;iostream&gt;
#include &lt;vector&gt;

using namespace std;

int solution(vector&lt;int&gt; nums) {
    int answer = 0;

    vector&lt;int&gt; number;
    
    for(int i=0; i&lt;nums.size()-2; i++)
    {
        for(int j=i+1; j&lt;nums.size()-1; j++)
        {
            for(int l=j+1; l&lt;nums.size(); l++)
            {
                int sum = nums[i] + nums[j] + nums[l];
                number.push_back(sum);
            }
        }
    }
    
    for(int i=0; i&lt;number.size(); i++)
    {
        bool check = false;
        for(int l=2; l*l&lt;=number[i]; l++)
        {
            if(number[i] % l == 0)
            {
                check = true;   
                break;
            }
        }
        if(check == false)
            answer++;
    }

    return answer;
}
</code></pre>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 21분  
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 12977]]></summary></entry><entry><title type="html">소수 찾기</title><link href="/codingtest/programmers/lv.1/2025-06-02-codingtest_61/" rel="alternate" type="text/html" title="소수 찾기" /><published>2025-06-02T00:40:00+00:00</published><updated>2025-06-03T08:22:17+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_61</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-02-codingtest_61/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>1부터 입력받은 숫자 n 사이에 있는 소수의 개수를 반환하는 함수, solution을 만들어 보세요.</p>

<p>소수는 1과 자기 자신으로만 나누어지는 수를 의미합니다.
(1은 소수가 아닙니다.)</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한 사항
</p>

<ul>
  <li>n은 2이상 1000000이하의 자연수입니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예
</p>

<p><img src="/assets/img/codingtest/12921.png" width="150" height="110" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>1부터 10 사이의 소수는 [2,3,5,7] 4개가 존재하므로 4를 반환</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>1부터 5 사이의 소수는 [2,3,5] 3개가 존재하므로 3를 반환</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<pre><code class="language-C++">#include &lt;iostream&gt;
#include &lt;vector&gt;

using namespace std;

int solution(int n) {
    int answer = 0;
    
    vector&lt;bool&gt; Count(n+1, true);
    Count[0] = false;
    Count[1] = false;
    
    for(int i=2; i*i&lt;=n; i++)
    {
        if(Count[i] == true)
        {
            for(int j=i*i; j&lt;=n; j+=i)
            {
                Count[j] = false;
            }
        }
    }
    
    for(int i=0; i&lt;=n; i++)
    {
        if(Count[i] == true)
            answer++;
    }
    
    return answer;
}
</code></pre>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 X
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 15분  
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
문제 소감
</p>

<ul>
  <li>해당 문제를 풀면서 소수를 찾는 거도 방법이지만, 효율성을 높이기 위해서는 소수가 아닌 것을 제외하는 방법이 빠르다는 것을 알았다.</li>
  <li>배제를 하기 위해서 어떤 숫자가 해당 조건에 성립되지 않는지 빨리 파악할 필요가 있다고 생각했다.</li>
  <li>해당 코드는 에레 스토 테네스의 체를 이용하여 작성하였다.</li>
</ul>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 12921]]></summary></entry><entry><title type="html">덧칠하기</title><link href="/codingtest/programmers/lv.1/2025-06-02-codingtest_60/" rel="alternate" type="text/html" title="덧칠하기" /><published>2025-06-02T00:30:00+00:00</published><updated>2025-06-03T08:22:17+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_60</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-02-codingtest_60/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>어느 학교에 페인트가 칠해진 길이가 n미터인 벽이 있습니다. 벽에 동아리 · 학회 홍보나 회사 채용 공고 포스터 등을 게시하기 위해 테이프로 붙였다가 철거할 때 떼는 일이 많고 그 과정에서 페인트가 벗겨지곤 합니다. 페인트가 벗겨진 벽이 보기 흉해져 학교는 벽에 페인트를 덧칠하기로 했습니다.</p>

<p>넓은 벽 전체에 페인트를 새로 칠하는 대신, 구역을 나누어 일부만 페인트를 새로 칠 함으로써 예산을 아끼려 합니다. 이를 위해 벽을 1미터 길이의 구역 n개로 나누고, 각 구역에 왼쪽부터 순서대로 1번부터 n번까지 번호를 붙였습니다. 그리고 페인트를 다시 칠해야 할 구역들을 정했습니다.</p>

<p>벽에 페인트를 칠하는 롤러의 길이는 m미터이고, 롤러로 벽에 페인트를 한 번 칠하는 규칙은 다음과 같습니다.</p>

<ul>
  <li>롤러가 벽에서 벗어나면 안 됩니다.</li>
  <li>구역의 일부분만 포함되도록 칠하면 안 됩니다.</li>
</ul>

<p>즉, 롤러의 좌우측 끝을 구역의 경계선 혹은 벽의 좌우측 끝부분에 맞춘 후 롤러를 위아래로 움직이면서 벽을 칠합니다. 현재 페인트를 칠하는 구역들을 완전히 칠한 후 벽에서 롤러를 떼며, 이를 벽을 한 번 칠했다고 정의합니다.</p>

<p>한 구역에 페인트를 여러 번 칠해도 되고 다시 칠해야 할 구역이 아닌 곳에 페인트를 칠해도 되지만 다시 칠하기로 정한 구역은 적어도 한 번 페인트칠을 해야 합니다. 예산을 아끼기 위해 다시 칠할 구역을 정했듯 마찬가지로 롤러로 페인트칠을 하는 횟수를 최소화하려고 합니다.</p>

<p>정수 n, m과 다시 페인트를 칠하기로 정한 구역들의 번호가 담긴 정수 배열 section이 매개변수로 주어질 때 롤러로 페인트칠해야 하는 최소 횟수를 return 하는 solution 함수를 작성해 주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한 사항
</p>

<ul>
  <li>1 ≤ m ≤ n ≤ 100,000</li>
  <li>1 ≤ section의 길이 ≤ n
    <ul>
      <li>1 ≤ section의 원소 ≤ n</li>
      <li>section의 원소는 페인트를 다시 칠해야 하는 구역의 번호입니다.</li>
      <li>section에서 같은 원소가 두 번 이상 나타나지 않습니다.</li>
      <li>section의 원소는 오름차순으로 정렬되어 있습니다.</li>
    </ul>
  </li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예
</p>

<p><img src="/assets/img/codingtest/161989.png" width="330" height="140" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>예제 1번은 2, 3, 6번 영역에 페인트를 다시 칠해야 합니다. 롤러의 길이가 4미터이므로 한 번의 페인트칠에 연속된 4개의 구역을 칠할 수 있습니다. 처음에 3, 4, 5, 6번 영역에 페인트칠을 하면 칠해야 할 곳으로 2번 구역만 남고 1, 2, 3, 4번 구역에 페인트칠을 하면 2번 만에 다시 칠해야 할 곳에 모두 페인트칠을 할 수 있습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/161989_1.png" width="450" height="140" /></p>

<p>2번보다 적은 횟수로 2, 3, 6번 영역에 페인트를 덧칠하는 방법은 없습니다. 따라서 최소 횟수인 2를 return 합니다.</p>

<p>입출력 예 #2</p>
<ul>
  <li>예제 2번은 1, 3번 영역에 페인트를 다시 칠해야 합니다. 롤러의 길이가 4미터이므로 한 번의 페인트칠에 연속된 4개의 구역을 칠할 수 있고 1, 2, 3, 4번 영역에 페인트칠을 하면 한 번에 1, 3번 영역을 모두 칠할 수 있습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/161989_2.png" width="320" height="120" /></p>

<p>따라서 최소 횟수인 1을 return 합니다.</p>

<p>입출력 예 #3</p>
<ul>
  <li>예제 3번은 모든 구역에 페인트칠을 해야 합니다. 롤러의 길이가 1미터이므로 한 번에 한 구역밖에 칠할 수 없습니다. 구역이 4개이므로 각 구역을 한 번씩만 칠하는 4번이 최소 횟수가 됩니다.</li>
</ul>

<p><img src="/assets/img/codingtest/161989_3.png" width="320" height="210" /></p>

<p>따라서 4를 return 합니다.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<pre><code class="language-C++">#include &lt;iostream&gt;
#include &lt;vector&gt;

using namespace std;

int Paint(int n, int m, vector&lt;int&gt; Wall)
{
    int num = 0;
    
    for(int i=0; i&lt;n; i++)
    {
        if(Wall[i] == 0)
        {
            for(int l=0; l&lt;m; l++)
            {
                if((i+l) &lt; n)
                    Wall[i+l] = 1;                
            }
            
            num++;
        }       
    }
    
    return num;
}

int solution(int n, int m, vector&lt;int&gt; section) {
    int answer = 0;
    
    vector&lt;int&gt; Wall(n, 1);
    
    for(int i=0; i&lt;section.size(); i++)
    {
        Wall[section[i] - 1] = 0;
    }
    
    answer = Paint(n, m, Wall);
    
    return answer;
}
</code></pre>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 22분  
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 161989]]></summary></entry><entry><title type="html">과일 장수</title><link href="/codingtest/programmers/lv.1/2025-06-02-codingtest_59/" rel="alternate" type="text/html" title="과일 장수" /><published>2025-06-02T00:20:00+00:00</published><updated>2025-06-03T08:22:17+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_59</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-02-codingtest_59/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>과일 장수가 사과 상자를 포장하고 있습니다. 사과는 상태에 따라 1점부터 k점까지의 점수로 분류하며, k점이 최상품의 사과이고 1점이 최하품의 사과입니다. 사과 한 상자의 가격은 다음과 같이 결정됩니다.</p>

<ul>
  <li>한 상자에 사과를 m개씩 담아 포장합니다.</li>
  <li>상자에 담긴 사과 중 가장 낮은 점수가 p (1 ≤ p ≤ k)점인 경우, 사과 한 상자의 가격은 p * m 입니다.</li>
</ul>

<p>과일 장수가 가능한 많은 사과를 팔았을 때, 얻을 수 있는 최대 이익을 계산하고자 합니다.(사과는 상자 단위로만 판매하며, 남는 사과는 버립니다)</p>

<p>예를 들어, k = 3, m = 4, 사과 7개의 점수가 [1, 2, 3, 1, 2, 3, 1]이라면, 다음과 같이 [2, 3, 2, 3]으로 구성된 사과 상자 1개를 만들어 판매하여 최대 이익을 얻을 수 있습니다.</p>

<ul>
  <li>(최저 사과 점수) x (한 상자에 담긴 사과 개수) x (상자의 개수) = 2 x 4 x 1 = 8</li>
</ul>

<p>사과의 최대 점수 k, 한 상자에 들어가는 사과의 수 m, 사과들의 점수 score가 주어졌을 때, 과일 장수가 얻을 수 있는 최대 이익을 return하는 solution 함수를 완성해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한 사항
</p>

<ul>
  <li>3 ≤ k ≤ 9</li>
  <li>3 ≤ m ≤ 10</li>
  <li>7 ≤ score의 길이 ≤ 1,000,000
    <ul>
      <li>1 ≤ score[i] ≤ k</li>
    </ul>
  </li>
  <li>이익이 발생하지 않는 경우에는 0을 return 해주세요.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예
</p>

<p><img src="/assets/img/codingtest/135808_1.png" width="490" height="115" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>문제의 예시와 같습니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>다음과 같이 사과 상자를 포장하여 모두 팔면 최대 이익을 낼 수 있습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/135808_2.png" width="210" height="170" /></p>

<p>따라서 (1 x 3 x 1) + (2 x 3 x 1) + (4 x 3 x 2) = 33을 return합니다.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<pre><code class="language-C++">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;algorithm&gt;

using namespace std;

int solution(int k, int m, vector&lt;int&gt; score) {
    int answer = 0;
    
    sort(score.begin(), score.end());
    
    int s = score.size() / m;
    vector&lt;vector&lt;int&gt;&gt; Num(s, vector&lt;int&gt;(m)); 
    
    for(int i=0; i&lt;s; i++)
    {
         for(int l=0; l&lt;m; l++)
         {
             int temp = score[score.size() - 1];
             score.pop_back();
             
             Num[i][m-l-1] = temp;
         }
    }
    
    for(int i=0; i&lt;Num.size(); i++)
    {
        answer += Num[i][0] * m;
    }
    
    return answer;
}
</code></pre>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 21분  
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 135808]]></summary></entry><entry><title type="html">모의고사</title><link href="/codingtest/programmers/lv.1/2025-06-02-codingtest_58/" rel="alternate" type="text/html" title="모의고사" /><published>2025-06-02T00:10:00+00:00</published><updated>2025-06-03T08:22:17+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_58</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-02-codingtest_58/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다.</p>

<p>1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, …
2번 수포자가 찍는 방식: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3, 2, 4, 2, 5, …
3번 수포자가 찍는 방식: 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, …</p>

<p>1번 문제부터 마지막 문제까지의 정답이 순서대로 들은 배열 answers가 주어졌을 때, 가장 많은 문제를 맞힌 사람이 누구인지 배열에 담아 return 하도록 solution 함수를 작성해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한 사항
</p>

<ul>
  <li>시험은 최대 10,000 문제로 구성되어있습니다.</li>
  <li>문제의 정답은 1, 2, 3, 4, 5중 하나입니다.</li>
  <li>가장 높은 점수를 받은 사람이 여럿일 경우, return하는 값을 오름차순 정렬해주세요.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예
</p>

<p><img src="/assets/img/codingtest/42840.png" width="200" height="120" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>수포자 1은 모든 문제를 맞혔습니다.</li>
  <li>수포자 2는 모든 문제를 틀렸습니다.</li>
  <li>수포자 3은 모든 문제를 틀렸습니다.</li>
</ul>

<p>따라서 가장 문제를 많이 맞힌 사람은 수포자 1입니다.</p>

<p>입출력 예 #2</p>
<ul>
  <li>모든 사람이 2문제씩을 맞췄습니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<pre><code class="language-C++">#include &lt;iostream&gt;
#include &lt;vector&gt;

using namespace std;

vector&lt;int&gt; solution(vector&lt;int&gt; answers) {
    vector&lt;int&gt; answer;
    
   vector&lt;vector&lt;int&gt;&gt; Student{{1,2,3,4,5}, {2,1,2,3,2,4,2,5}, {3,3,1,1,2,2,4,4,5,5}};
    
    int score = 0;
    
    for(int i=0; i&lt;3; i++)
    {
        int n = 0;
        for(int l = 0; l&lt;answers.size(); l++)
        {
            if(answers[l] == Student[i][l % Student[i].size()])
                n++;
        }
        
        if(score &lt; n)
        {
            answer.clear();
            answer.push_back(i + 1);
            
            score = n;
        }
        else if(score == n)
        {
            answer.push_back(i + 1);
        }
    }
    
    return answer;
}
</code></pre>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 9분  
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 42840]]></summary></entry><entry><title type="html">2016년</title><link href="/codingtest/programmers/lv.1/2025-06-02-codingtest_57/" rel="alternate" type="text/html" title="2016년" /><published>2025-06-02T00:00:00+00:00</published><updated>2025-06-03T08:22:17+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_57</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-02-codingtest_57/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>2016년 1월 1일은 금요일입니다. 2016년 a월 b일은 무슨 요일일까요? 두 수 a ,b를 입력받아 2016년 a월 b일이 무슨 요일인지 리턴하는 함수, solution을 완성하세요. 요일의 이름은 일요일부터 토요일까지 각각 SUN,MON,TUE,WED,THU,FRI,SAT</p>

<p>입니다. 예를 들어 a=5, b=24라면 5월 24일은 화요일이므로 문자열 “TUE”를 반환하세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한 사항
</p>

<ul>
  <li>2016년은 윤년입니다.</li>
  <li>2016년 a월 b일은 실제로 있는 날입니다. (13월 26일이나 2월 45일같은 날짜는 주어지지 않습니다)</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예
</p>

<p><img src="/assets/img/codingtest/12901.png" width="220" height="83" /></p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<pre><code class="language-C++">#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;vector&gt;

using namespace std;

int CheckDay(int a)
{   
    if(a == 1 || a == 3 || a == 5 || a == 7 || a == 8 || a == 10 || a == 12)
        return 31;
    else if(a == 2)
        return 29;
    else if(a == 4 || a == 6 || a == 9 || a == 11)
        return 30;
    else
        return -1;
}

string solution(int a, int b) {
    string answer = "";
    vector&lt;string&gt; Day = {"FRI", "SAT", "SUN", "MON", "TUE", "WED", "THU"};
    
    int num = 0;
    
    if(a &gt;= 1 &amp;&amp; a &lt;= 12)
    {
        for(int i=1; i&lt;a; i++)
        {
            num += CheckDay(i);
        }   
        
        if(CheckDay(a) &gt;= b &amp;&amp; b &gt;= 1)
        {
            num += b;
        }
        
        answer = Day[(num - 1) % 7];
    }
        
    
    return answer;
}
</code></pre>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 15분 30초 
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 12901]]></summary></entry><entry><title type="html">폰켓몬</title><link href="/codingtest/programmers/lv.1/2025-05-30-codingtest_56/" rel="alternate" type="text/html" title="폰켓몬" /><published>2025-05-30T01:10:00+00:00</published><updated>2025-06-03T08:22:17+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_56</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-05-30-codingtest_56/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>당신은 폰켓몬을 잡기 위한 오랜 여행 끝에, 홍 박사님의 연구실에 도착했습니다. 홍 박사님은 당신에게 자신의 연구실에 있는 총 N 마리의 폰켓몬 중에서 N/2마리를 가져가도 좋다고 했습니다.
홍 박사님 연구실의 폰켓몬은 종류에 따라 번호를 붙여 구분합니다. 따라서 같은 종류의 폰켓몬은 같은 번호를 가지고 있습니다. 예를 들어 연구실에 총 4마리의 폰켓몬이 있고, 각 폰켓몬의 종류 번호가 [3번, 1번, 2번, 3번]이라면 이는 3번 폰켓몬 두 마리, 1번 폰켓몬 한 마리, 2번 폰켓몬 한 마리가 있음을 나타냅니다. 이때, 4마리의 폰켓몬 중 2마리를 고르는 방법은 다음과 같이 6가지가 있습니다.</p>

<ol>
  <li>첫 번째(3번), 두 번째(1번) 폰켓몬을 선택</li>
  <li>첫 번째(3번), 세 번째(2번) 폰켓몬을 선택</li>
  <li>첫 번째(3번), 네 번째(3번) 폰켓몬을 선택</li>
  <li>두 번째(1번), 세 번째(2번) 폰켓몬을 선택</li>
  <li>두 번째(1번), 네 번째(3번) 폰켓몬을 선택</li>
  <li>세 번째(2번), 네 번째(3번) 폰켓몬을 선택</li>
</ol>

<p>이때, 첫 번째(3번) 폰켓몬과 네 번째(3번) 폰켓몬을 선택하는 방법은 한 종류(3번 폰켓몬 두 마리)의 폰켓몬만 가질 수 있지만, 다른 방법들은 모두 두 종류의 폰켓몬을 가질 수 있습니다. 따라서 위 예시에서 가질 수 있는 폰켓몬 종류 수의 최댓값은 2가 됩니다.
당신은 최대한 다양한 종류의 폰켓몬을 가지길 원하기 때문에, 최대한 많은 종류의 폰켓몬을 포함해서 N/2마리를 선택하려 합니다. N마리 폰켓몬의 종류 번호가 담긴 배열 nums가 매개변수로 주어질 때, N/2마리의 폰켓몬을 선택하는 방법 중, 가장 많은 종류의 폰켓몬을 선택하는 방법을 찾아, 그때의 폰켓몬 종류 번호의 개수를 return 하도록 solution 함수를 완성해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한 사항
</p>

<ul>
  <li>nums는 폰켓몬의 종류 번호가 담긴 1차원 배열입니다.</li>
  <li>nums의 길이(N)는 1 이상 10,000 이하의 자연수이며, 항상 짝수로 주어집니다.</li>
  <li>폰켓몬의 종류 번호는 1 이상 200,000 이하의 자연수로 나타냅니다.</li>
  <li>가장 많은 종류의 폰켓몬을 선택하는 방법이 여러 가지인 경우에도, 선택할 수 있는 폰켓몬 종류 개수의 최댓값 하나만 return 하면 됩니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예
</p>

<p><img src="/assets/img/codingtest/1845.png" width="200" height="140" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>문제의 예시와 같습니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>6마리의 폰켓몬이 있으므로, 3마리의 폰켓몬을 골라야 합니다.
가장 많은 종류의 폰켓몬을 고르기 위해서는 3번 폰켓몬 한 마리, 2번 폰켓몬 한 마리, 4번 폰켓몬 한 마리를 고르면 되며, 따라서 3을 return 합니다.</li>
</ul>

<p>입출력 예 #3</p>
<ul>
  <li>6마리의 폰켓몬이 있으므로, 3마리의 폰켓몬을 골라야 합니다.
가장 많은 종류의 폰켓몬을 고르기 위해서는 3번 폰켓몬 한 마리와 2번 폰켓몬 두 마리를 고르거나, 혹은 3번 폰켓몬 두 마리와 2번 폰켓몬 한 마리를 고르면 됩니다. 따라서 최대 고를 수 있는 폰켓몬 종류의 수는 2입니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<pre><code class="language-C++">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;algorithm&gt;

using namespace std;

int solution(vector&lt;int&gt; nums)
{
    int answer = 0;

    int num = nums.size() / 2;
    sort(nums.begin(), nums.end());
    
    nums.erase(unique(nums.begin(), nums.end()), nums.end());
    
    if(nums.size() &gt; num)
        answer = num;
    else
        answer = nums.size();
    
    return answer;
}
</code></pre>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 X 
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 28분 30초 
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
문제 소감
</p>

<ul>
  <li>배열에서 중복을 제거하기 위해서는 정렬을 하고 삭제해야 한다.</li>
  <li>중복 삭제는 배열.erase(unique(배열.begin(), 배열.end()), 배열.end()); 이다.</li>
</ul>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 1845]]></summary></entry><entry><title type="html">기사단원의 무기</title><link href="/codingtest/programmers/lv.1/2025-05-30-codingtest_55/" rel="alternate" type="text/html" title="기사단원의 무기" /><published>2025-05-30T01:00:00+00:00</published><updated>2025-06-03T08:22:17+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_55</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-05-30-codingtest_55/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>숫자나라 기사단의 각 기사에게는 1번부터 number까지 번호가 지정되어 있습니다. 기사들은 무기점에서 무기를 구매하려고 합니다.</p>

<p>각 기사는 자신의 기사 번호의 약수 개수에 해당하는 공격력을 가진 무기를 구매하려 합니다. 단, 이웃나라와의 협약에 의해 공격력의 제한수치를 정하고, 제한수치보다 큰 공격력을 가진 무기를 구매해야 하는 기사는 협약기관에서 정한 공격력을 가지는 무기를 구매해야 합니다.</p>

<p>예를 들어, 15번으로 지정된 기사단원은 15의 약수가 1, 3, 5, 15로 4개 이므로, 공격력이 4인 무기를 구매합니다. 만약, 이웃나라와의 협약으로 정해진 공격력의 제한수치가 3이고 제한수치를 초과한 기사가 사용할 무기의 공격력이 2라면, 15번으로 지정된 기사단원은 무기점에서 공격력이 2인 무기를 구매합니다. 무기를 만들 때, 무기의 공격력 1당 1kg의 철이 필요합니다. 그래서 무기점에서 무기를 모두 만들기 위해 필요한 철의 무게를 미리 계산하려 합니다.</p>

<p>기사단원의 수를 나타내는 정수 number와 이웃나라와 협약으로 정해진 공격력의 제한수치를 나타내는 정수 limit와 제한수치를 초과한 기사가 사용할 무기의 공격력을 나타내는 정수 power가 주어졌을 때, 무기점의 주인이 무기를 모두 만들기 위해 필요한 철의 무게를 return 하는 solution 함수를 완성하시오.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한 사항
</p>

<ul>
  <li>1 ≤ number ≤ 100,000</li>
  <li>2 ≤ limit ≤ 100</li>
  <li>1 ≤ power ≤ limit</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예
</p>

<p><img src="/assets/img/codingtest/136798.png" width="310" height="115" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>1부터 5까지의 약수의 개수는 순서대로 [1, 2, 2, 3, 2]개입니다. 모두 공격력 제한 수치인 3을 넘지 않기 때문에 필요한 철의 무게는 해당 수들의 합인 10이 됩니다. 따라서 10을 return 합니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>1부터 10까지의 약수의 개수는 순서대로 [1, 2, 2, 3, 2, 4, 2, 4, 3, 4]개입니다. 공격력의 제한수치가 3이기 때문에, 6, 8, 10번 기사는 공격력이 2인 무기를 구매합니다. 따라서 해당 수들의 합인 21을 return 합니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<pre><code class="language-C++">#include &lt;iostream&gt;
#include &lt;vector&gt;

using namespace std;

int Calculate(int number)
{
    int n = 0;
    
    for(int i=1; i&lt;=number/2; i++)
    {
        if(number % i == 0)
            n++;
    }
    
    n++;
    
    return n;
}

int solution(int number, int limit, int power) {
    
    int answer = 0;
    
    for(int i=1; i&lt;=number; i++)
    {
        int temp = Calculate(i);
        
        if(temp &gt; limit)
            answer += power;
        else
            answer += temp;
    }
    
    return answer;
}
</code></pre>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 14분 30초 
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 136798]]></summary></entry></feed>