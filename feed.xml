<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ko"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" hreflang="ko" /><updated>2025-06-25T01:29:44+00:00</updated><id>/feed.xml</id><title type="html">Roseanne</title><subtitle>Hydejack is a boutique Jekyll theme for hackers, nerds, and academics, with a focus on personal sites that are meant to impress.
</subtitle><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><entry><title type="html">[PCCP 기출문제] 1번 / 동영상 재생기</title><link href="/codingtest/programmers/lv.1/2025-06-25-codingtest_89/" rel="alternate" type="text/html" title="[PCCP 기출문제] 1번 / 동영상 재생기" /><published>2025-06-25T00:00:00+00:00</published><updated>2025-06-25T01:29:01+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_89</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-25-codingtest_89/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>당신은 동영상 재생기를 만들고 있습니다. 당신의 동영상 재생기는 10초 전으로 이동, 10초 후로 이동, 오프닝 건너뛰기 3가지 기능을 지원합니다. 각 기능이 수행하는 작업은 다음과 같습니다.</p>

<ul>
  <li>10초 전으로 이동: 사용자가 “prev” 명령을 입력할 경우 동영상의 재생 위치를 현재 위치에서 10초 전으로 이동합니다. 현재 위치가 10초 미만인 경우 영상의 처음 위치로 이동합니다. 영상의 처음 위치는 0분 0초입니다.</li>
  <li>10초 후로 이동: 사용자가 “next” 명령을 입력할 경우 동영상의 재생 위치를 현재 위치에서 10초 후로 이동합니다. 동영상의 남은 시간이 10초 미만일 경우 영상의 마지막 위치로 이동합니다. 영상의 마지막 위치는 동영상의 길이와 같습니다.</li>
  <li>오프닝 건너뛰기: 현재 재생 위치가 오프닝 구간(op_start ≤ 현재 재생 위치 ≤ op_end)인 경우 자동으로 오프닝이 끝나는 위치로 이동합니다.</li>
</ul>

<p>동영상의 길이를 나타내는 문자열 video_len, 기능이 수행되기 직전의 재생위치를 나타내는 문자열 pos, 오프닝 시작 시각을 나타내는 문자열 op_start, 오프닝이 끝나는 시각을 나타내는 문자열 op_end, 사용자의 입력을 나타내는 1차원 문자열 배열 commands가 매개변수로 주어집니다. 이때 사용자의 입력이 모두 끝난 후 동영상의 위치를 “mm:ss” 형식으로 return 하도록 solution 함수를 완성해 주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>video_len의 길이 = pos의 길이 = op_start의 길이 = op_end의 길이 = 5
    <ul>
      <li>video_len, pos, op_start, op_end는 “mm:ss” 형식으로 mm분 ss초를 나타냅니다.</li>
      <li>0 ≤ mm ≤ 59</li>
      <li>0 ≤ ss ≤ 59</li>
      <li>분, 초가 한 자리일 경우 0을 붙여 두 자리로 나타냅니다.</li>
      <li>비디오의 현재 위치 혹은 오프닝이 끝나는 시각이 동영상의 범위 밖인 경우는 주어지지 않습니다.</li>
      <li>오프닝이 시작하는 시각은 항상 오프닝이 끝나는 시각보다 전입니다.</li>
    </ul>
  </li>
  <li>1 ≤ commands의 길이 ≤ 100
    <ul>
      <li>commands의 원소는 “prev” 혹은 “next”입니다.</li>
      <li>“prev”는 10초 전으로 이동하는 명령입니다.</li>
      <li>“next”는 10초 후로 이동하는 명령입니다.</li>
    </ul>
  </li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/340213.png" width="600" height="140" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>시작 위치 13분 0초에서 10초 후로 이동하면 13분 10초입니다.</li>
  <li>13분 10초에서 10초 전으로 이동하면 13분 0초입니다.</li>
  <li>따라서 “13:00”을 return 하면 됩니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>시작 위치 0분 5초에서 10초 전으로 이동합니다. 현재 위치가 10초 미만이기 때문에 0분 0초로 이동합니다.</li>
  <li>0분 0초에서 10초 후로 이동하면 0분 10초입니다.</li>
  <li>0분 10초에서 10초 후로 이동하면 0분 20초입니다. 0분 20초는 오프닝 구간이기 때문에 오프닝이 끝나는 위치인 6분 55초로 이동합니다. 따라서 “06:55”를 return 하면 됩니다.</li>
</ul>

<p>입출력 예 #3</p>
<ul>
  <li>
    <h2 id="시작-위치-4분-5초는-오프닝-구간이기-때문에-오프닝이-끝나는-위치인-4분-7초로-이동합니다-4분-7초에서-10초-후로-이동하면-4분-17초입니다-따라서-0417을-return-하면-됩니다">시작 위치 4분 5초는 오프닝 구간이기 때문에 오프닝이 끝나는 위치인 4분 7초로 이동합니다. 4분 7초에서 10초 후로 이동하면 4분 17초입니다. 따라서 “04:17”을 return 하면 됩니다.</h2>
  </li>
</ul>

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">void</span> <span class="nf">checkopening</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&amp;</span> <span class="n">ipos</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">iop_start</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">iop_end</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">pos</span> <span class="o">=</span> <span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="mi">60</span> <span class="o">+</span> <span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
    <span class="kt">int</span> <span class="n">start</span> <span class="o">=</span> <span class="n">iop_start</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="mi">60</span> <span class="o">+</span> <span class="n">iop_start</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
    <span class="kt">int</span> <span class="n">end</span> <span class="o">=</span> <span class="n">iop_end</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="mi">60</span> <span class="o">+</span> <span class="n">iop_end</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
    
    <span class="k">if</span><span class="p">(</span><span class="n">pos</span> <span class="o">&gt;=</span> <span class="n">start</span> <span class="o">&amp;&amp;</span> <span class="n">pos</span> <span class="o">&lt;</span> <span class="n">end</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">iop_end</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
        <span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">iop_end</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="n">string</span> <span class="nf">solution</span><span class="p">(</span><span class="n">string</span> <span class="n">video_len</span><span class="p">,</span> <span class="n">string</span> <span class="n">pos</span><span class="p">,</span> <span class="n">string</span> <span class="n">op_start</span><span class="p">,</span> <span class="n">string</span> <span class="n">op_end</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">commands</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">string</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">ivideo_len</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">ipos</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">iop_start</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">iop_end</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    
    <span class="n">ivideo_len</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">stoi</span><span class="p">(</span><span class="n">video_len</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">video_len</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="sc">':'</span><span class="p">)));</span>
    <span class="n">ivideo_len</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">stoi</span><span class="p">(</span><span class="n">video_len</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="n">video_len</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="sc">':'</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">));</span>
    
    <span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">stoi</span><span class="p">(</span><span class="n">pos</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">pos</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="sc">':'</span><span class="p">)));</span>
    <span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">stoi</span><span class="p">(</span><span class="n">pos</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="n">pos</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="sc">':'</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">));</span>
    
    <span class="n">iop_start</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">stoi</span><span class="p">(</span><span class="n">op_start</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">op_start</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="sc">':'</span><span class="p">)));</span>
    <span class="n">iop_start</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">stoi</span><span class="p">(</span><span class="n">op_start</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="n">op_start</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="sc">':'</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">));</span>
    
    <span class="n">iop_end</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">stoi</span><span class="p">(</span><span class="n">op_end</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">op_end</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="sc">':'</span><span class="p">)));</span>
    <span class="n">iop_end</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">stoi</span><span class="p">(</span><span class="n">op_end</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="n">op_end</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="sc">':'</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">));</span>
    
    <span class="n">checkopening</span><span class="p">(</span><span class="n">ipos</span><span class="p">,</span> <span class="n">iop_start</span><span class="p">,</span> <span class="n">iop_end</span><span class="p">);</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">commands</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">commands</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="s">"next"</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">10</span><span class="p">;</span>
            
            <span class="k">if</span><span class="p">(</span><span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">60</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>
                <span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">-=</span> <span class="mi">60</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="n">ivideo_len</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="n">ivideo_len</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
            <span class="p">{</span>
                <span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">ivideo_len</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
                <span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">ivideo_len</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">commands</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="s">"prev"</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">-=</span> <span class="mi">10</span><span class="p">;</span>
            <span class="k">if</span><span class="p">(</span><span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-=</span> <span class="mi">1</span><span class="p">;</span>
                <span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">60</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
                <span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    
        <span class="n">checkopening</span><span class="p">(</span><span class="n">ipos</span><span class="p">,</span> <span class="n">iop_start</span><span class="p">,</span> <span class="n">iop_end</span><span class="p">);</span>
    <span class="p">}</span>
    
    <span class="k">if</span><span class="p">(</span><span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="mi">9</span><span class="p">)</span>
        <span class="n">answer</span> <span class="o">+=</span> <span class="sc">'0'</span><span class="p">;</span>
    <span class="n">answer</span> <span class="o">+=</span> <span class="n">to_string</span><span class="p">(</span><span class="n">ipos</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
    <span class="n">answer</span> <span class="o">+=</span> <span class="sc">':'</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="mi">9</span><span class="p">)</span>
        <span class="n">answer</span> <span class="o">+=</span> <span class="sc">'0'</span><span class="p">;</span>
    <span class="n">answer</span> <span class="o">+=</span> <span class="n">to_string</span><span class="p">(</span><span class="n">ipos</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 51분
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 340213]]></summary></entry><entry><title type="html">신고 결과 받기</title><link href="/codingtest/programmers/lv.1/2025-06-24-codingtest_88/" rel="alternate" type="text/html" title="신고 결과 받기" /><published>2025-06-24T00:00:00+00:00</published><updated>2025-06-25T01:29:01+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_88</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-24-codingtest_88/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>신입사원 무지는 게시판 불량 이용자를 신고하고 처리 결과를 메일로 발송하는 시스템을 개발하려 합니다. 무지가 개발하려는 시스템은 다음과 같습니다.</p>

<ul>
  <li>각 유저는 한 번에 한 명의 유저를 신고할 수 있습니다.
    <ul>
      <li>신고 횟수에 제한은 없습니다. 서로 다른 유저를 계속해서 신고할 수 있습니다.</li>
      <li>한 유저를 여러 번 신고할 수도 있지만, 동일한 유저에 대한 신고 횟수는 1회로 처리됩니다.</li>
    </ul>
  </li>
  <li>k번 이상 신고된 유저는 게시판 이용이 정지되며, 해당 유저를 신고한 모든 유저에게 정지 사실을 메일로 발송합니다.
    <ul>
      <li>유저가 신고한 모든 내용을 취합하여 마지막에 한꺼번에 게시판 이용 정지를 시키면서 정지 메일을 발송합니다.</li>
    </ul>
  </li>
</ul>

<p>다음은 전체 유저 목록이 [“muzi”, “frodo”, “apeach”, “neo”]이고, k = 2(즉, 2번 이상 신고당하면 이용 정지)인 경우의 예시입니다.</p>

<p><img src="/assets/img/codingtest/92334_1.png" width="540" height="220" /></p>

<p>각 유저별로 신고당한 횟수는 다음과 같습니다.</p>

<p><img src="/assets/img/codingtest/92334_2.png" width="220" height="180" /></p>

<p>위 예시에서는 2번 이상 신고당한 “frodo”와 “neo”의 게시판 이용이 정지됩니다. 이때, 각 유저별로 신고한 아이디와 정지된 아이디를 정리하면 다음과 같습니다.</p>

<p><img src="/assets/img/codingtest/92334_3.png" width="380" height="180" /></p>

<p>따라서 “muzi”는 처리 결과 메일을 2회, “frodo”와 “apeach”는 각각 처리 결과 메일을 1회 받게 됩니다.</p>

<p>이용자의 ID가 담긴 문자열 배열 id_list, 각 이용자가 신고한 이용자의 ID 정보가 담긴 문자열 배열 report, 정지 기준이 되는 신고 횟수 k가 매개변수로 주어질 때, 각 유저별로 처리 결과 메일을 받은 횟수를 배열에 담아 return 하도록 solution 함수를 완성해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>2 ≤ id_list의 길이 ≤ 1,000
    <ul>
      <li>1 ≤ id_list의 원소 길이 ≤ 10</li>
      <li>id_list의 원소는 이용자의 id를 나타내는 문자열이며 알파벳 소문자로만 이루어져 있습니다.</li>
      <li>id_list에는 같은 아이디가 중복해서 들어있지 않습니다.</li>
    </ul>
  </li>
  <li>1 ≤ report의 길이 ≤ 200,000
    <ul>
      <li>3 ≤ report의 원소 길이 ≤ 21</li>
      <li>report의 원소는 “이용자id 신고한id”형태의 문자열입니다.</li>
      <li>예를 들어 “muzi frodo”의 경우 “muzi”가 “frodo”를 신고했다는 의미입니다.</li>
      <li>id는 알파벳 소문자로만 이루어져 있습니다.</li>
      <li>이용자id와 신고한id는 공백(스페이스)하나로 구분되어 있습니다.</li>
      <li>자기 자신을 신고하는 경우는 없습니다.</li>
    </ul>
  </li>
  <li>1 ≤ k ≤ 200, k는 자연수입니다.</li>
  <li>return 하는 배열은 id_list에 담긴 id 순서대로 각 유저가 받은 결과 메일 수를 담으면 됩니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/92334_4.png" width="800" height="160" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>문제의 예시와 같습니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>“ryan”이 “con”을 4번 신고했으나, 주어진 조건에 따라 한 유저가 같은 유저를 여러 번 신고한 경우는 신고 횟수 1회로 처리합니다. 따라서 “con”은 1회 신고당했습니다. 3번 이상 신고당한 이용자는 없으며, “con”과 “ryan”은 결과 메일을 받지 않습니다. 따라서 [0, 0]을 return 합니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">id_list</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">report</span><span class="p">,</span> <span class="kt">int</span> <span class="n">k</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">(</span><span class="n">id_list</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="mi">0</span><span class="p">);</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">relist</span><span class="p">(</span><span class="n">id_list</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="mi">0</span><span class="p">);</span>
    
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;&gt;</span> <span class="n">list</span><span class="p">(</span><span class="n">report</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="s">""</span><span class="p">));</span>
    
    <span class="n">sort</span><span class="p">(</span><span class="n">report</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">report</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
    <span class="n">report</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">unique</span><span class="p">(</span><span class="n">report</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">report</span><span class="p">.</span><span class="n">end</span><span class="p">()),</span> <span class="n">report</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">report</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">list</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">report</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">report</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">find</span><span class="p">(</span><span class="sc">' '</span><span class="p">));</span>
        <span class="n">list</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">report</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">substr</span><span class="p">(</span><span class="n">report</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">find</span><span class="p">(</span><span class="sc">' '</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
        
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">id_list</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">list</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">id_list</span><span class="p">[</span><span class="n">l</span><span class="p">])</span>
                <span class="n">relist</span><span class="p">[</span><span class="n">l</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
        
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">relist</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">relist</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="n">k</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">list</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">list</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">id_list</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
                <span class="p">{</span>
                    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">id_list</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
                    <span class="p">{</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">list</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="n">id_list</span><span class="p">[</span><span class="n">j</span><span class="p">])</span>
                            <span class="n">answer</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 38분 30초
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 92334]]></summary></entry><entry><title type="html">[PCCP 기출문제] 1번 / 붕대 감기</title><link href="/codingtest/programmers/lv.1/2025-06-20-codingtest_87/" rel="alternate" type="text/html" title="[PCCP 기출문제] 1번 / 붕대 감기" /><published>2025-06-20T00:00:00+00:00</published><updated>2025-06-25T01:29:01+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_87</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-20-codingtest_87/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>어떤 게임에는 붕대 감기라는 기술이 있습니다.</p>

<p>붕대 감기는 t초 동안 붕대를 감으면서 1초마다 x만큼의 체력을 회복합니다. t초 연속으로 붕대를 감는 데 성공한다면 y만큼의 체력을 추가로 회복합니다. 게임 캐릭터에는 최대 체력이 존재해 현재 체력이 최대 체력보다 커지는 것은 불가능합니다.</p>

<p>기술을 쓰는 도중 몬스터에게 공격을 당하면 기술이 취소되고, 공격을 당하는 순간에는 체력을 회복할 수 없습니다. 몬스터에게 공격당해 기술이 취소당하거나 기술이 끝나면 그 즉시 붕대 감기를 다시 사용하며, 연속 성공 시간이 0으로 초기화됩니다.</p>

<p>몬스터의 공격을 받으면 정해진 피해량만큼 현재 체력이 줄어듭니다. 이때, 현재 체력이 0 이하가 되면 캐릭터가 죽으며 더 이상 체력을 회복할 수 없습니다.</p>

<p>당신은 붕대감기 기술의 정보, 캐릭터가 가진 최대 체력과 몬스터의 공격 패턴이 주어질 때 캐릭터가 끝까지 생존할 수 있는지 궁금합니다.</p>

<p>붕대 감기 기술의 시전 시간, 1초당 회복량, 추가 회복량을 담은 1차원 정수 배열 bandage와 최대 체력을 의미하는 정수 health, 몬스터의 공격 시간과 피해량을 담은 2차원 정수 배열 attacks가 매개변수로 주어집니다. 모든 공격이 끝난 직후 남은 체력을 return 하도록 solution 함수를 완성해 주세요. 만약 몬스터의 공격을 받고 캐릭터의 체력이 0 이하가 되어 죽는다면 -1을 return 해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>bandage는 [시전 시간, 초당 회복량, 추가 회복량] 형태의 길이가 3인 정수 배열입니다.
    <ul>
      <li>1 ≤ 시전 시간 = t ≤ 50</li>
      <li>1 ≤ 초당 회복량 = x ≤ 100</li>
      <li>1 ≤ 추가 회복량 = y ≤ 100</li>
    </ul>
  </li>
  <li>1 ≤ health ≤ 1,000</li>
  <li>1 ≤ attacks의 길이 ≤ 100
    <ul>
      <li>attacks[i]는 [공격 시간, 피해량] 형태의 길이가 2인 정수 배열입니다.</li>
      <li>attacks는 공격 시간을 기준으로 오름차순 정렬된 상태입니다.</li>
      <li>attacks의 공격 시간은 모두 다릅니다.</li>
      <li>1 ≤ 공격 시간 ≤ 1,000</li>
      <li>1 ≤ 피해량 ≤ 100</li>
    </ul>
  </li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/250137_1.png" width="480" height="170" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>몬스터의 마지막 공격은 11초에 이루어집니다. 0초부터 11초까지 캐릭터의 상태는 아래 표와 같습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/250137_2.png" width="750" height="460" /></p>

<ul>
  <li>몬스터의 마지막 공격 직후 캐릭터의 체력은 5입니다. 따라서 5을 return 해야 합니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>몬스터의 마지막 공격은 8초에 이루어집니다. 0초부터 8초까지 캐릭터의 상태는 아래 표와 같습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/250137_3.png" width="750" height="360" /></p>

<ul>
  <li>몬스터의 공격을 받아 캐릭터의 체력이 0 이하가 됩니다. 따라서 -1을 return 해야 합니다.</li>
</ul>

<p>입출력 예 #3</p>
<ul>
  <li>몬스터의 마지막 공격은 8초에 이루어집니다. 0초부터 5초까지 캐릭터의 상태는 아래 표와 같습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/250137_4.png" width="750" height="240" /></p>

<ul>
  <li>몬스터의 공격을 받아 캐릭터의 체력이 0 이하가 됩니다. 따라서 -1을 return 해야 합니다.</li>
</ul>

<p>입출력 예 #4</p>
<ul>
  <li>몬스터의 마지막 공격은 3초에 이루어집니다. 0초부터 3초까지 캐릭터의 상태는 아래 표와 같습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/250137_4.png" width="750" height="240" /></p>

<ul>
  <li>몬스터의 마지막 공격 직후 캐릭터의 체력은 3입니다. 따라서 3을 return 해야 합니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">bandage</span><span class="p">,</span> <span class="kt">int</span> <span class="n">health</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">attacks</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">health</span><span class="p">;</span>
    
    <span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">attacks</span><span class="p">[</span><span class="n">attacks</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">];</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">attacks</span><span class="p">[</span><span class="n">n</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span>
        <span class="p">{</span>
            <span class="n">answer</span> <span class="o">-=</span> <span class="n">attacks</span><span class="p">[</span><span class="n">n</span><span class="p">][</span><span class="mi">1</span><span class="p">];</span>
            <span class="n">n</span><span class="o">++</span><span class="p">;</span>
            <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">count</span> <span class="o">!=</span> <span class="n">bandage</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
        <span class="p">{</span>
            <span class="n">count</span><span class="o">++</span><span class="p">;</span>
            <span class="n">answer</span> <span class="o">+=</span> <span class="n">bandage</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
        <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span><span class="n">count</span> <span class="o">==</span> <span class="n">bandage</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
        <span class="p">{</span>
            <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
            <span class="n">answer</span> <span class="o">+=</span> <span class="n">bandage</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span>
        <span class="p">}</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">answer</span> <span class="o">&gt;</span> <span class="n">health</span><span class="p">)</span>
            <span class="n">answer</span> <span class="o">=</span> <span class="n">health</span><span class="p">;</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">answer</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">answer</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 23분
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 250137]]></summary></entry><entry><title type="html">[PCCE 기출문제] 10번 / 공원</title><link href="/codingtest/programmers/lv.1/2025-06-19-codingtest_86/" rel="alternate" type="text/html" title="[PCCE 기출문제] 10번 / 공원" /><published>2025-06-19T00:00:00+00:00</published><updated>2025-06-25T01:29:01+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_86</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-19-codingtest_86/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>지민이는 다양한 크기의 정사각형 모양 돗자리를 가지고 공원에 소풍을 나왔습니다. 공원에는 이미 돗자리를 깔고 여가를 즐기는 사람들이 많아 지민이가 깔 수 있는 가장 큰 돗자리가 어떤 건지 확인하려 합니다. 예를 들어 지민이가 가지고 있는 돗자리의 한 변 길이가 5, 3, 2 세 종류이고, 사람들이 다음과 같이 앉아 있다면 지민이가 깔 수 있는 가장 큰 돗자리는 3x3 크기입니다.</p>

<p><img src="/assets/img/codingtest/340198_1.png" width="600" height="450" /></p>

<p>지민이가 가진 돗자리들의 한 변의 길이들이 담긴 정수 리스트 mats, 현재 공원의 자리 배치도를 의미하는 2차원 문자열 리스트 park가 주어질 때 지민이가 깔 수 있는 가장 큰 돗자리의 한 변 길이를 return 하도록 solution 함수를 완성해 주세요. 아무런 돗자리도 깔 수 없는 경우 -1을 return합니다.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>1 ≤ mats의 길이 ≤ 10
    <ul>
      <li>1 ≤ mats의 원소 ≤ 20</li>
      <li>mats는 중복된 원소를 가지지 않습니다.</li>
    </ul>
  </li>
  <li>1 ≤ park의 길이 ≤ 50
    <ul>
      <li>1 ≤ park[i]의 길이 ≤ 50</li>
      <li>park[i][j]의 원소는 문자열입니다.</li>
      <li>park[i][j]에 돗자리를 깐 사람이 없다면 “-1”, 사람이 있다면 알파벳 한 글자로 된 값을 갖습니다.</li>
    </ul>
  </li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/340198_2.png" width="750" height="120" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>지문과 동일합니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">bool</span> <span class="nf">CanUse</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;&gt;&amp;</span> <span class="n">park</span><span class="p">,</span> <span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">,</span> <span class="kt">int</span> <span class="n">n</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">bool</span> <span class="n">check</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
    
    <span class="k">if</span><span class="p">(</span><span class="n">park</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&lt;</span> <span class="n">a</span><span class="o">+</span><span class="n">n</span> <span class="o">||</span> <span class="n">park</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">size</span><span class="p">()</span> <span class="o">&lt;</span> <span class="n">b</span><span class="o">+</span><span class="n">n</span><span class="p">)</span>
        <span class="n">check</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
    <span class="k">else</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">a</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">a</span><span class="o">+</span><span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="n">b</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">b</span><span class="o">+</span><span class="n">n</span><span class="p">;</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">park</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="p">]</span> <span class="o">!=</span> <span class="s">"-1"</span><span class="p">)</span>
                    <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">check</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">mats</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;&gt;</span> <span class="n">park</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
    
    <span class="n">sort</span><span class="p">(</span><span class="n">mats</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">mats</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="n">greater</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">());</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">mat</span> <span class="o">:</span> <span class="n">mats</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">park</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">park</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">CanUse</span><span class="p">(</span><span class="n">park</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">l</span><span class="p">,</span> <span class="n">mat</span><span class="p">))</span>
                    <span class="n">answer</span> <span class="o">=</span> <span class="n">max</span><span class="p">(</span><span class="n">answer</span><span class="p">,</span> <span class="n">mat</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 38분
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 340198]]></summary></entry><entry><title type="html">공원 산책</title><link href="/codingtest/programmers/lv.1/2025-06-18-codingtest_85/" rel="alternate" type="text/html" title="공원 산책" /><published>2025-06-18T00:00:00+00:00</published><updated>2025-06-25T01:29:01+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_85</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-18-codingtest_85/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>지나다니는 길을 ‘O’, 장애물을 ‘X’로 나타낸 직사각형 격자 모양의 공원에서 로봇 강아지가 산책을 하려합니다. 산책은 로봇 강아지에 미리 입력된 명령에 따라 진행하며, 명령은 다음과 같은 형식으로 주어집니다.</p>

<ul>
  <li>[“방향 거리”, “방향 거리” … ]</li>
</ul>

<p>예를 들어 “E 5”는 로봇 강아지가 현재 위치에서 동쪽으로 5칸 이동했다는 의미입니다. 로봇 강아지는 명령을 수행하기 전에 다음 두 가지를 먼저 확인합니다.</p>

<ul>
  <li>주어진 방향으로 이동할 때 공원을 벗어나는지 확인합니다.</li>
  <li>주어진 방향으로 이동 중 장애물을 만나는지 확인합니다.</li>
</ul>

<p>위 두 가지중 어느 하나라도 해당된다면, 로봇 강아지는 해당 명령을 무시하고 다음 명령을 수행합니다.
공원의 가로 길이가 W, 세로 길이가 H라고 할 때, 공원의 좌측 상단의 좌표는 (0, 0), 우측 하단의 좌표는 (H - 1, W - 1) 입니다.</p>

<p><img src="/assets/img/codingtest/172928_1.png" width="800" height="650" /></p>

<p>공원을 나타내는 문자열 배열 park, 로봇 강아지가 수행할 명령이 담긴 문자열 배열 routes가 매개변수로 주어질 때, 로봇 강아지가 모든 명령을 수행 후 놓인 위치를 [세로 방향 좌표, 가로 방향 좌표] 순으로 배열에 담아 return 하도록 solution 함수를 완성해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>3 ≤ park의 길이 ≤ 50
    <ul>
      <li>3 ≤ park[i]의 길이 ≤ 50
        <ul>
          <li>park[i]는 다음 문자들로 이루어져 있으며 시작지점은 하나만 주어집니다.
            <ul>
              <li>S : 시작 지점</li>
              <li>O : 이동 가능한 통로</li>
              <li>X : 장애물</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>park는 직사각형 모양입니다.</li>
    </ul>
  </li>
  <li>1 ≤ routes의 길이 ≤ 50
    <ul>
      <li>routes의 각 원소는 로봇 강아지가 수행할 명령어를 나타냅니다.</li>
      <li>로봇 강아지는 routes의 첫 번째 원소부터 순서대로 명령을 수행합니다.</li>
      <li>routes의 원소는 “op n”과 같은 구조로 이루어져 있으며, op는 이동할 방향, n은 이동할 칸의 수를 의미합니다.
        <ul>
          <li>op는 다음 네 가지중 하나로 이루어져 있습니다.
            <ul>
              <li>N : 북쪽으로 주어진 칸만큼 이동합니다.</li>
              <li>S : 남쪽으로 주어진 칸만큼 이동합니다.</li>
              <li>W : 서쪽으로 주어진 칸만큼 이동합니다.</li>
            </ul>
          </li>
          <li>E : 동쪽으로 주어진 칸만큼 이동합니다.
1 ≤ n ≤ 9</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/172928_2.png" width="480" height="150" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>입력된 명령대로 동쪽으로 2칸, 남쪽으로 2칸, 서쪽으로 1칸 이동하면 [0,0] -&gt; [0,2] -&gt; [2,2] -&gt; [2,1]이 됩니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>입력된 명령대로라면 동쪽으로 2칸, 남쪽으로 2칸, 서쪽으로 1칸 이동해야하지만 남쪽으로 2칸 이동할 때 장애물이 있는 칸을 지나기 때문에 해당 명령을 제외한 명령들만 따릅니다. 결과적으로는 [0,0] -&gt; [0,2] -&gt; [0,1]이 됩니다.</li>
</ul>

<p>입출력 예 #3</p>
<ul>
  <li>처음 입력된 명령은 공원을 나가게 되고 두 번째로 입력된 명령 또한 장애물을 지나가게 되므로 두 입력은 제외한 세 번째 명령만 따르므로 결과는 다음과 같습니다. [0,1] -&gt; [0,0]</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">park</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">routes</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">;</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">park</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">park</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">park</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'S'</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
                <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">l</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">routes</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">stoi</span><span class="p">(</span><span class="n">routes</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">));</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">routes</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'N'</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="mi">0</span> <span class="o">&lt;=</span> <span class="n">answer</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">temp</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;=</span><span class="n">temp</span><span class="p">;</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">park</span><span class="p">[</span><span class="n">answer</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="n">l</span><span class="p">][</span><span class="n">answer</span><span class="p">[</span><span class="mi">1</span><span class="p">]]</span> <span class="o">==</span> <span class="sc">'X'</span><span class="p">)</span>
                        <span class="k">break</span><span class="p">;</span>
                    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">l</span> <span class="o">==</span> <span class="n">temp</span><span class="p">)</span>
                        <span class="n">answer</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-=</span> <span class="n">temp</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
       
        <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">routes</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'S'</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">park</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&gt;</span> <span class="n">answer</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">temp</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;=</span><span class="n">temp</span><span class="p">;</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">park</span><span class="p">[</span><span class="n">answer</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="n">l</span><span class="p">][</span><span class="n">answer</span><span class="p">[</span><span class="mi">1</span><span class="p">]]</span> <span class="o">==</span> <span class="sc">'X'</span><span class="p">)</span>
                        <span class="k">break</span><span class="p">;</span>
                    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">l</span> <span class="o">==</span> <span class="n">temp</span><span class="p">)</span>
                        <span class="n">answer</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+=</span> <span class="n">temp</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        
        <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">routes</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'E'</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">park</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">size</span><span class="p">()</span> <span class="o">&gt;</span> <span class="n">answer</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">temp</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;=</span><span class="n">temp</span><span class="p">;</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">park</span><span class="p">[</span><span class="n">answer</span><span class="p">[</span><span class="mi">0</span><span class="p">]][</span><span class="n">answer</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="n">l</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'X'</span><span class="p">)</span>
                        <span class="k">break</span><span class="p">;</span>
                    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">l</span> <span class="o">==</span> <span class="n">temp</span><span class="p">)</span>
                        <span class="n">answer</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">+=</span> <span class="n">temp</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        
        <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">routes</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'W'</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="mi">0</span> <span class="o">&lt;=</span> <span class="n">answer</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="n">temp</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;=</span><span class="n">temp</span><span class="p">;</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">park</span><span class="p">[</span><span class="n">answer</span><span class="p">[</span><span class="mi">0</span><span class="p">]][</span><span class="n">answer</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="n">l</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'X'</span><span class="p">)</span>
                        <span class="k">break</span><span class="p">;</span>
                    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">l</span> <span class="o">==</span> <span class="n">temp</span><span class="p">)</span>
                        <span class="n">answer</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">-=</span> <span class="n">temp</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 41분 30초
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 172928]]></summary></entry><entry><title type="html">달리기 경주</title><link href="/codingtest/programmers/lv.1/2025-06-17-codingtest_84/" rel="alternate" type="text/html" title="달리기 경주" /><published>2025-06-17T00:00:00+00:00</published><updated>2025-06-25T01:29:01+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_84</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-17-codingtest_84/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>얀에서는 매년 달리기 경주가 열립니다. 해설진들은 선수들이 자기 바로 앞의 선수를 추월할 때 추월한 선수의 이름을 부릅니다. 예를 들어 1등부터 3등까지 “mumu”, “soe”, “poe” 선수들이 순서대로 달리고 있을 때, 해설진이 “soe”선수를 불렀다면 2등인 “soe” 선수가 1등인 “mumu” 선수를 추월했다는 것입니다. 즉 “soe” 선수가 1등, “mumu” 선수가 2등으로 바뀝니다.</p>

<p>선수들의 이름이 1등부터 현재 등수 순서대로 담긴 문자열 배열 players와 해설진이 부른 이름을 담은 문자열 배열 callings가 매개변수로 주어질 때, 경주가 끝났을 때 선수들의 이름을 1등부터 등수 순서대로 배열에 담아 return 하는 solution 함수를 완성해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>5 ≤ players의 길이 ≤ 50,000
    <ul>
      <li>players[i]는 i번째 선수의 이름을 의미합니다.</li>
      <li>players의 원소들은 알파벳 소문자로만 이루어져 있습니다.</li>
      <li>players에는 중복된 값이 들어가 있지 않습니다.</li>
      <li>3 ≤ players[i]의 길이 ≤ 10</li>
    </ul>
  </li>
  <li>2 ≤ callings의 길이 ≤ 1,000,000
    <ul>
      <li>callings는 players의 원소들로만 이루어져 있습니다.</li>
      <li>경주 진행중 1등인 선수의 이름은 불리지 않습니다.</li>
    </ul>
  </li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/178871.png" width="800" height="70" /></p>

<p>입출력 예 #1</p>

<ul>
  <li>4등인 “kai” 선수가 2번 추월하여 2등이 되고 앞서 3등, 2등인 “poe”, “soe” 선수는 4등, 3등이 됩니다. 5등인 “mine” 선수가 2번 추월하여 4등, 3등인 “poe”, “soe” 선수가 5등, 4등이 되고 경주가 끝납니다. 1등부터 배열에 담으면 [“mumu”, “kai”, “mine”, “soe”, “poe”]이 됩니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;unordered_map&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">players</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">callings</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">;</span>
    
    <span class="n">unordered_map</span><span class="o">&lt;</span><span class="n">string</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="n">Player</span><span class="p">;</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">players</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="n">Player</span><span class="p">[</span><span class="n">players</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
    
    <span class="k">for</span><span class="p">(</span><span class="k">const</span> <span class="n">string</span><span class="o">&amp;</span> <span class="n">call</span> <span class="o">:</span> <span class="n">callings</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="n">Player</span><span class="p">[</span><span class="n">call</span><span class="p">];</span>
        <span class="k">if</span><span class="p">(</span><span class="n">index</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">string</span> <span class="n">front</span> <span class="o">=</span> <span class="n">players</span><span class="p">[</span><span class="n">index</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span>
            <span class="n">swap</span><span class="p">(</span><span class="n">players</span><span class="p">[</span><span class="n">index</span><span class="p">],</span> <span class="n">players</span><span class="p">[</span><span class="n">index</span><span class="o">-</span><span class="mi">1</span><span class="p">]);</span>
            
            <span class="n">Player</span><span class="p">[</span><span class="n">call</span><span class="p">]</span> <span class="o">=</span> <span class="n">index</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
            <span class="n">Player</span><span class="p">[</span><span class="n">front</span><span class="p">]</span> <span class="o">=</span> <span class="n">index</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="n">answer</span> <span class="o">=</span> <span class="n">players</span><span class="p">;</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 X
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 36분 30초
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
문제 소감
</p>

<ul>
  <li>시간 복잡도를 줄이기 위해 데이터를 하나씩 검사하는 것이 아닌 해시 테이블을 이용하여 탐색이 쉽도록 하는 것이 좋다.</li>
  <li>해시 테이블을 사용하면 다중 for 문을 이용할 필요가 없고 바로 원하는 파일을 찾을 수 있다.</li>
</ul>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 178871]]></summary></entry><entry><title type="html">개인정보 수집 유효기간</title><link href="/codingtest/programmers/lv.1/2025-06-16-codingtest_83/" rel="alternate" type="text/html" title="개인정보 수집 유효기간" /><published>2025-06-16T00:00:00+00:00</published><updated>2025-06-25T01:29:01+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_83</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-16-codingtest_83/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>고객의 약관 동의를 얻어서 수집된 1~n번으로 분류되는 개인정보 n개가 있습니다. 약관 종류는 여러 가지 있으며 각 약관마다 개인정보 보관 유효기간이 정해져 있습니다. 당신은 각 개인정보가 어떤 약관으로 수집됐는지 알고 있습니다. 수집된 개인정보는 유효기간 전까지만 보관 가능하며, 유효기간이 지났다면 반드시 파기해야 합니다.</p>

<p>예를 들어, A라는 약관의 유효기간이 12 달이고, 2021년 1월 5일에 수집된 개인정보가 A약관으로 수집되었다면 해당 개인정보는 2022년 1월 4일까지 보관 가능하며 2022년 1월 5일부터 파기해야 할 개인정보입니다.
당신은 오늘 날짜로 파기해야 할 개인정보 번호들을 구하려 합니다.</p>

<p>모든 달은 28일까지 있다고 가정합니다.</p>

<p>다음은 오늘 날짜가 2022.05.19일 때의 예시입니다.</p>

<p><img src="/assets/img/codingtest/150370_1.png" width="200" height="160" /></p>

<p><br /></p>

<p><img src="/assets/img/codingtest/150370_2.png" width="350" height="190" /></p>

<ul>
  <li>첫 번째 개인정보는 A약관에 의해 2021년 11월 1일까지 보관 가능하며, 유효기간이 지났으므로 파기해야 할 개인정보입니다.</li>
  <li>두 번째 개인정보는 B약관에 의해 2022년 6월 28일까지 보관 가능하며, 유효기간이 지나지 않았으므로 아직 보관 가능합니다.</li>
  <li>세 번째 개인정보는 C약관에 의해 2022년 5월 18일까지 보관 가능하며, 유효기간이 지났으므로 파기해야 할 개인정보입니다.</li>
  <li>네 번째 개인정보는 C약관에 의해 2022년 5월 19일까지 보관 가능하며, 유효기간이 지나지 않았으므로 아직 보관 가능합니다.</li>
</ul>

<p>따라서 파기해야 할 개인정보 번호는 [1, 3]입니다.</p>

<p>오늘 날짜를 의미하는 문자열 today, 약관의 유효기간을 담은 1차원 문자열 배열 terms와 수집된 개인정보의 정보를 담은 1차원 문자열 배열 privacies가 매개변수로 주어집니다. 이때 파기해야 할 개인정보의 번호를 오름차순으로 1차원 정수 배열에 담아 return 하도록 solution 함수를 완성해 주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>today는 “YYYY.MM.DD” 형태로 오늘 날짜를 나타냅니다.</li>
  <li>1 ≤ terms의 길이 ≤ 20
    <ul>
      <li>terms의 원소는 “약관 종류 유효기간” 형태의 약관 종류와 유효기간을 공백 하나로 구분한 문자열입니다.</li>
      <li>약관 종류는 A~Z중 알파벳 대문자 하나이며, terms 배열에서 약관 종류는 중복되지 않습니다.</li>
      <li>유효기간은 개인정보를 보관할 수 있는 달 수를 나타내는 정수이며, 1 이상 100 이하입니다.</li>
    </ul>
  </li>
  <li>1 ≤ privacies의 길이 ≤ 100
    <ul>
      <li>privacies[i]는 i+1번 개인정보의 수집 일자와 약관 종류를 나타냅니다.</li>
      <li>privacies의 원소는 “날짜 약관 종류” 형태의 날짜와 약관 종류를 공백 하나로 구분한 문자열입니다.</li>
      <li>날짜는 “YYYY.MM.DD” 형태의 개인정보가 수집된 날짜를 나타내며, today 이전의 날짜만 주어집니다.</li>
      <li>privacies의 약관 종류는 항상 terms에 나타난 약관 종류만 주어집니다.</li>
    </ul>
  </li>
  <li>today와 privacies에 등장하는 날짜의 YYYY는 연도, MM은 월, DD는 일을 나타내며 점(.) 하나로 구분되어 있습니다.
    <ul>
      <li>2000 ≤ YYYY ≤ 2022</li>
      <li>1 ≤ MM ≤ 12</li>
      <li>MM이 한 자릿수인 경우 앞에 0이 붙습니다.</li>
      <li>1 ≤ DD ≤ 28</li>
      <li>DD가 한 자릿수인 경우 앞에 0이 붙습니다.</li>
    </ul>
  </li>
  <li>파기해야 할 개인정보가 하나 이상 존재하는 입력만 주어집니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/150370_3.png" width="900" height="160" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>문제 예시와 같습니다.</li>
</ul>

<p>입출력 예 #2</p>

<p><img src="/assets/img/codingtest/150370_4.png" width="200" height="120" /></p>

<p><br /></p>

<p><img src="/assets/img/codingtest/150370_5.png" width="350" height="230" /></p>

<ul>
  <li>오늘 날짜는 2020년 1월 1일입니다.
    <ul>
      <li>첫 번째 개인정보는 D약관에 의해 2019년 5월 28일까지 보관 가능하며, 유효기간이 지났으므로 파기해야 할 개인정보입니다.</li>
      <li>두 번째 개인정보는 Z약관에 의해 2020년 2월 14일까지 보관 가능하며, 유효기간이 지나지 않았으므로 아직 보관 가능합니다.</li>
      <li>세 번째 개인정보는 D약관에 의해 2020년 1월 1일까지 보관 가능하며, 유효기간이 지나지 않았으므로 아직 보관 가능합니다.</li>
      <li>네 번째 개인정보는 D약관에 의해 2019년 11월 28일까지 보관 가능하며, 유효기간이 지났으므로 파기해야 할 개인정보입니다.</li>
      <li>다섯 번째 개인정보는 Z약관에 의해 2019년 3월 27일까지 보관 가능하며, 유효기간이 지났으므로 파기해야 할 개인정보입니다.</li>
    </ul>
  </li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">string</span> <span class="n">today</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">terms</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">privacies</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">;</span>
    
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;&gt;</span> <span class="n">List</span><span class="p">(</span><span class="n">terms</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="s">""</span><span class="p">));</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">Dates</span><span class="p">(</span><span class="n">privacies</span><span class="p">.</span><span class="n">size</span><span class="p">());</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">Today</span><span class="p">;</span>
    
    <span class="n">string</span> <span class="n">temp</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">today</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">today</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'.'</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Today</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">stoi</span><span class="p">(</span><span class="n">temp</span><span class="p">));</span>
            <span class="n">temp</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span>
            <span class="n">temp</span> <span class="o">+=</span> <span class="n">today</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">today</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
            <span class="n">Today</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">stoi</span><span class="p">(</span><span class="n">temp</span><span class="p">));</span>
    <span class="p">}</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">terms</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">List</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">terms</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">];</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">terms</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">size</span><span class="p">()</span> <span class="o">==</span> <span class="mi">3</span><span class="p">)</span>
            <span class="n">List</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">terms</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">2</span><span class="p">];</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">terms</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
                <span class="n">List</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">+=</span> <span class="n">terms</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="p">];</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">privacies</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">string</span> <span class="n">temp</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">privacies</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">privacies</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'.'</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">push_back</span><span class="p">(</span><span class="n">stoi</span><span class="p">(</span><span class="n">temp</span><span class="p">));</span>
                <span class="n">temp</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">privacies</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="p">]</span> <span class="o">==</span> <span class="sc">' '</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">push_back</span><span class="p">(</span><span class="n">stoi</span><span class="p">(</span><span class="n">temp</span><span class="p">));</span>
                <span class="n">temp</span> <span class="o">=</span> <span class="n">privacies</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="n">temp</span> <span class="o">+=</span> <span class="n">privacies</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="p">];</span>
            <span class="p">}</span>
        <span class="p">}</span>
        
        
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">List</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">temp</span> <span class="o">==</span> <span class="n">List</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span>
               <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">+=</span> <span class="n">stoi</span><span class="p">(</span><span class="n">List</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="mi">1</span><span class="p">]);</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">Dates</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">12</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">+=</span> <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">/</span> <span class="mi">12</span><span class="p">;</span>
            <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">%</span> <span class="mi">12</span><span class="p">;</span>
            
            <span class="k">if</span><span class="p">(</span><span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">-=</span> <span class="mi">1</span><span class="p">;</span>
                <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">12</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span> <span class="o">-=</span> <span class="mi">1</span><span class="p">;</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">-=</span> <span class="mi">1</span><span class="p">;</span>
            <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="mi">28</span><span class="p">;</span>
            <span class="k">if</span><span class="p">(</span><span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">-=</span> <span class="mi">1</span><span class="p">;</span>
                <span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">12</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">Dates</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">Today</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
            <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">Today</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
            <span class="k">continue</span><span class="p">;</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">Today</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
                <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">Today</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
                <span class="k">continue</span><span class="p">;</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">Dates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">Today</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
                    <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 1시간 12분 
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 150370]]></summary></entry><entry><title type="html">유연근무제</title><link href="/codingtest/programmers/lv.1/2025-06-12-codingtest_82/" rel="alternate" type="text/html" title="유연근무제" /><published>2025-06-12T00:10:00+00:00</published><updated>2025-06-25T01:29:01+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_82</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-12-codingtest_82/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>프로그래머스 사이트를 운영하는 그렙에서는 재택근무와 함께 출근 희망 시각을 자유롭게 정하는 유연근무제를 시행하고 있습니다. 제도 정착을 위해 오늘부터 일주일 동안 각자 설정한 출근 희망 시각에 늦지 않고 출근한 직원들에게 상품을 주는 이벤트를 진행하려고 합니다.</p>

<p>직원들은 일주일동안 자신이 설정한 출근 희망 시각 + 10분까지 어플로 출근해야 합니다. 예를 들어 출근 희망 시각이 9시 58분인 직원은 10시 8분까지 출근해야 합니다. 단, 토요일, 일요일의 출근 시각은 이벤트에 영향을 끼치지 않습니다. 직원들은 매일 한 번씩만 어플로 출근하고, 모든 시각은 시에 100을 곱하고 분을 더한 정수로 표현됩니다. 예를 들어 10시 13분은 1013이 되고 9시 58분은 958이 됩니다.</p>

<p>당신은 직원들이 설정한 출근 희망 시각과 실제로 출근한 기록을 바탕으로 상품을 받을 직원이 몇 명인지 알고 싶습니다.</p>

<p>직원 n명이 설정한 출근 희망 시각을 담은 1차원 정수 배열 schedules, 직원들이 일주일 동안 출근한 시각을 담은 2차원 정수 배열 timelogs, 이벤트를 시작한 요일을 의미하는 정수 startday가 매개변수로 주어집니다. 이때 상품을 받을 직원의 수를 return 하도록 solution 함수를 완성해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>1 ≤ schedules의 길이 = n ≤ 1,000
    <ul>
      <li>schedules[i]는 i + 1번째 직원이 설정한 출근 희망 시각을 의미합니다.</li>
      <li>700 ≤ schedules[i] ≤ 1100</li>
    </ul>
  </li>
  <li>1 ≤ timelogs의 길이 = n ≤ 1,000
    <ul>
      <li>timelogs[i]의 길이 = 7</li>
      <li>timelogs[i][j]는 i + 1번째 직원이 이벤트 j + 1일차에 출근한 시각을 의미합니다.</li>
      <li>600 ≤ timelogs[i][j] ≤ 2359</li>
    </ul>
  </li>
  <li>1 ≤ startday ≤ 7
    <ul>
      <li>1은 월요일, 2는 화요일, 3은 수요일, 4는 목요일, 5는 금요일, 6은 토요일, 7은 일요일에 이벤트를 시작했음을 의미합니다.</li>
    </ul>
  </li>
  <li>출근 희망 시각과 실제로 출근한 시각을 100으로 나눈 나머지는 59 이하입니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
테스트 케이스 구성 안내
</p>

<p>아래는 테스트 케이스 구성을 나타냅니다. 각 그룹 내의 테스트 케이스를 모두 통과하면 해당 그룹에 할당된 점수를 획득할 수 있습니다.</p>

<p><img src="/assets/img/codingtest/388351_1.png" width="700" height="210" /></p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/388351_2.png" width="750" height="180" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>이벤트를 시작한 날은 금요일입니다. 직원 3명의 일주일 간 출근 시각을 나타내면 다음과 같습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/388351_3.png" width="250" height="145" /></p>

<p><br /></p>

<p><img src="/assets/img/codingtest/388351_4.png" width="470" height="140" /></p>

<ul>
  <li>모든 직원이 평일에 늦지 않고 출근했습니다. 따라서 상품을 받을 직원은 3명입니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>이벤트를 시작한 날은 월요일입니다. 직원 4명의 일주일 간 출근 시각을 나타내면 다음과 같습니다. 취소선으로 표시된 시각이 출근이 필요한 평일에 지각한 날입니다.</li>
</ul>

<p><img src="/assets/img/codingtest/388351_5.png" width="250" height="170" /></p>

<p><br /></p>

<p><img src="/assets/img/codingtest/388351_6.png" width="470" height="170" /></p>

<ul>
  <li>첫 번째, 세 번째 직원이 평일에 늦지 않고 출근했습니다. 따라서 상품을 받을 직원은 2명입니다</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">schedules</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">timelogs</span><span class="p">,</span> <span class="kt">int</span> <span class="n">startday</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">schedules</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">temp</span><span class="p">;</span>
                
        <span class="k">if</span><span class="p">((</span><span class="n">schedules</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="mi">10</span><span class="p">)</span> <span class="o">%</span> <span class="mi">100</span> <span class="o">&gt;=</span> <span class="mi">60</span><span class="p">)</span>
            <span class="n">temp</span> <span class="o">=</span> <span class="p">(</span><span class="n">schedules</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">/</span><span class="mi">100</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="mi">100</span> <span class="o">+</span> <span class="p">(</span><span class="n">schedules</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="mi">10</span><span class="p">)</span> <span class="o">%</span> <span class="mi">100</span> <span class="o">-</span> <span class="mi">60</span><span class="p">;</span>
        <span class="k">else</span>
            <span class="n">temp</span> <span class="o">=</span> <span class="n">schedules</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="mi">10</span><span class="p">;</span>
        
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">timelogs</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">((</span><span class="n">startday</span><span class="o">+</span><span class="n">l</span><span class="p">)</span> <span class="o">%</span> <span class="mi">7</span> <span class="o">!=</span> <span class="mi">6</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">startday</span><span class="o">+</span><span class="n">l</span><span class="p">)</span> <span class="o">%</span> <span class="mi">7</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">temp</span> <span class="o">&gt;=</span> <span class="n">timelogs</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="p">])</span>
                    <span class="n">count</span><span class="o">++</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
      
        <span class="k">if</span><span class="p">(</span><span class="n">count</span> <span class="o">==</span> <span class="mi">5</span><span class="p">)</span>
            <span class="n">answer</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 39분 
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 388351]]></summary></entry><entry><title type="html">바탕화면 정리</title><link href="/codingtest/programmers/lv.1/2025-06-12-codingtest_81/" rel="alternate" type="text/html" title="바탕화면 정리" /><published>2025-06-12T00:00:00+00:00</published><updated>2025-06-25T01:29:01+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_81</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-12-codingtest_81/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>코딩테스트를 준비하는 머쓱이는 프로그래머스에서 문제를 풀고 나중에 다시 코드를 보면서 공부하려고 작성한 코드를 컴퓨터 바탕화면에 아무 위치에나 저장해 둡니다. 저장한 코드가 많아지면서 머쓱이는 본인의 컴퓨터 바탕화면이 너무 지저분하다고 생각했습니다. 프로그래머스에서 작성했던 코드는 그 문제에 가서 다시 볼 수 있기 때문에 저장해 둔 파일들을 전부 삭제하기로 했습니다.</p>

<p>컴퓨터 바탕화면은 각 칸이 정사각형인 격자판입니다. 이때 컴퓨터 바탕화면의 상태를 나타낸 문자열 배열 wallpaper가 주어집니다. 파일들은 바탕화면의 격자칸에 위치하고 바탕화면의 격자점들은 바탕화면의 가장 왼쪽 위를 (0, 0)으로 시작해 (세로 좌표, 가로 좌표)로 표현합니다. 빈칸은 “.”, 파일이 있는 칸은 “#”의 값을 가집니다. 드래그를 하면 파일들을 선택할 수 있고, 선택된 파일들을 삭제할 수 있습니다. 머쓱이는 최소한의 이동거리를 갖는 한 번의 드래그로 모든 파일을 선택해서 한 번에 지우려고 하며 드래그로 파일들을 선택하는 방법은 다음과 같습니다.</p>

<ul>
  <li>
    <p>드래그는 바탕화면의 격자점 S(lux, luy)를 마우스 왼쪽 버튼으로 클릭한 상태로 격자점 E(rdx, rdy)로 이동한 뒤 마우스 왼쪽 버튼을 떼는 행동입니다. 이때, “점 S에서 점 E로 드래그한다”고 표현하고 점 S와 점 E를 각각 드래그의 시작점, 끝점이라고 표현합니다.</p>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>점 S(lux, luy)에서 점 E(rdx, rdy)로 드래그를 할 때, “드래그 한 거리”는</td>
          <td>rdx - lux</td>
          <td>+</td>
          <td>rdy - luy</td>
          <td>로 정의합니다.</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>점 S에서 점 E로 드래그를 하면 바탕화면에서 두 격자점을 각각 왼쪽 위, 오른쪽 아래로 하는 직사각형 내부에 있는 모든 파일이 선택됩니다.</li>
</ul>

<p>예를 들어 wallpaper = [”.#…”, “..#..”, “…#.”]인 바탕화면을 그림으로 나타내면 다음과 같습니다.</p>

<p><img src="/assets/img/codingtest/161990_1.png" width="300" height="200" /></p>

<p>이러한 바탕화면에서 다음 그림과 같이 S(0, 1)에서 E(3, 4)로 드래그하면 세 개의 파일이 모두 선택되므로 드래그 한 거리 (3 - 0) + (4 - 1) = 6을 최솟값으로 모든 파일을 선택 가능합니다.</p>

<p><img src="/assets/img/codingtest/161990_2.png" width="300" height="200" /></p>

<p>(0, 0)에서 (3, 5)로 드래그해도 모든 파일을 선택할 수 있지만 이때 드래그 한 거리는 (3 - 0) + (5 - 0) = 8이고 이전의 방법보다 거리가 늘어납니다.</p>

<p>머쓱이의 컴퓨터 바탕화면의 상태를 나타내는 문자열 배열 wallpaper가 매개변수로 주어질 때 바탕화면의 파일들을 한 번에 삭제하기 위해 최소한의 이동거리를 갖는 드래그의 시작점과 끝점을 담은 정수 배열을 return하는 solution 함수를 작성해 주세요. 드래그의 시작점이 (lux, luy), 끝점이 (rdx, rdy)라면 정수 배열 [lux, luy, rdx, rdy]를 return하면 됩니다.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>1 ≤ wallpaper의 길이 ≤ 50</li>
  <li>1 ≤ wallpaper[i]의 길이 ≤ 50
    <ul>
      <li>wallpaper의 모든 원소의 길이는 동일합니다.</li>
    </ul>
  </li>
  <li>wallpaper[i][j]는 바탕화면에서 i + 1행 j + 1열에 해당하는 칸의 상태를 나타냅니다.</li>
  <li>wallpaper[i][j]는 “#” 또는 “.”의 값만 가집니다.</li>
  <li>바탕화면에는 적어도 하나의 파일이 있습니다.</li>
  <li>드래그 시작점 (lux, luy)와 끝점 (rdx, rdy)는 lux &lt; rdx, luy &lt; rdy를 만족해야 합니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/161990_3.png" width="600" height="180" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>문제 설명의 예시와 같은 예제입니다. (0, 1)에서 (3, 4)로 드래그 하면 모든 파일을 선택할 수 있고 드래그 한 거리는 6이었고, 6보다 적은 거리로 모든 파일을 선택하는 방법은 없습니다. 따라서 [0, 1, 3, 4]를 return합니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>예제 2번의 바탕화면은 다음과 같습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/161990_4.png" width="600" height="340" /></p>

<ul>
  <li>(1, 3)에서 (5, 8)로 드래그하면 모든 파일을 선택할 수 있고 이보다 적은 이동거리로 모든 파일을 선택하는 방법은 없습니다. 따라서 가장 적은 이동의 드래그로 모든 파일을 선택하는 방법인 [1, 3, 5, 8]을 return합니다.</li>
</ul>

<p>입출력 예 #3</p>
<ul>
  <li>예제 3번의 바탕화면은 다음과 같습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/161990_5.png" width="540" height="440" /></p>

<ul>
  <li>모든 파일을 선택하기 위해선 바탕화면의 가장 왼쪽 위 (0, 0)에서 가장 오른쪽 아래 (7, 9)로 드래그 해야만 합니다. 따라서 [0, 0, 7, 9]를 return합니다.</li>
</ul>

<p>입출력 예 #4</p>
<ul>
  <li>예제 4번의 바탕화면은 다음과 같이 2행 1열에만 아이콘이 있습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/161990_6.png" width="140" height="140" /></p>

<ul>
  <li>이를 드래그로 선택하기 위해서는 그 칸의 왼쪽 위 (1, 0)에서 오른쪽 아래 (2, 1)로 드래그 하면 됩니다. (1, 0)에서 (2, 2)로 드래그 해도 아이콘을 선택할 수 있지만 이전보다 이동거리가 늘어납니다. 따라서 [1, 0, 2, 1]을 return합니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">wallpaper</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">;</span>
    
    <span class="kt">int</span> <span class="n">lux</span> <span class="o">=</span> <span class="mi">50</span><span class="p">,</span> <span class="n">luy</span> <span class="o">=</span> <span class="mi">50</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">rdx</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">rdy</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">wallpaper</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">wallpaper</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">length</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">wallpaper</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'#'</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">lux</span> <span class="o">&gt;</span> <span class="n">i</span><span class="p">)</span>
                    <span class="n">lux</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
                <span class="k">if</span><span class="p">(</span><span class="n">luy</span> <span class="o">&gt;</span> <span class="n">l</span><span class="p">)</span>
                    <span class="n">luy</span> <span class="o">=</span> <span class="n">l</span><span class="p">;</span>
                <span class="k">if</span><span class="p">(</span><span class="n">rdx</span> <span class="o">&lt;</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
                    <span class="n">rdx</span> <span class="o">=</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
                <span class="k">if</span><span class="p">(</span><span class="n">rdy</span> <span class="o">&lt;</span> <span class="n">l</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
                    <span class="n">rdy</span> <span class="o">=</span> <span class="n">l</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">lux</span><span class="p">);</span>
    <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">luy</span><span class="p">);</span>
    <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">rdx</span><span class="p">);</span>
    <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">rdy</span><span class="p">);</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 13분 
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 161990]]></summary></entry><entry><title type="html">신규 아이디 추천</title><link href="/codingtest/programmers/lv.1/2025-06-11-codingtest_80/" rel="alternate" type="text/html" title="신규 아이디 추천" /><published>2025-06-11T00:10:00+00:00</published><updated>2025-06-25T01:29:01+00:00</updated><id>/codingtest/programmers/lv.1/codingtest_80</id><content type="html" xml:base="/codingtest/programmers/lv.1/2025-06-11-codingtest_80/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>카카오에 입사한 신입 개발자 네오는 “카카오계정개발팀”에 배치되어, 카카오 서비스에 가입하는 유저들의 아이디를 생성하는 업무를 담당하게 되었습니다. “네오”에게 주어진 첫 업무는 새로 가입하는 유저들이 카카오 아이디 규칙에 맞지 않는 아이디를 입력했을 때, 입력된 아이디와 유사하면서 규칙에 맞는 아이디를 추천해주는 프로그램을 개발하는 것입니다.
다음은 카카오 아이디의 규칙입니다.</p>

<ul>
  <li>아이디의 길이는 3자 이상 15자 이하여야 합니다.</li>
  <li>아이디는 알파벳 소문자, 숫자, 빼기(-), 밑줄(_), 마침표(.) 문자만 사용할 수 있습니다.</li>
  <li>단, 마침표(.)는 처음과 끝에 사용할 수 없으며 또한 연속으로 사용할 수 없습니다.</li>
</ul>

<p>“네오”는 다음과 같이 7단계의 순차적인 처리 과정을 통해 신규 유저가 입력한 아이디가 카카오 아이디 규칙에 맞는 지 검사하고 규칙에 맞지 않은 경우 규칙에 맞는 새로운 아이디를 추천해 주려고 합니다.
신규 유저가 입력한 아이디가 new_id 라고 한다면,</p>

<blockquote>
  <p>1단계 new_id의 모든 대문자를 대응되는 소문자로 치환합니다.
2단계 new_id에서 알파벳 소문자, 숫자, 빼기(-), 밑줄(_), 마침표(.)를 제외한 모든 문자를 제거합니다.
3단계 new_id에서 마침표(.)가 2번 이상 연속된 부분을 하나의 마침표(.)로 치환합니다.
4단계 new_id에서 마침표(.)가 처음이나 끝에 위치한다면 제거합니다.
5단계 new_id가 빈 문자열이라면, new_id에 “a”를 대입합니다.
6단계 new_id의 길이가 16자 이상이면, new_id의 첫 15개의 문자를 제외한 나머지 문자들을 모두 제거합니다.
     만약 제거 후 마침표(.)가 new_id의 끝에 위치한다면 끝에 위치한 마침표(.) 문자를 제거합니다.
7단계 new_id의 길이가 2자 이하라면, new_id의 마지막 문자를 new_id의 길이가 3이 될 때까지 반복해서 끝에 붙입니다.</p>
</blockquote>

<p>예를 들어, new_id 값이 “…!@BaT#*..y.abcdefghijklm” 라면, 위 7단계를 거치고 나면 new_id는 아래와 같이 변경됩니다.</p>

<ul>
  <li>
    <p>1단계 대문자 ‘B’와 ‘T’가 소문자 ‘b’와 ‘t’로 바뀌었습니다.
“…!@BaT#<em>..y.abcdefghijklm” → “…!@bat#</em>..y.abcdefghijklm”</p>
  </li>
  <li>
    <p>2단계 ‘!’, ‘@’, ‘#’, ‘<em>’ 문자가 제거되었습니다.
“…!@bat#</em>..y.abcdefghijklm” → “…bat..y.abcdefghijklm”</p>
  </li>
  <li>
    <p>3단계 ‘…‘와 ‘..’ 가 ‘.’로 바뀌었습니다.
“…bat..y.abcdefghijklm” → “.bat.y.abcdefghijklm”</p>
  </li>
  <li>
    <p>4단계 아이디의 처음에 위치한 ‘.’가 제거되었습니다.
“.bat.y.abcdefghijklm” → “bat.y.abcdefghijklm”</p>
  </li>
  <li>
    <p>5단계 아이디가 빈 문자열이 아니므로 변화가 없습니다.
“bat.y.abcdefghijklm” → “bat.y.abcdefghijklm”</p>
  </li>
  <li>
    <p>6단계 아이디의 길이가 16자 이상이므로, 처음 15자를 제외한 나머지 문자들이 제거되었습니다.
“bat.y.abcdefghijklm” → “bat.y.abcdefghi”</p>
  </li>
  <li>
    <p>7단계 아이디의 길이가 2자 이하가 아니므로 변화가 없습니다.
“bat.y.abcdefghi” → “bat.y.abcdefghi”</p>
  </li>
</ul>

<p>따라서 신규 유저가 입력한 new_id가 “…!@BaT#*..y.abcdefghijklm”일 때, 네오의 프로그램이 추천하는 새로운 아이디는 “bat.y.abcdefghi” 입니다.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제
</p>

<p>신규 유저가 입력한 아이디를 나타내는 new_id가 매개변수로 주어질 때, “네오”가 설계한 7단계의 처리 과정을 거친 후의 추천 아이디를 return 하도록 solution 함수를 완성해 주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>new_id는 길이 1 이상 1,000 이하인 문자열입니다.</li>
  <li>new_id는 알파벳 대문자, 알파벳 소문자, 숫자, 특수문자로 구성되어 있습니다.</li>
  <li>
    <h2 id="new_id에-나타날-수-있는-특수문자는--_-로-한정됩니다">new_id에 나타날 수 있는 특수문자는 -_.~!@#$%^&amp;*()=+[{]}:?,&lt;&gt;/ 로 한정됩니다.</h2>
  </li>
</ul>

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/72410.png" width="500" height="110" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>문제의 예시와 같습니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>7단계를 거치는 동안 new_id가 변화하는 과정은 아래와 같습니다.
    <ul>
      <li>1단계 변화 없습니다.</li>
      <li>2단계 “z-+.^.” → “z-..”</li>
      <li>3단계 “z-..” → “z-.”</li>
      <li>4단계 “z-.” → “z-“</li>
      <li>5단계 변화 없습니다.</li>
      <li>6단계 변화 없습니다.</li>
      <li>7단계 “z-“ → “z–”</li>
    </ul>
  </li>
</ul>

<p>입출력 예 #3</p>
<ul>
  <li>7단계를 거치는 동안 new_id가 변화하는 과정은 아래와 같습니다.
    <ul>
      <li>1단계 변화 없습니다.</li>
      <li>2단계 “=.=” → “.”</li>
      <li>3단계 변화 없습니다.</li>
      <li>4단계 “.” → “” (new_id가 빈 문자열이 되었습니다.)</li>
      <li>5단계 “” → “a”</li>
      <li>6단계 변화 없습니다.</li>
      <li>7단계 “a” → “aaa”</li>
    </ul>
  </li>
</ul>

<p>입출력 예 #4</p>
<ul>
  <li>1단계에서 7단계까지 거치는 동안 new_id(“123_.def”)는 변하지 않습니다. 즉, new_id가 처음부터 카카오의 아이디 규칙에 맞습니다.</li>
</ul>

<p>입출력 예 #5</p>
<ul>
  <li>7단계를 거치는 동안 new_id가 변화하는 과정은 아래와 같습니다.
    <ul>
      <li>1단계 변화 없습니다.</li>
      <li>2단계 변화 없습니다.</li>
      <li>3단계 변화 없습니다.</li>
      <li>4단계 변화 없습니다.</li>
      <li>5단계 변화 없습니다.</li>
      <li>6단계 “abcdefghijklmn.p” → “abcdefghijklmn.” → “abcdefghijklmn”</li>
      <li>7단계 변화 없습니다.</li>
    </ul>
  </li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">string</span> <span class="nf">solution</span><span class="p">(</span><span class="n">string</span> <span class="n">new_id</span><span class="p">)</span> <span class="p">{</span>
    
    <span class="c1">//1단계</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">new_id</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">new_id</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">65</span> <span class="o">&amp;&amp;</span> <span class="n">new_id</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="mi">90</span><span class="p">)</span>
            <span class="n">new_id</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">32</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="c1">//2단계</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">new_id</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">new_id</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">97</span> <span class="o">&amp;&amp;</span> <span class="n">new_id</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="mi">122</span><span class="p">)</span>
            <span class="k">continue</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">new_id</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="sc">'0'</span> <span class="o">&amp;&amp;</span> <span class="n">new_id</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="sc">'9'</span><span class="p">)</span>
            <span class="k">continue</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">new_id</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'-'</span> <span class="o">||</span> <span class="n">new_id</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'_'</span> <span class="o">||</span> <span class="n">new_id</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'.'</span><span class="p">)</span>
            <span class="k">continue</span><span class="p">;</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="n">new_id</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">new_id</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">+</span><span class="n">i</span><span class="p">);</span>
            <span class="n">i</span><span class="o">--</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="c1">//3단계</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">new_id</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">new_id</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'.'</span> <span class="o">&amp;&amp;</span> <span class="n">new_id</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'.'</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">new_id</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">new_id</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">+</span><span class="n">i</span><span class="p">);</span>
            <span class="n">i</span><span class="o">--</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="c1">//4단계</span>
    <span class="k">if</span><span class="p">(</span><span class="n">new_id</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'.'</span><span class="p">)</span>
        <span class="n">new_id</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">new_id</span><span class="p">.</span><span class="n">begin</span><span class="p">());</span>
    <span class="k">if</span><span class="p">(</span><span class="n">new_id</span><span class="p">[</span><span class="n">new_id</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'.'</span><span class="p">)</span>
        <span class="n">new_id</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">new_id</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">+</span><span class="n">new_id</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
    
    <span class="c1">//5단계</span>
    <span class="k">if</span><span class="p">(</span><span class="n">new_id</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
        <span class="n">new_id</span> <span class="o">+=</span> <span class="sc">'a'</span><span class="p">;</span>
    
    <span class="c1">//6단계</span>
    <span class="k">if</span><span class="p">(</span><span class="n">new_id</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">15</span><span class="p">)</span>
        <span class="n">new_id</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="mi">15</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="n">new_id</span><span class="p">[</span><span class="n">new_id</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'.'</span><span class="p">)</span>
        <span class="n">new_id</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">new_id</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">+</span><span class="n">new_id</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
    
    <span class="c1">//7단계</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">3</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">new_id</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&gt;=</span> <span class="mi">3</span><span class="p">)</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">else</span>
            <span class="n">new_id</span> <span class="o">+=</span> <span class="n">new_id</span><span class="p">[</span><span class="n">new_id</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">new_id</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 30분 
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.1" /><summary type="html"><![CDATA[Programmers - 72410]]></summary></entry></feed>