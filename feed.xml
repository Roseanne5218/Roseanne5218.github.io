<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ko"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" hreflang="ko" /><updated>2025-10-25T15:00:04+00:00</updated><id>/feed.xml</id><title type="html">Roseanne</title><subtitle>Hydejack is a boutique Jekyll theme for hackers, nerds, and academics, with a focus on personal sites that are meant to impress.
</subtitle><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><entry><title type="html">방문 길이</title><link href="/codingtest/programmers/lv.2/2025-10-25-codingtest_126/" rel="alternate" type="text/html" title="방문 길이" /><published>2025-10-25T00:00:00+00:00</published><updated>2025-10-25T14:59:10+00:00</updated><id>/codingtest/programmers/lv.2/codingtest_126</id><content type="html" xml:base="/codingtest/programmers/lv.2/2025-10-25-codingtest_126/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>게임 캐릭터를 4가지 명령어를 통해 움직이려 합니다. 명령어는 다음과 같습니다.</p>

<ul>
  <li>U: 위쪽으로 한 칸 가기</li>
  <li>D: 아래쪽으로 한 칸 가기</li>
  <li>R: 오른쪽으로 한 칸 가기</li>
  <li>L: 왼쪽으로 한 칸 가기</li>
</ul>

<p>캐릭터는 좌표평면의 (0, 0) 위치에서 시작합니다. 좌표평면의 경계는 왼쪽 위(-5, 5), 왼쪽 아래(-5, -5), 오른쪽 위(5, 5), 오른쪽 아래(5, -5)로 이루어져 있습니다.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>주어지는 숫자의 개수는 2개 이상 20개 이하입니다.</li>
  <li>각 숫자는 1 이상 50 이하인 자연수입니다.</li>
  <li>타겟 넘버는 1 이상 1000 이하인 자연수입니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/43165.png" width="270" height="100" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>문제 예시와 같습니다.</li>
</ul>

<p>입출력 예 #2</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>+4+1-2+1 = 4
+4-1+2-1 = 4
</code></pre></div></div>

<ul>
  <li>총 2가지 방법이 있으므로, 2를 return 합니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;queue&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;utility&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">numbers</span><span class="p">,</span> <span class="kt">int</span> <span class="n">target</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">queue</span><span class="o">&lt;</span><span class="n">pair</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">Qu</span><span class="p">;</span>
    <span class="n">Qu</span><span class="p">.</span><span class="n">push</span><span class="p">({</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">});</span>
    <span class="kt">int</span> <span class="n">num</span> <span class="o">=</span> <span class="n">numbers</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>
    <span class="kt">int</span> <span class="n">way</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    
    <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">Qu</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">n1</span> <span class="o">=</span> <span class="n">Qu</span><span class="p">.</span><span class="n">front</span><span class="p">().</span><span class="n">first</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">n2</span> <span class="o">=</span> <span class="n">Qu</span><span class="p">.</span><span class="n">front</span><span class="p">().</span><span class="n">second</span><span class="p">;</span>
        <span class="n">Qu</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">n1</span> <span class="o">==</span> <span class="n">num</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">n2</span> <span class="o">==</span> <span class="n">target</span><span class="p">)</span>
                <span class="n">way</span><span class="o">++</span><span class="p">;</span>
            <span class="k">continue</span><span class="p">;</span>
        <span class="p">}</span>
        
        <span class="n">Qu</span><span class="p">.</span><span class="n">push</span><span class="p">({</span><span class="n">n1</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">n2</span> <span class="o">+</span> <span class="n">numbers</span><span class="p">[</span><span class="n">n1</span><span class="p">]});</span>
        <span class="n">Qu</span><span class="p">.</span><span class="n">push</span><span class="p">({</span><span class="n">n1</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">n2</span> <span class="o">-</span> <span class="n">numbers</span><span class="p">[</span><span class="n">n1</span><span class="p">]});</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">way</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 X
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 20분
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
문제 소감
</p>

<ul>
  <li>BFS를 이용한 타겟과 일치하는 경우의 수 찾기</li>
</ul>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.2" /><summary type="html"><![CDATA[Programmers - 49994]]></summary></entry><entry><title type="html">타겟 넘버</title><link href="/codingtest/programmers/lv.2/2025-10-24-codingtest_125/" rel="alternate" type="text/html" title="타겟 넘버" /><published>2025-10-24T00:00:00+00:00</published><updated>2025-10-25T14:59:10+00:00</updated><id>/codingtest/programmers/lv.2/codingtest_125</id><content type="html" xml:base="/codingtest/programmers/lv.2/2025-10-24-codingtest_125/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>n개의 음이 아닌 정수들이 있습니다. 이 정수들을 순서를 바꾸지 않고 적절히 더하거나 빼서 타겟 넘버를 만들려고 합니다. 예를 들어 [1, 1, 1, 1, 1]로 숫자 3을 만들려면 다음 다섯 방법을 쓸 수 있습니다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>-1+1+1+1+1 = 3
+1-1+1+1+1 = 3
+1+1-1+1+1 = 3
+1+1+1-1+1 = 3
+1+1+1+1-1 = 3
</code></pre></div></div>

<p>사용할 수 있는 숫자가 담긴 배열 numbers, 타겟 넘버 target이 매개변수로 주어질 때 숫자를 적절히 더하고 빼서 타겟 넘버를 만드는 방법의 수를 return 하도록 solution 함수를 작성해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>주어지는 숫자의 개수는 2개 이상 20개 이하입니다.</li>
  <li>각 숫자는 1 이상 50 이하인 자연수입니다.</li>
  <li>타겟 넘버는 1 이상 1000 이하인 자연수입니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/43165.png" width="270" height="100" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>문제 예시와 같습니다.</li>
</ul>

<p>입출력 예 #2</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>+4+1-2+1 = 4
+4-1+2-1 = 4
</code></pre></div></div>

<ul>
  <li>총 2가지 방법이 있으므로, 2를 return 합니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;queue&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;utility&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">numbers</span><span class="p">,</span> <span class="kt">int</span> <span class="n">target</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">queue</span><span class="o">&lt;</span><span class="n">pair</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">Qu</span><span class="p">;</span>
    <span class="n">Qu</span><span class="p">.</span><span class="n">push</span><span class="p">({</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">});</span>
    <span class="kt">int</span> <span class="n">num</span> <span class="o">=</span> <span class="n">numbers</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>
    <span class="kt">int</span> <span class="n">way</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    
    <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">Qu</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">n1</span> <span class="o">=</span> <span class="n">Qu</span><span class="p">.</span><span class="n">front</span><span class="p">().</span><span class="n">first</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">n2</span> <span class="o">=</span> <span class="n">Qu</span><span class="p">.</span><span class="n">front</span><span class="p">().</span><span class="n">second</span><span class="p">;</span>
        <span class="n">Qu</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">n1</span> <span class="o">==</span> <span class="n">num</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">n2</span> <span class="o">==</span> <span class="n">target</span><span class="p">)</span>
                <span class="n">way</span><span class="o">++</span><span class="p">;</span>
            <span class="k">continue</span><span class="p">;</span>
        <span class="p">}</span>
        
        <span class="n">Qu</span><span class="p">.</span><span class="n">push</span><span class="p">({</span><span class="n">n1</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">n2</span> <span class="o">+</span> <span class="n">numbers</span><span class="p">[</span><span class="n">n1</span><span class="p">]});</span>
        <span class="n">Qu</span><span class="p">.</span><span class="n">push</span><span class="p">({</span><span class="n">n1</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">n2</span> <span class="o">-</span> <span class="n">numbers</span><span class="p">[</span><span class="n">n1</span><span class="p">]});</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">way</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 X
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 20분
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
문제 소감
</p>

<ul>
  <li>BFS를 이용한 타겟과 일치하는 경우의 수 찾기</li>
</ul>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.2" /><summary type="html"><![CDATA[Programmers - 43165]]></summary></entry><entry><title type="html">게임 맵 최단거리</title><link href="/codingtest/programmers/lv.2/2025-10-21-codingtest_124/" rel="alternate" type="text/html" title="게임 맵 최단거리" /><published>2025-10-21T00:00:00+00:00</published><updated>2025-10-25T14:59:10+00:00</updated><id>/codingtest/programmers/lv.2/codingtest_124</id><content type="html" xml:base="/codingtest/programmers/lv.2/2025-10-21-codingtest_124/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>ROR 게임은 두 팀으로 나누어서 진행하며, 상대 팀 진영을 먼저 파괴하면 이기는 게임입니다. 따라서, 각 팀은 상대 팀 진영에 최대한 빨리 도착하는 것이 유리합니다.</p>

<p>지금부터 당신은 한 팀의 팀원이 되어 게임을 진행하려고 합니다. 다음은 5 x 5 크기의 맵에, 당신의 캐릭터가 (행: 1, 열: 1) 위치에 있고, 상대 팀 진영은 (행: 5, 열: 5) 위치에 있는 경우의 예시입니다.</p>

<p><img src="/assets/img/codingtest/1844_1.png" width="220" height="200" /></p>

<p>위 그림에서 검은색 부분은 벽으로 막혀있어 갈 수 없는 길이며, 흰색 부분은 갈 수 있는 길입니다. 캐릭터가 움직일 때는 동, 서, 남, 북 방향으로 한 칸씩 이동하며, 게임 맵을 벗어난 길은 갈 수 없습니다.
아래 예시는 캐릭터가 상대 팀 진영으로 가는 두 가지 방법을 나타내고 있습니다.</p>

<ul>
  <li>첫 번째 방법은 11개의 칸을 지나서 상대 팀 진영에 도착했습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/1844_2.png" width="220" height="200" /></p>

<ul>
  <li>두 번째 방법은 15개의 칸을 지나서 상대팀 진영에 도착했습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/1844_3.png" width="220" height="200" /></p>

<p>위 예시에서는 첫 번째 방법보다 더 빠르게 상대팀 진영에 도착하는 방법은 없으므로, 이 방법이 상대 팀 진영으로 가는 가장 빠른 방법입니다.</p>

<p>만약, 상대 팀이 자신의 팀 진영 주위에 벽을 세워두었다면 상대 팀 진영에 도착하지 못할 수도 있습니다. 예를 들어, 다음과 같은 경우에 당신의 캐릭터는 상대 팀 진영에 도착할 수 없습니다.</p>

<p><img src="/assets/img/codingtest/1844_4.png" width="220" height="200" /></p>

<p>게임 맵의 상태 maps가 매개변수로 주어질 때, 캐릭터가 상대 팀 진영에 도착하기 위해서 지나가야 하는 칸의 개수의 최솟값을 return 하도록 solution 함수를 완성해주세요. 단, 상대 팀 진영에 도착할 수 없을 때는 -1을 return 해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>maps는 n x m 크기의 게임 맵의 상태가 들어있는 2차원 배열로, n과 m은 각각 1 이상 100 이하의 자연수입니다.
    <ul>
      <li>n과 m은 서로 같을 수도, 다를 수도 있지만, n과 m이 모두 1인 경우는 입력으로 주어지지 않습니다.</li>
    </ul>
  </li>
  <li>maps는 0과 1로만 이루어져 있으며, 0은 벽이 있는 자리, 1은 벽이 없는 자리를 나타냅니다.</li>
  <li>처음에 캐릭터는 게임 맵의 좌측 상단인 (1, 1) 위치에 있으며, 상대방 진영은 게임 맵의 우측 하단인 (n, m) 위치에 있습니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/1844_5.png" width="500" height="110" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>주어진 데이터는 다음과 같습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/1844_6.png" width="220" height="200" /></p>

<ul>
  <li>캐릭터가 적 팀의 진영까지 이동하는 가장 빠른 길은 다음 그림과 같습니다.</li>
</ul>

<p><img src="/assets/img/codingtest/1844_7.png" width="220" height="200" /></p>

<ul>
  <li>따라서 총 11칸을 캐릭터가 지나갔으므로 11을 return 하면 됩니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>문제의 예시와 같으며, 상대 팀 진영에 도달할 방법이 없습니다. 따라서 -1을 return 합니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;queue&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;utility&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="o">&gt;</span> <span class="n">maps</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">maps</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>
    <span class="kt">int</span> <span class="n">m</span> <span class="o">=</span> <span class="n">maps</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">size</span><span class="p">();</span>
    
    <span class="k">if</span><span class="p">(</span><span class="n">n</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">m</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="n">maps</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">maps</span><span class="p">[</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">m</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
    
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">Way</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">(</span><span class="n">m</span><span class="p">,</span> <span class="mi">0</span><span class="p">));</span>
    <span class="n">queue</span><span class="o">&lt;</span><span class="n">pair</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">Qu</span><span class="p">;</span>
    
    <span class="n">Way</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="n">Qu</span><span class="p">.</span><span class="n">push</span><span class="p">({</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">});</span>
    
    <span class="kt">int</span> <span class="n">mr</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">};</span>
    <span class="kt">int</span> <span class="n">mc</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">};</span>
    
    <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">Qu</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">r</span> <span class="o">=</span> <span class="n">Qu</span><span class="p">.</span><span class="n">front</span><span class="p">().</span><span class="n">first</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="n">Qu</span><span class="p">.</span><span class="n">front</span><span class="p">().</span><span class="n">second</span><span class="p">;</span>
        <span class="n">Qu</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">r</span> <span class="o">==</span> <span class="n">n</span><span class="o">-</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">c</span> <span class="o">==</span> <span class="n">m</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
            <span class="k">return</span> <span class="n">Way</span><span class="p">[</span><span class="n">r</span><span class="p">][</span><span class="n">c</span><span class="p">];</span>
        
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">4</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">int</span> <span class="n">nr</span> <span class="o">=</span> <span class="n">r</span> <span class="o">+</span> <span class="n">mr</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="kt">int</span> <span class="n">nc</span> <span class="o">=</span> <span class="n">c</span> <span class="o">+</span> <span class="n">mc</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            
            <span class="k">if</span><span class="p">(</span><span class="n">nr</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">nr</span> <span class="o">&gt;=</span> <span class="n">n</span> <span class="o">||</span> <span class="n">nc</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">nc</span> <span class="o">&gt;=</span> <span class="n">m</span><span class="p">)</span>
                <span class="k">continue</span><span class="p">;</span>
            <span class="k">if</span><span class="p">(</span><span class="n">maps</span><span class="p">[</span><span class="n">nr</span><span class="p">][</span><span class="n">nc</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">Way</span><span class="p">[</span><span class="n">nr</span><span class="p">][</span><span class="n">nc</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span>
                <span class="k">continue</span><span class="p">;</span>
            
            <span class="n">Way</span><span class="p">[</span><span class="n">nr</span><span class="p">][</span><span class="n">nc</span><span class="p">]</span> <span class="o">=</span> <span class="n">Way</span><span class="p">[</span><span class="n">r</span><span class="p">][</span><span class="n">c</span><span class="p">]</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
            <span class="n">Qu</span><span class="p">.</span><span class="n">push</span><span class="p">({</span><span class="n">nr</span><span class="p">,</span> <span class="n">nc</span><span class="p">});</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 X
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 23분
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
문제 소감
</p>

<ul>
  <li>움직인 자리를 배열에 삽입하고 해당 위치에서 움직일 수 있는 부분을 탐색</li>
  <li>만약 움직일 부분이 없으면 뒤로 돌아가 다시 탐색</li>
  <li>마지막 지점에 도달하면 최단 거리를 리턴</li>
</ul>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.2" /><summary type="html"><![CDATA[Programmers - 1844]]></summary></entry><entry><title type="html">롤케이크 자르기</title><link href="/codingtest/programmers/lv.2/2025-10-20-codingtest_123/" rel="alternate" type="text/html" title="롤케이크 자르기" /><published>2025-10-20T00:00:00+00:00</published><updated>2025-10-25T14:59:10+00:00</updated><id>/codingtest/programmers/lv.2/codingtest_123</id><content type="html" xml:base="/codingtest/programmers/lv.2/2025-10-20-codingtest_123/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>철수는 롤케이크를 두 조각으로 잘라서 동생과 한 조각씩 나눠 먹으려고 합니다. 이 롤케이크에는 여러가지 토핑들이 일렬로 올려져 있습니다. 철수와 동생은 롤케이크를 공평하게 나눠먹으려 하는데, 그들은 롤케이크의 크기보다 롤케이크 위에 올려진 토핑들의 종류에 더 관심이 많습니다. 그래서 잘린 조각들의 크기와 올려진 토핑의 개수에 상관없이 각 조각에 동일한 가짓수의 토핑이 올라가면 공평하게 롤케이크가 나누어진 것으로 생각합니다.</p>

<p>예를 들어, 롤케이크에 4가지 종류의 토핑이 올려져 있다고 합시다. 토핑들을 1, 2, 3, 4와 같이 번호로 표시했을 때, 케이크 위에 토핑들이 [1, 2, 1, 3, 1, 4, 1, 2] 순서로 올려져 있습니다. 만약 세 번째 토핑(1)과 네 번째 토핑(3) 사이를 자르면 롤케이크의 토핑은 [1, 2, 1], [3, 1, 4, 1, 2]로 나뉘게 됩니다. 철수가 [1, 2, 1]이 놓인 조각을, 동생이 [3, 1, 4, 1, 2]가 놓인 조각을 먹게 되면 철수는 두 가지 토핑(1, 2)을 맛볼 수 있지만, 동생은 네 가지 토핑(1, 2, 3, 4)을 맛볼 수 있으므로, 이는 공평하게 나누어진 것이 아닙니다. 만약 롤케이크의 네 번째 토핑(3)과 다섯 번째 토핑(1) 사이를 자르면 [1, 2, 1, 3], [1, 4, 1, 2]로 나뉘게 됩니다. 이 경우 철수는 세 가지 토핑(1, 2, 3)을, 동생도 세 가지 토핑(1, 2, 4)을 맛볼 수 있으므로, 이는 공평하게 나누어진 것입니다. 공평하게 롤케이크를 자르는 방법은 여러가지 일 수 있습니다. 위의 롤케이크를 [1, 2, 1, 3, 1], [4, 1, 2]으로 잘라도 공평하게 나뉩니다. 어떤 경우에는 롤케이크를 공평하게 나누지 못할 수도 있습니다.</p>

<p>롤케이크에 올려진 토핑들의 번호를 저장한 정수 배열 topping이 매개변수로 주어질 때, 롤케이크를 공평하게 자르는 방법의 수를 return 하도록 solution 함수를 완성해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>1 ≤ topping의 길이 ≤ 1,000,000
    <ul>
      <li>1 ≤ topping의 원소 ≤ 10,000</li>
    </ul>
  </li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/132265.png" width="250" height="110" /></p>

<p>입출력 예 #1</p>

<ul>
  <li>롤케이크를 [1, 2, 1, 3], [1, 4, 1, 2] 또는 [1, 2, 1, 3, 1], [4, 1, 2]와 같이 자르면 철수와 동생은 각각 세 가지 토핑을 맛볼 수 있습니다. 이 경우 공평하게 롤케이크를 나누는 방법은 위의 두 가지만 존재합니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>롤케이크를 공평하게 나눌 수 없습니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">topping</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    
    <span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="o">*</span><span class="n">max_element</span><span class="p">(</span><span class="n">topping</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">topping</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
    
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">front</span><span class="p">(</span><span class="n">max</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">back</span><span class="p">(</span><span class="n">max</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">:</span> <span class="n">topping</span><span class="p">)</span> <span class="n">back</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
    
    <span class="kt">int</span> <span class="n">left</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">right</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">:</span> <span class="n">back</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
            <span class="n">right</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">topping</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>   
        <span class="n">front</span><span class="p">[</span><span class="n">topping</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span><span class="o">++</span><span class="p">;</span>
        <span class="n">back</span><span class="p">[</span><span class="n">topping</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span><span class="o">--</span><span class="p">;</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">front</span><span class="p">[</span><span class="n">topping</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span>
            <span class="n">left</span><span class="o">++</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">back</span><span class="p">[</span><span class="n">topping</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
            <span class="n">right</span><span class="o">--</span><span class="p">;</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">left</span> <span class="o">==</span> <span class="n">right</span><span class="p">)</span>
            <span class="n">answer</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 32분 30초
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.2" /><summary type="html"><![CDATA[Programmers - 132265]]></summary></entry><entry><title type="html">프로세스</title><link href="/codingtest/programmers/lv.2/2025-10-19-codingtest_122/" rel="alternate" type="text/html" title="프로세스" /><published>2025-10-19T00:00:00+00:00</published><updated>2025-10-25T14:59:10+00:00</updated><id>/codingtest/programmers/lv.2/codingtest_122</id><content type="html" xml:base="/codingtest/programmers/lv.2/2025-10-19-codingtest_122/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>운영체제의 역할 중 하나는 컴퓨터 시스템의 자원을 효율적으로 관리하는 것입니다. 이 문제에서는 운영체제가 다음 규칙에 따라 프로세스를 관리할 경우 특정 프로세스가 몇 번째로 실행되는지 알아내면 됩니다.</p>

<blockquote>
  <ol>
    <li>실행 대기 큐(Queue)에서 대기중인 프로세스 하나를 꺼냅니다.</li>
    <li>큐에 대기중인 프로세스 중 우선순위가 더 높은 프로세스가 있다면 방금 꺼낸 프로세스를 다시 큐에 넣습니다.</li>
    <li>만약 그런 프로세스가 없다면 방금 꺼낸 프로세스를 실행합니다.
 3.1 한 번 실행한 프로세스는 다시 큐에 넣지 않고 그대로 종료됩니다.</li>
  </ol>
</blockquote>

<p>예를 들어 프로세스 4개 [A, B, C, D]가 순서대로 실행 대기 큐에 들어있고, 우선순위가 [2, 1, 3, 2]라면 [C, D, A, B] 순으로 실행하게 됩니다.</p>

<p>현재 실행 대기 큐(Queue)에 있는 프로세스의 중요도가 순서대로 담긴 배열 priorities와, 몇 번째로 실행되는지 알고싶은 프로세스의 위치를 알려주는 location이 매개변수로 주어질 때, 해당 프로세스가 몇 번째로 실행되는지 return 하도록 solution 함수를 작성해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>priorities의 길이는 1 이상 100 이하입니다.
    <ul>
      <li>priorities의 원소는 1 이상 9 이하의 정수입니다.</li>
      <li>priorities의 원소는 우선순위를 나타내며 숫자가 클 수록 우선순위가 높습니다.</li>
    </ul>
  </li>
  <li>location은 0 이상 (대기 큐에 있는 프로세스 수 - 1) 이하의 값을 가집니다.
    <ul>
      <li>priorities의 가장 앞에 있으면 0, 두 번째에 있으면 1 … 과 같이 표현합니다.</li>
    </ul>
  </li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/42587.png" width="300" height="115" /></p>

<p>예제 #1</p>
<ul>
  <li>문제에 나온 예와 같습니다.</li>
</ul>

<p>예제 #2</p>
<ul>
  <li>6개의 프로세스 [A, B, C, D, E, F]가 대기 큐에 있고 중요도가 [1, 1, 9, 1, 1, 1] 이므로 [C, D, E, F, A, B] 순으로 실행됩니다. 따라서 A는 5번째로 실행됩니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">priorities</span><span class="p">,</span> <span class="kt">int</span> <span class="n">location</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    
    <span class="kt">bool</span> <span class="n">check</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="n">priorities</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">priorities</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">priorities</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">priorities</span><span class="p">[</span><span class="n">l</span><span class="p">])</span>
                <span class="n">check</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
        <span class="p">}</span>
            
        <span class="k">if</span><span class="p">(</span><span class="n">check</span> <span class="o">==</span> <span class="nb">true</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">int</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">priorities</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
            <span class="n">priorities</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">priorities</span><span class="p">.</span><span class="n">begin</span><span class="p">());</span>
            <span class="n">priorities</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">temp</span><span class="p">);</span>
            <span class="n">check</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
            <span class="k">if</span><span class="p">(</span><span class="n">location</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
                <span class="n">location</span> <span class="o">=</span> <span class="n">priorities</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
            <span class="k">else</span>
                <span class="n">location</span><span class="o">--</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span> 
        <span class="p">{</span>
            <span class="n">answer</span><span class="o">++</span><span class="p">;</span>
            
            <span class="k">if</span><span class="p">(</span><span class="n">location</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
                <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
            
            <span class="n">priorities</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">priorities</span><span class="p">.</span><span class="n">begin</span><span class="p">());</span>
            <span class="n">location</span><span class="o">--</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 41분
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.2" /><summary type="html"><![CDATA[Programmers - 42587]]></summary></entry><entry><title type="html">전화번호 목록</title><link href="/codingtest/programmers/lv.2/2025-10-14-codingtest_121/" rel="alternate" type="text/html" title="전화번호 목록" /><published>2025-10-14T00:00:00+00:00</published><updated>2025-10-25T14:59:10+00:00</updated><id>/codingtest/programmers/lv.2/codingtest_121</id><content type="html" xml:base="/codingtest/programmers/lv.2/2025-10-14-codingtest_121/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>전화번호부에 적힌 전화번호 중, 한 번호가 다른 번호의 접두어인 경우가 있는지 확인하려 합니다.
전화번호가 다음과 같을 경우, 구조대 전화번호는 영석이의 전화번호의 접두사입니다.</p>

<ul>
  <li>구조대 : 119</li>
  <li>박준영 : 97 674 223</li>
  <li>지영석 : 11 9552 4421</li>
</ul>

<p>전화번호부에 적힌 전화번호를 담은 배열 phone_book 이 solution 함수의 매개변수로 주어질 때, 어떤 번호가 다른 번호의 접두어인 경우가 있으면 false를 그렇지 않으면 true를 return 하도록 solution 함수를 작성해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>phone_book의 길이는 1 이상 1,000,000 이하입니다.
    <ul>
      <li>각 전화번호의 길이는 1 이상 20 이하입니다.</li>
      <li>같은 전화번호가 중복해서 들어있지 않습니다.</li>
    </ul>
  </li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/42577.png" width="340" height="140" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>앞에서 설명한 예와 같습니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>한 번호가 다른 번호의 접두사인 경우가 없으므로, 답은 true입니다.</li>
</ul>

<p>입출력 예 #3</p>
<ul>
  <li>첫 번째 전화번호, “12”가 두 번째 전화번호 “123”의 접두사입니다. 따라서 답은 false입니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">bool</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">phone_book</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">bool</span> <span class="n">answer</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
    
    <span class="n">sort</span><span class="p">(</span><span class="n">phone_book</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">phone_book</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">phone_book</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">phone_book</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">].</span><span class="n">compare</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">phone_book</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">size</span><span class="p">(),</span> <span class="n">phone_book</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
                <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 35분
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.2" /><summary type="html"><![CDATA[Programmers - 42577]]></summary></entry><entry><title type="html">튜플</title><link href="/codingtest/programmers/lv.2/2025-10-13-codingtest_120/" rel="alternate" type="text/html" title="튜플" /><published>2025-10-13T00:00:00+00:00</published><updated>2025-10-25T14:59:10+00:00</updated><id>/codingtest/programmers/lv.2/codingtest_120</id><content type="html" xml:base="/codingtest/programmers/lv.2/2025-10-13-codingtest_120/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>셀수있는 수량의 순서있는 열거 또는 어떤 순서를 따르는 요소들의 모음을 튜플(tuple)이라고 합니다. n개의 요소를 가진 튜플을 n-튜플(n-tuple)이라고 하며, 다음과 같이 표현할 수 있습니다.</p>

<ul>
  <li>(a1, a2, a3, …, an)</li>
</ul>

<p>튜플은 다음과 같은 성질을 가지고 있습니다.</p>

<ol>
  <li>중복된 원소가 있을 수 있습니다. ex : (2, 3, 1, 2)</li>
  <li>원소에 정해진 순서가 있으며, 원소의 순서가 다르면 서로 다른 튜플입니다. ex : (1, 2, 3) ≠ (1, 3, 2)</li>
  <li>튜플의 원소 개수는 유한합니다.</li>
</ol>

<p>원소의 개수가 n개이고, 중복되는 원소가 없는 튜플 (a1, a2, a3, …, an)이 주어질 때(단, a1, a2, …, an은 자연수), 이는 다음과 같이 집합 기호 ‘{‘, ‘}’를 이용해 표현할 수 있습니다.</p>

<ul>
  <li>{{a1}, {a1, a2}, {a1, a2, a3}, {a1, a2, a3, a4}, … {a1, a2, a3, a4, …, an}}</li>
</ul>

<p>예를 들어 튜플이 (2, 1, 3, 4)인 경우 이는</p>

<ul>
  <li>{{2}, {2, 1}, {2, 1, 3}, {2, 1, 3, 4}}</li>
</ul>

<p>와 같이 표현할 수 있습니다. 이때, 집합은 원소의 순서가 바뀌어도 상관없으므로</p>

<ul>
  <li>{{2}, {2, 1}, {2, 1, 3}, {2, 1, 3, 4}}</li>
  <li>{{2, 1, 3, 4}, {2}, {2, 1, 3}, {2, 1}}</li>
  <li>{{1, 2, 3}, {2, 1}, {1, 2, 4, 3}, {2}}</li>
</ul>

<p>는 모두 같은 튜플 (2, 1, 3, 4)를 나타냅니다.</p>

<p>특정 튜플을 표현하는 집합이 담긴 문자열 s가 매개변수로 주어질 때, s가 표현하는 튜플을 배열에 담아 return 하도록 solution 함수를 완성해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>s의 길이는 5 이상 1,000,000 이하입니다.</li>
  <li>s는 숫자와 ‘{‘, ‘}’, ‘,’ 로만 이루어져 있습니다.</li>
  <li>숫자가 0으로 시작하는 경우는 없습니다.</li>
  <li>s는 항상 중복되는 원소가 없는 튜플을 올바르게 표현하고 있습니다.</li>
  <li>s가 표현하는 튜플의 원소는 1 이상 100,000 이하인 자연수입니다.</li>
  <li>return 하는 배열의 길이가 1 이상 500 이하인 경우만 입력으로 주어집니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/64065.png" width="400" height="215" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>문제 예시와 같습니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>문제 예시와 같습니다.</li>
</ul>

<p>입출력 예 #3</p>
<ul>
  <li>(111, 20)을 집합 기호를 이용해 표현하면 {{111}, {111,20}}이 되며, 이는 {{20,111},{111}}과 같습니다.</li>
</ul>

<p>입출력 예 #4</p>
<ul>
  <li>(123)을 집합 기호를 이용해 표현하면 {{123}} 입니다.</li>
</ul>

<p>입출력 예 #5</p>
<ul>
  <li>(3, 2, 4, 1)을 집합 기호를 이용해 표현하면 {{3},{3,2},{3,2,4},{3,2,4,1}}이 되며, 이는 {{4,2,3},{3},{2,3,4,1},{2,3}}과 같습니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">string</span> <span class="n">s</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">;</span>
    
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">List</span><span class="p">;</span>
    
    <span class="n">string</span> <span class="n">temp</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">s</span><span class="p">.</span><span class="n">length</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">!=</span> <span class="sc">'{'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">!=</span> <span class="sc">'}'</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'}'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">','</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">List</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">temp</span><span class="p">);</span>
                <span class="n">temp</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="n">temp</span> <span class="o">+=</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">List</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">temp</span><span class="p">);</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">List</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">List</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">List</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">length</span><span class="p">()</span> <span class="o">&gt;</span> <span class="n">List</span><span class="p">[</span><span class="n">l</span><span class="p">].</span><span class="n">length</span><span class="p">())</span>
            <span class="p">{</span>
                <span class="n">temp</span> <span class="o">=</span> <span class="n">List</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="n">List</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">List</span><span class="p">[</span><span class="n">l</span><span class="p">];</span>
                <span class="n">List</span><span class="p">[</span><span class="n">l</span><span class="p">]</span> <span class="o">=</span> <span class="n">temp</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="n">temp</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">List</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
            <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">stoi</span><span class="p">(</span><span class="n">List</span><span class="p">[</span><span class="mi">0</span><span class="p">]));</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="kt">bool</span> <span class="n">check</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">List</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">length</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">l</span> <span class="o">==</span> <span class="n">List</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">length</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
                    <span class="n">temp</span> <span class="o">+=</span> <span class="n">List</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="p">];</span>
                
                <span class="k">if</span><span class="p">(</span><span class="n">List</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="p">]</span> <span class="o">==</span> <span class="sc">','</span> <span class="o">||</span> <span class="n">l</span> <span class="o">==</span> <span class="n">List</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">length</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">answer</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
                    <span class="p">{</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">answer</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="n">stoi</span><span class="p">(</span><span class="n">temp</span><span class="p">))</span>
                            <span class="k">break</span><span class="p">;</span>
                        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">j</span> <span class="o">==</span> <span class="n">answer</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
                        <span class="p">{</span>
                            <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">stoi</span><span class="p">(</span><span class="n">temp</span><span class="p">));</span>
                            <span class="n">check</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                        <span class="p">}</span>
                    <span class="p">}</span>
                    <span class="n">temp</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
                    
                    <span class="k">if</span><span class="p">(</span><span class="n">check</span> <span class="o">==</span> <span class="nb">true</span><span class="p">)</span>
                        <span class="k">break</span><span class="p">;</span>
                <span class="p">}</span>
                <span class="k">else</span>
                    <span class="n">temp</span> <span class="o">+=</span> <span class="n">List</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">l</span><span class="p">];</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 41분 30초
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.2" /><summary type="html"><![CDATA[Programmers - 64065]]></summary></entry><entry><title type="html">[1차] 캐시</title><link href="/codingtest/programmers/lv.2/2025-10-03-codingtest_119/" rel="alternate" type="text/html" title="[1차] 캐시" /><published>2025-10-03T00:00:00+00:00</published><updated>2025-10-25T14:59:10+00:00</updated><id>/codingtest/programmers/lv.2/codingtest_119</id><content type="html" xml:base="/codingtest/programmers/lv.2/2025-10-03-codingtest_119/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>지도개발팀에서 근무하는 제이지는 지도에서 도시 이름을 검색하면 해당 도시와 관련된 맛집 게시물들을 데이터베이스에서 읽어 보여주는 서비스를 개발하고 있다.
이 프로그램의 테스팅 업무를 담당하고 있는 어피치는 서비스를 오픈하기 전 각 로직에 대한 성능 측정을 수행하였는데, 제이지가 작성한 부분 중 데이터베이스에서 게시물을 가져오는 부분의 실행시간이 너무 오래 걸린다는 것을 알게 되었다.
어피치는 제이지에게 해당 로직을 개선하라고 닦달하기 시작하였고, 제이지는 DB 캐시를 적용하여 성능 개선을 시도하고 있지만 캐시 크기를 얼마로 해야 효율적인지 몰라 난감한 상황이다.</p>

<p>어피치에게 시달리는 제이지를 도와, DB 캐시를 적용할 때 캐시 크기에 따른 실행시간 측정 프로그램을 작성하시오.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입력 형식
</p>

<ul>
  <li>캐시 크기(cacheSize)와 도시이름 배열(cities)을 입력받는다.</li>
  <li>cacheSize는 정수이며, 범위는 0 ≦ cacheSize ≦ 30 이다.</li>
  <li>cities는 도시 이름으로 이뤄진 문자열 배열로, 최대 도시 수는 100,000개이다.</li>
  <li>각 도시 이름은 공백, 숫자, 특수문자 등이 없는 영문자로 구성되며, 대소문자 구분을 하지 않는다. 도시 이름은 최대 20자로 이루어져 있다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
출력 형식
</p>

<ul>
  <li>입력된 도시이름 배열을 순서대로 처리할 때, “총 실행시간”을 출력한다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
조건
</p>

<ul>
  <li>캐시 교체 알고리즘은 LRU(Least Recently Used)를 사용한다.</li>
  <li>cache hit일 경우 실행시간은 1이다.</li>
  <li>cache miss일 경우 실행시간은 5이다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/17680.png" width="800" height="370" /></p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">bool</span> <span class="nf">Same</span><span class="p">(</span><span class="n">string</span> <span class="n">s1</span><span class="p">,</span> <span class="n">string</span> <span class="n">s2</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span><span class="p">(</span><span class="n">s1</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">!=</span> <span class="n">s2</span><span class="p">.</span><span class="n">size</span><span class="p">())</span>
        <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
    <span class="k">else</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">s1</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">char</span> <span class="n">c1</span> <span class="o">=</span> <span class="n">s1</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="kt">char</span> <span class="n">c2</span> <span class="o">=</span> <span class="n">s2</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            
            <span class="k">if</span><span class="p">(</span><span class="n">c1</span> <span class="o">&gt;=</span> <span class="mi">65</span> <span class="o">&amp;&amp;</span> <span class="n">c1</span> <span class="o">&lt;=</span> <span class="mi">90</span><span class="p">)</span>
                <span class="n">c1</span> <span class="o">+=</span> <span class="mi">32</span><span class="p">;</span>
            <span class="k">if</span><span class="p">(</span><span class="n">c2</span> <span class="o">&gt;=</span> <span class="mi">65</span> <span class="o">&amp;&amp;</span> <span class="n">c2</span> <span class="o">&lt;=</span> <span class="mi">90</span><span class="p">)</span>
                <span class="n">c2</span> <span class="o">+=</span> <span class="mi">32</span><span class="p">;</span>
            
            <span class="k">if</span><span class="p">(</span><span class="n">c1</span> <span class="o">!=</span> <span class="n">c2</span><span class="p">)</span>
                <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="nb">true</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="kt">int</span> <span class="n">cacheSize</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">cities</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">List</span><span class="p">;</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">Used</span><span class="p">;</span>
    
    <span class="k">if</span><span class="p">(</span><span class="n">cacheSize</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">cities</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">*</span> <span class="mi">5</span><span class="p">;</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">cities</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">bool</span> <span class="n">find</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">List</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">Same</span><span class="p">(</span><span class="n">cities</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">List</span><span class="p">[</span><span class="n">l</span><span class="p">]))</span>
            <span class="p">{</span>
                <span class="n">find</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                <span class="n">Used</span><span class="p">[</span><span class="n">l</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
                <span class="n">answer</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">find</span> <span class="o">==</span> <span class="nb">false</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">List</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&lt;</span> <span class="n">cacheSize</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">List</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">cities</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
                <span class="n">Used</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
                <span class="n">answer</span> <span class="o">+=</span> <span class="mi">5</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="kt">int</span> <span class="n">used</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">index</span><span class="p">;</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">List</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">Used</span><span class="p">[</span><span class="n">l</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">used</span><span class="p">)</span>
                    <span class="p">{</span>
                        <span class="n">used</span> <span class="o">=</span> <span class="n">Used</span><span class="p">[</span><span class="n">l</span><span class="p">];</span>
                        <span class="n">index</span> <span class="o">=</span> <span class="n">l</span><span class="p">;</span>
                    <span class="p">}</span>
                <span class="p">}</span>
                <span class="n">Used</span><span class="p">[</span><span class="n">index</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
                <span class="n">List</span><span class="p">[</span><span class="n">index</span><span class="p">]</span> <span class="o">=</span> <span class="n">cities</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="n">answer</span> <span class="o">+=</span> <span class="mi">5</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">Used</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">l</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Used</span><span class="p">[</span><span class="n">l</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 23분 30초
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.2" /><summary type="html"><![CDATA[Programmers - 17680]]></summary></entry><entry><title type="html">기능개발</title><link href="/codingtest/programmers/lv.2/2025-10-02-codingtest_118/" rel="alternate" type="text/html" title="기능개발" /><published>2025-10-02T00:00:00+00:00</published><updated>2025-10-25T14:59:10+00:00</updated><id>/codingtest/programmers/lv.2/codingtest_118</id><content type="html" xml:base="/codingtest/programmers/lv.2/2025-10-02-codingtest_118/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>프로그래머스 팀에서는 기능 개선 작업을 수행 중입니다. 각 기능은 진도가 100%일 때 서비스에 반영할 수 있습니다.</p>

<p>또, 각 기능의 개발속도는 모두 다르기 때문에 뒤에 있는 기능이 앞에 있는 기능보다 먼저 개발될 수 있고, 이때 뒤에 있는 기능은 앞에 있는 기능이 배포될 때 함께 배포됩니다.</p>

<p>먼저 배포되어야 하는 순서대로 작업의 진도가 적힌 정수 배열 progresses와 각 작업의 개발 속도가 적힌 정수 배열 speeds가 주어질 때 각 배포마다 몇 개의 기능이 배포되는지를 return 하도록 solution 함수를 완성하세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>작업의 개수(progresses, speeds배열의 길이)는 100개 이하입니다.</li>
  <li>작업 진도는 100 미만의 자연수입니다.</li>
  <li>작업 속도는 100 이하의 자연수입니다.</li>
  <li>배포는 하루에 한 번만 할 수 있으며, 하루의 끝에 이루어진다고 가정합니다. 예를 - 들어 진도율이 95%인 작업의 개발 속도가 하루에 4%라면 배포는 2일 뒤에 이루어집니다.</li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/42586.png" width="450" height="115" /></p>

<p>입출력 예 #1</p>
<ul>
  <li>첫 번째 기능은 93% 완료되어 있고 하루에 1%씩 작업이 가능하므로 7일간 작업 후 배포가 가능합니다.</li>
  <li>두 번째 기능은 30%가 완료되어 있고 하루에 30%씩 작업이 가능하므로 3일간 작업 후 배포가 가능합니다. 하지만 이전 첫 번째 기능이 아직 완성된 상태가 아니기 때문에 첫 번째 기능이 배포되는 7일째 배포됩니다.</li>
  <li>
    <p>세 번째 기능은 55%가 완료되어 있고 하루에 5%씩 작업이 가능하므로 9일간 작업 후 배포가 가능합니다.</p>
  </li>
  <li>따라서 7일째에 2개의 기능, 9일째에 1개의 기능이 배포됩니다.</li>
</ul>

<p>입출력 예 #2</p>
<ul>
  <li>
    <p>모든 기능이 하루에 1%씩 작업이 가능하므로, 작업이 끝나기까지 남은 일수는 각각 5일, 10일, 1일, 1일, 20일, 1일입니다. 어떤 기능이 먼저 완성되었더라도 앞에 있는 모든 기능이 완성되지 않으면 배포가 불가능합니다.</p>
  </li>
  <li>
    <p>따라서 5일째에 1개의 기능, 10일째에 3개의 기능, 20일째에 2개의 기능이 배포됩니다.</p>
  </li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">progresses</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">speeds</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">;</span>
    
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">day</span><span class="p">(</span><span class="n">progresses</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="mi">0</span><span class="p">);</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">progresses</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">day</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="mi">100</span> <span class="o">-</span> <span class="n">progresses</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="o">/</span> <span class="n">speeds</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        
        <span class="k">if</span><span class="p">((</span><span class="mi">100</span> <span class="o">-</span> <span class="n">progresses</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="o">%</span> <span class="n">speeds</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
            <span class="n">day</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">test</span> <span class="o">=</span> <span class="n">day</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">day</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">day</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="n">test</span><span class="p">)</span> 
            <span class="n">cnt</span><span class="o">++</span><span class="p">;</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">cnt</span><span class="p">);</span>
            <span class="n">cnt</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
            <span class="n">test</span> <span class="o">=</span> <span class="n">day</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">cnt</span><span class="p">);</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 O
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 12분
</p>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.2" /><summary type="html"><![CDATA[Programmers - 42586]]></summary></entry><entry><title type="html">피로도</title><link href="/codingtest/programmers/lv.2/2025-10-01-codingtest_117/" rel="alternate" type="text/html" title="피로도" /><published>2025-10-01T00:00:00+00:00</published><updated>2025-10-25T14:59:10+00:00</updated><id>/codingtest/programmers/lv.2/codingtest_117</id><content type="html" xml:base="/codingtest/programmers/lv.2/2025-10-01-codingtest_117/"><![CDATA[<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
문제 설명
</p>

<p>XX게임에는 피로도 시스템(0 이상의 정수로 표현합니다)이 있으며, 일정 피로도를 사용해서 던전을 탐험할 수 있습니다. 이때, 각 던전마다 탐험을 시작하기 위해 필요한 “최소 필요 피로도”와 던전 탐험을 마쳤을 때 소모되는 “소모 피로도”가 있습니다. “최소 필요 피로도”는 해당 던전을 탐험하기 위해 가지고 있어야 하는 최소한의 피로도를 나타내며, “소모 피로도”는 던전을 탐험한 후 소모되는 피로도를 나타냅니다. 예를 들어 “최소 필요 피로도”가 80, “소모 피로도”가 20인 던전을 탐험하기 위해서는 유저의 현재 남은 피로도는 80 이상 이어야 하며, 던전을 탐험한 후에는 피로도 20이 소모됩니다.</p>

<p>이 게임에는 하루에 한 번씩 탐험할 수 있는 던전이 여러개 있는데, 한 유저가 오늘 이 던전들을 최대한 많이 탐험하려 합니다. 유저의 현재 피로도 k와 각 던전별 “최소 필요 피로도”, “소모 피로도”가 담긴 2차원 배열 dungeons 가 매개변수로 주어질 때, 유저가 탐험할수 있는 최대 던전 수를 return 하도록 solution 함수를 완성해주세요.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
제한사항
</p>

<ul>
  <li>k는 1 이상 5,000 이하인 자연수입니다.</li>
  <li>dungeons의 세로(행) 길이(즉, 던전의 개수)는 1 이상 8 이하입니다.
    <ul>
      <li>dungeons의 가로(열) 길이는 2 입니다.</li>
      <li>dungeons의 각 행은 각 던전의 [“최소 필요 피로도”, “소모 피로도”] 입니다.</li>
      <li>“최소 필요 피로도”는 항상 “소모 피로도”보다 크거나 같습니다.</li>
      <li>“최소 필요 피로도”와 “소모 피로도”는 1 이상 1,000 이하인 자연수입니다.</li>
      <li>서로 다른 던전의 [“최소 필요 피로도”, “소모 피로도”]가 서로 같을 수 있습니다.</li>
    </ul>
  </li>
</ul>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
입출력 예 
</p>

<p><img src="/assets/img/codingtest/87946.png" width="400" height="85" /></p>

<p>현재 피로도는 80입니다.</p>

<p>만약, 첫 번째 → 두 번째 → 세 번째 던전 순서로 탐험한다면</p>

<ul>
  <li>현재 피로도는 80이며, 첫 번째 던전을 돌기위해 필요한 “최소 필요 피로도” 또한 80이므로, 첫 번째 던전을 탐험할 수 있습니다. 첫 번째 던전의 “소모 피로도”는 20이므로, 던전을 탐험한 후 남은 피로도는 60입니다.</li>
  <li>남은 피로도는 60이며, 두 번째 던전을 돌기위해 필요한 “최소 필요 피로도”는 50이므로, 두 번째 던전을 탐험할 수 있습니다. 두 번째 던전의 “소모 피로도”는 40이므로, 던전을 탐험한 후 남은 피로도는 20입니다.</li>
  <li>남은 피로도는 20이며, 세 번째 던전을 돌기위해 필요한 “최소 필요 피로도”는 30입니다. 따라서 세 번째 던전은 탐험할 수 없습니다.</li>
</ul>

<p>만약, 첫 번째 → 세 번째 → 두 번째 던전 순서로 탐험한다면</p>

<ul>
  <li>현재 피로도는 80이며, 첫 번째 던전을 돌기위해 필요한 “최소 필요 피로도” 또한 80이므로, 첫 번째 던전을 탐험할 수 있습니다. 첫 번째 던전의 “소모 피로도”는 20이므로, 던전을 탐험한 후 남은 피로도는 60입니다.</li>
  <li>남은 피로도는 60이며, 세 번째 던전을 돌기위해 필요한 “최소 필요 피로도”는 30이므로, 세 번째 던전을 탐험할 수 있습니다. 세 번째 던전의 “소모 피로도”는 10이므로, 던전을 탐험한 후 남은 피로도는 50입니다.</li>
  <li>남은 피로도는 50이며, 두 번째 던전을 돌기위해 필요한 “최소 필요 피로도”는 50이므로, 두 번째 던전을 탐험할 수 있습니다. 두 번째 던전의 “소모 피로도”는 40이므로, 던전을 탐험한 후 남은 피로도는 10입니다.</li>
</ul>

<p>따라서 이 경우 세 던전을 모두 탐험할 수 있으며, 유저가 탐험할 수 있는 최대 던전 수는 3입니다.</p>

<hr />

<p style="color:#8f7cee; font-size:25px; font-weight:bold">
작성 내용
</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">void</span> <span class="nf">dfs</span><span class="p">(</span><span class="kt">int</span> <span class="n">k</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;&amp;</span> <span class="n">dungeons</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&amp;</span> <span class="n">Used</span><span class="p">,</span> <span class="kt">int</span> <span class="n">count</span><span class="p">,</span> <span class="kt">int</span><span class="o">&amp;</span> <span class="n">answer</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span><span class="p">(</span><span class="n">count</span> <span class="o">&gt;</span> <span class="n">answer</span><span class="p">)</span> 
        <span class="n">answer</span> <span class="o">=</span> <span class="n">count</span><span class="p">;</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">dungeons</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">Used</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="n">k</span> <span class="o">&gt;=</span> <span class="n">dungeons</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span>
        <span class="p">{</span>
            <span class="n">Used</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
            <span class="n">dfs</span><span class="p">(</span><span class="n">k</span> <span class="o">-</span> <span class="n">dungeons</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span> <span class="n">dungeons</span><span class="p">,</span> <span class="n">Used</span><span class="p">,</span> <span class="n">count</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">answer</span><span class="p">);</span>
            <span class="n">Used</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="kt">int</span> <span class="n">k</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">dungeons</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">Used</span><span class="p">(</span><span class="n">dungeons</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="mi">0</span><span class="p">);</span>
    
    <span class="n">dfs</span><span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="n">dungeons</span><span class="p">,</span> <span class="n">Used</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">answer</span><span class="p">);</span>
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
정답 여부 X
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
소요 시간 : 49분
</p>

<p style="color:#ed9ece; font-size:20px; font-weight:bold">
문제 소감
</p>

<ul>
  <li>DFS 탐색을 이용하여 모든 경우 탐색</li>
</ul>]]></content><author><name>Roseanne5218</name><email>Roseanne5218@gmail.com</email></author><category term="codingtest" /><category term="programmers" /><category term="Lv.2" /><summary type="html"><![CDATA[Programmers - 87946]]></summary></entry></feed>